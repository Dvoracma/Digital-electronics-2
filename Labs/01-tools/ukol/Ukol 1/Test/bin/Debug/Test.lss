
bin/Debug/Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00001eb2  00001f46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001eb2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00001f46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000011  00000000  00000000  00001f49  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00001f60  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a61  00000000  00000000  00001fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000150  00000000  00000000  00002a19  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000560  00000000  00000000  00002b69  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  000030cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000f8  00000000  00000000  0000310c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000062  00000000  00000000  00003204  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00003266  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
       8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
       c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
      64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61
      74:	0e 94 40 00 	call	0x80	; 0x80 <main>
      78:	0c 94 57 0f 	jmp	0x1eae	; 0x1eae <_exit>

0000007c <__bad_interrupt>:
      7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

 */

int main(void)

{
      80:	0f 93       	push	r16
      82:	1f 93       	push	r17
      84:	cf 93       	push	r28
      86:	df 93       	push	r29
      88:	cd b7       	in	r28, 0x3d	; 61
      8a:	de b7       	in	r29, 0x3e	; 62
      8c:	ca 50       	subi	r28, 0x0A	; 10
      8e:	d1 40       	sbci	r29, 0x01	; 1
      90:	0f b6       	in	r0, 0x3f	; 63
      92:	f8 94       	cli
      94:	de bf       	out	0x3e, r29	; 62
      96:	0f be       	out	0x3f, r0	; 63
      98:	cd bf       	out	0x3d, r28	; 61

    // Set pin as output in Data Direction Register

    // DDRB = DDRB or 0010 0000

    DDRB = DDRB | (1<<LED_GREEN);
      9a:	84 e2       	ldi	r24, 0x24	; 36
      9c:	90 e0       	ldi	r25, 0x00	; 0
      9e:	24 e2       	ldi	r18, 0x24	; 36
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	f9 01       	movw	r30, r18
      a4:	20 81       	ld	r18, Z
      a6:	20 62       	ori	r18, 0x20	; 32
      a8:	fc 01       	movw	r30, r24
      aa:	20 83       	st	Z, r18

    // Set pin LOW in Data Register (LED off)

    // PORTB = PORTB and 1101 1111

    PORTB = PORTB & ~(1<<LED_GREEN);
      ac:	85 e2       	ldi	r24, 0x25	; 37
      ae:	90 e0       	ldi	r25, 0x00	; 0
      b0:	25 e2       	ldi	r18, 0x25	; 37
      b2:	30 e0       	ldi	r19, 0x00	; 0
      b4:	f9 01       	movw	r30, r18
      b6:	20 81       	ld	r18, Z
      b8:	2f 7d       	andi	r18, 0xDF	; 223
      ba:	fc 01       	movw	r30, r24
      bc:	20 83       	st	Z, r18
      be:	80 e0       	ldi	r24, 0x00	; 0
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	aa ef       	ldi	r26, 0xFA	; 250
      c4:	b3 e4       	ldi	r27, 0x43	; 67
      c6:	89 83       	std	Y+1, r24	; 0x01
      c8:	9a 83       	std	Y+2, r25	; 0x02
      ca:	ab 83       	std	Y+3, r26	; 0x03
      cc:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
      ce:	20 e0       	ldi	r18, 0x00	; 0
      d0:	30 e0       	ldi	r19, 0x00	; 0
      d2:	4a e7       	ldi	r20, 0x7A	; 122
      d4:	55 e4       	ldi	r21, 0x45	; 69
      d6:	69 81       	ldd	r22, Y+1	; 0x01
      d8:	7a 81       	ldd	r23, Y+2	; 0x02
      da:	8b 81       	ldd	r24, Y+3	; 0x03
      dc:	9c 81       	ldd	r25, Y+4	; 0x04
      de:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
      e2:	dc 01       	movw	r26, r24
      e4:	cb 01       	movw	r24, r22
      e6:	8d 83       	std	Y+5, r24	; 0x05
      e8:	9e 83       	std	Y+6, r25	; 0x06
      ea:	af 83       	std	Y+7, r26	; 0x07
      ec:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
      ee:	20 e0       	ldi	r18, 0x00	; 0
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	40 e8       	ldi	r20, 0x80	; 128
      f4:	5f e3       	ldi	r21, 0x3F	; 63
      f6:	6d 81       	ldd	r22, Y+5	; 0x05
      f8:	7e 81       	ldd	r23, Y+6	; 0x06
      fa:	8f 81       	ldd	r24, Y+7	; 0x07
      fc:	98 85       	ldd	r25, Y+8	; 0x08
      fe:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     102:	88 23       	and	r24, r24
     104:	2c f4       	brge	.+10     	; 0x110 <main+0x90>
		__ticks = 1;
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	9a 87       	std	Y+10, r25	; 0x0a
     10c:	89 87       	std	Y+9, r24	; 0x09
     10e:	3f c0       	rjmp	.+126    	; 0x18e <main+0x10e>
	else if (__tmp > 65535)
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	3f ef       	ldi	r19, 0xFF	; 255
     114:	4f e7       	ldi	r20, 0x7F	; 127
     116:	57 e4       	ldi	r21, 0x47	; 71
     118:	6d 81       	ldd	r22, Y+5	; 0x05
     11a:	7e 81       	ldd	r23, Y+6	; 0x06
     11c:	8f 81       	ldd	r24, Y+7	; 0x07
     11e:	98 85       	ldd	r25, Y+8	; 0x08
     120:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     124:	18 16       	cp	r1, r24
     126:	4c f5       	brge	.+82     	; 0x17a <main+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     128:	20 e0       	ldi	r18, 0x00	; 0
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	40 e2       	ldi	r20, 0x20	; 32
     12e:	51 e4       	ldi	r21, 0x41	; 65
     130:	69 81       	ldd	r22, Y+1	; 0x01
     132:	7a 81       	ldd	r23, Y+2	; 0x02
     134:	8b 81       	ldd	r24, Y+3	; 0x03
     136:	9c 81       	ldd	r25, Y+4	; 0x04
     138:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     13c:	dc 01       	movw	r26, r24
     13e:	cb 01       	movw	r24, r22
     140:	bc 01       	movw	r22, r24
     142:	cd 01       	movw	r24, r26
     144:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     148:	dc 01       	movw	r26, r24
     14a:	cb 01       	movw	r24, r22
     14c:	9a 87       	std	Y+10, r25	; 0x0a
     14e:	89 87       	std	Y+9, r24	; 0x09
     150:	0f c0       	rjmp	.+30     	; 0x170 <main+0xf0>
     152:	80 e9       	ldi	r24, 0x90	; 144
     154:	91 e0       	ldi	r25, 0x01	; 1
     156:	9c 87       	std	Y+12, r25	; 0x0c
     158:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     15a:	8b 85       	ldd	r24, Y+11	; 0x0b
     15c:	9c 85       	ldd	r25, Y+12	; 0x0c
     15e:	01 97       	sbiw	r24, 0x01	; 1
     160:	f1 f7       	brne	.-4      	; 0x15e <main+0xde>
     162:	9c 87       	std	Y+12, r25	; 0x0c
     164:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     166:	89 85       	ldd	r24, Y+9	; 0x09
     168:	9a 85       	ldd	r25, Y+10	; 0x0a
     16a:	01 97       	sbiw	r24, 0x01	; 1
     16c:	9a 87       	std	Y+10, r25	; 0x0a
     16e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     170:	89 85       	ldd	r24, Y+9	; 0x09
     172:	9a 85       	ldd	r25, Y+10	; 0x0a
     174:	00 97       	sbiw	r24, 0x00	; 0
     176:	69 f7       	brne	.-38     	; 0x152 <main+0xd2>
     178:	14 c0       	rjmp	.+40     	; 0x1a2 <main+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     17a:	6d 81       	ldd	r22, Y+5	; 0x05
     17c:	7e 81       	ldd	r23, Y+6	; 0x06
     17e:	8f 81       	ldd	r24, Y+7	; 0x07
     180:	98 85       	ldd	r25, Y+8	; 0x08
     182:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     186:	dc 01       	movw	r26, r24
     188:	cb 01       	movw	r24, r22
     18a:	9a 87       	std	Y+10, r25	; 0x0a
     18c:	89 87       	std	Y+9, r24	; 0x09
     18e:	89 85       	ldd	r24, Y+9	; 0x09
     190:	9a 85       	ldd	r25, Y+10	; 0x0a
     192:	9e 87       	std	Y+14, r25	; 0x0e
     194:	8d 87       	std	Y+13, r24	; 0x0d
     196:	8d 85       	ldd	r24, Y+13	; 0x0d
     198:	9e 85       	ldd	r25, Y+14	; 0x0e
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <main+0x11a>
     19e:	9e 87       	std	Y+14, r25	; 0x0e
     1a0:	8d 87       	std	Y+13, r24	; 0x0d
        // PORTB = PORTB xor 0010 0000


        // D

        PORTB = PORTB ^ (1<<LED_GREEN);     // -
     1a2:	85 e2       	ldi	r24, 0x25	; 37
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	25 e2       	ldi	r18, 0x25	; 37
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	f9 01       	movw	r30, r18
     1ac:	30 81       	ld	r19, Z
     1ae:	20 e2       	ldi	r18, 0x20	; 32
     1b0:	23 27       	eor	r18, r19
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 83       	st	Z, r18
     1b6:	80 e0       	ldi	r24, 0x00	; 0
     1b8:	90 e0       	ldi	r25, 0x00	; 0
     1ba:	a6 e9       	ldi	r26, 0x96	; 150
     1bc:	b3 e4       	ldi	r27, 0x43	; 67
     1be:	8f 87       	std	Y+15, r24	; 0x0f
     1c0:	98 8b       	std	Y+16, r25	; 0x10
     1c2:	a9 8b       	std	Y+17, r26	; 0x11
     1c4:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1c6:	20 e0       	ldi	r18, 0x00	; 0
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	4a e7       	ldi	r20, 0x7A	; 122
     1cc:	55 e4       	ldi	r21, 0x45	; 69
     1ce:	6f 85       	ldd	r22, Y+15	; 0x0f
     1d0:	78 89       	ldd	r23, Y+16	; 0x10
     1d2:	89 89       	ldd	r24, Y+17	; 0x11
     1d4:	9a 89       	ldd	r25, Y+18	; 0x12
     1d6:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     1da:	dc 01       	movw	r26, r24
     1dc:	cb 01       	movw	r24, r22
     1de:	8b 8b       	std	Y+19, r24	; 0x13
     1e0:	9c 8b       	std	Y+20, r25	; 0x14
     1e2:	ad 8b       	std	Y+21, r26	; 0x15
     1e4:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     1e6:	20 e0       	ldi	r18, 0x00	; 0
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	40 e8       	ldi	r20, 0x80	; 128
     1ec:	5f e3       	ldi	r21, 0x3F	; 63
     1ee:	6b 89       	ldd	r22, Y+19	; 0x13
     1f0:	7c 89       	ldd	r23, Y+20	; 0x14
     1f2:	8d 89       	ldd	r24, Y+21	; 0x15
     1f4:	9e 89       	ldd	r25, Y+22	; 0x16
     1f6:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     1fa:	88 23       	and	r24, r24
     1fc:	2c f4       	brge	.+10     	; 0x208 <main+0x188>
		__ticks = 1;
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	98 8f       	std	Y+24, r25	; 0x18
     204:	8f 8b       	std	Y+23, r24	; 0x17
     206:	3f c0       	rjmp	.+126    	; 0x286 <main+0x206>
	else if (__tmp > 65535)
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	3f ef       	ldi	r19, 0xFF	; 255
     20c:	4f e7       	ldi	r20, 0x7F	; 127
     20e:	57 e4       	ldi	r21, 0x47	; 71
     210:	6b 89       	ldd	r22, Y+19	; 0x13
     212:	7c 89       	ldd	r23, Y+20	; 0x14
     214:	8d 89       	ldd	r24, Y+21	; 0x15
     216:	9e 89       	ldd	r25, Y+22	; 0x16
     218:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     21c:	18 16       	cp	r1, r24
     21e:	4c f5       	brge	.+82     	; 0x272 <main+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     220:	20 e0       	ldi	r18, 0x00	; 0
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e2       	ldi	r20, 0x20	; 32
     226:	51 e4       	ldi	r21, 0x41	; 65
     228:	6f 85       	ldd	r22, Y+15	; 0x0f
     22a:	78 89       	ldd	r23, Y+16	; 0x10
     22c:	89 89       	ldd	r24, Y+17	; 0x11
     22e:	9a 89       	ldd	r25, Y+18	; 0x12
     230:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     234:	dc 01       	movw	r26, r24
     236:	cb 01       	movw	r24, r22
     238:	bc 01       	movw	r22, r24
     23a:	cd 01       	movw	r24, r26
     23c:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     240:	dc 01       	movw	r26, r24
     242:	cb 01       	movw	r24, r22
     244:	98 8f       	std	Y+24, r25	; 0x18
     246:	8f 8b       	std	Y+23, r24	; 0x17
     248:	0f c0       	rjmp	.+30     	; 0x268 <main+0x1e8>
     24a:	80 e9       	ldi	r24, 0x90	; 144
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	9a 8f       	std	Y+26, r25	; 0x1a
     250:	89 8f       	std	Y+25, r24	; 0x19
     252:	89 8d       	ldd	r24, Y+25	; 0x19
     254:	9a 8d       	ldd	r25, Y+26	; 0x1a
     256:	01 97       	sbiw	r24, 0x01	; 1
     258:	f1 f7       	brne	.-4      	; 0x256 <main+0x1d6>
     25a:	9a 8f       	std	Y+26, r25	; 0x1a
     25c:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     25e:	8f 89       	ldd	r24, Y+23	; 0x17
     260:	98 8d       	ldd	r25, Y+24	; 0x18
     262:	01 97       	sbiw	r24, 0x01	; 1
     264:	98 8f       	std	Y+24, r25	; 0x18
     266:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     268:	8f 89       	ldd	r24, Y+23	; 0x17
     26a:	98 8d       	ldd	r25, Y+24	; 0x18
     26c:	00 97       	sbiw	r24, 0x00	; 0
     26e:	69 f7       	brne	.-38     	; 0x24a <main+0x1ca>
     270:	14 c0       	rjmp	.+40     	; 0x29a <main+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     272:	6b 89       	ldd	r22, Y+19	; 0x13
     274:	7c 89       	ldd	r23, Y+20	; 0x14
     276:	8d 89       	ldd	r24, Y+21	; 0x15
     278:	9e 89       	ldd	r25, Y+22	; 0x16
     27a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     27e:	dc 01       	movw	r26, r24
     280:	cb 01       	movw	r24, r22
     282:	98 8f       	std	Y+24, r25	; 0x18
     284:	8f 8b       	std	Y+23, r24	; 0x17
     286:	8f 89       	ldd	r24, Y+23	; 0x17
     288:	98 8d       	ldd	r25, Y+24	; 0x18
     28a:	9c 8f       	std	Y+28, r25	; 0x1c
     28c:	8b 8f       	std	Y+27, r24	; 0x1b
     28e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     290:	9c 8d       	ldd	r25, Y+28	; 0x1c
     292:	01 97       	sbiw	r24, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <main+0x212>
     296:	9c 8f       	std	Y+28, r25	; 0x1c
     298:	8b 8f       	std	Y+27, r24	; 0x1b
        _delay_ms(LONG_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
     29a:	85 e2       	ldi	r24, 0x25	; 37
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	25 e2       	ldi	r18, 0x25	; 37
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	f9 01       	movw	r30, r18
     2a4:	30 81       	ld	r19, Z
     2a6:	20 e2       	ldi	r18, 0x20	; 32
     2a8:	23 27       	eor	r18, r19
     2aa:	fc 01       	movw	r30, r24
     2ac:	20 83       	st	Z, r18
     2ae:	80 e0       	ldi	r24, 0x00	; 0
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	a8 ec       	ldi	r26, 0xC8	; 200
     2b4:	b2 e4       	ldi	r27, 0x42	; 66
     2b6:	8d 8f       	std	Y+29, r24	; 0x1d
     2b8:	9e 8f       	std	Y+30, r25	; 0x1e
     2ba:	af 8f       	std	Y+31, r26	; 0x1f
     2bc:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	4a e7       	ldi	r20, 0x7A	; 122
     2c4:	55 e4       	ldi	r21, 0x45	; 69
     2c6:	6d 8d       	ldd	r22, Y+29	; 0x1d
     2c8:	7e 8d       	ldd	r23, Y+30	; 0x1e
     2ca:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2cc:	98 a1       	ldd	r25, Y+32	; 0x20
     2ce:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     2d2:	dc 01       	movw	r26, r24
     2d4:	cb 01       	movw	r24, r22
     2d6:	89 a3       	std	Y+33, r24	; 0x21
     2d8:	9a a3       	std	Y+34, r25	; 0x22
     2da:	ab a3       	std	Y+35, r26	; 0x23
     2dc:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     2de:	20 e0       	ldi	r18, 0x00	; 0
     2e0:	30 e0       	ldi	r19, 0x00	; 0
     2e2:	40 e8       	ldi	r20, 0x80	; 128
     2e4:	5f e3       	ldi	r21, 0x3F	; 63
     2e6:	69 a1       	ldd	r22, Y+33	; 0x21
     2e8:	7a a1       	ldd	r23, Y+34	; 0x22
     2ea:	8b a1       	ldd	r24, Y+35	; 0x23
     2ec:	9c a1       	ldd	r25, Y+36	; 0x24
     2ee:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     2f2:	88 23       	and	r24, r24
     2f4:	2c f4       	brge	.+10     	; 0x300 <main+0x280>
		__ticks = 1;
     2f6:	81 e0       	ldi	r24, 0x01	; 1
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	9e a3       	std	Y+38, r25	; 0x26
     2fc:	8d a3       	std	Y+37, r24	; 0x25
     2fe:	3f c0       	rjmp	.+126    	; 0x37e <main+0x2fe>
	else if (__tmp > 65535)
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	3f ef       	ldi	r19, 0xFF	; 255
     304:	4f e7       	ldi	r20, 0x7F	; 127
     306:	57 e4       	ldi	r21, 0x47	; 71
     308:	69 a1       	ldd	r22, Y+33	; 0x21
     30a:	7a a1       	ldd	r23, Y+34	; 0x22
     30c:	8b a1       	ldd	r24, Y+35	; 0x23
     30e:	9c a1       	ldd	r25, Y+36	; 0x24
     310:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     314:	18 16       	cp	r1, r24
     316:	4c f5       	brge	.+82     	; 0x36a <main+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	40 e2       	ldi	r20, 0x20	; 32
     31e:	51 e4       	ldi	r21, 0x41	; 65
     320:	6d 8d       	ldd	r22, Y+29	; 0x1d
     322:	7e 8d       	ldd	r23, Y+30	; 0x1e
     324:	8f 8d       	ldd	r24, Y+31	; 0x1f
     326:	98 a1       	ldd	r25, Y+32	; 0x20
     328:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     32c:	dc 01       	movw	r26, r24
     32e:	cb 01       	movw	r24, r22
     330:	bc 01       	movw	r22, r24
     332:	cd 01       	movw	r24, r26
     334:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     338:	dc 01       	movw	r26, r24
     33a:	cb 01       	movw	r24, r22
     33c:	9e a3       	std	Y+38, r25	; 0x26
     33e:	8d a3       	std	Y+37, r24	; 0x25
     340:	0f c0       	rjmp	.+30     	; 0x360 <main+0x2e0>
     342:	80 e9       	ldi	r24, 0x90	; 144
     344:	91 e0       	ldi	r25, 0x01	; 1
     346:	98 a7       	std	Y+40, r25	; 0x28
     348:	8f a3       	std	Y+39, r24	; 0x27
     34a:	8f a1       	ldd	r24, Y+39	; 0x27
     34c:	98 a5       	ldd	r25, Y+40	; 0x28
     34e:	01 97       	sbiw	r24, 0x01	; 1
     350:	f1 f7       	brne	.-4      	; 0x34e <main+0x2ce>
     352:	98 a7       	std	Y+40, r25	; 0x28
     354:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     356:	8d a1       	ldd	r24, Y+37	; 0x25
     358:	9e a1       	ldd	r25, Y+38	; 0x26
     35a:	01 97       	sbiw	r24, 0x01	; 1
     35c:	9e a3       	std	Y+38, r25	; 0x26
     35e:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     360:	8d a1       	ldd	r24, Y+37	; 0x25
     362:	9e a1       	ldd	r25, Y+38	; 0x26
     364:	00 97       	sbiw	r24, 0x00	; 0
     366:	69 f7       	brne	.-38     	; 0x342 <main+0x2c2>
     368:	14 c0       	rjmp	.+40     	; 0x392 <main+0x312>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     36a:	69 a1       	ldd	r22, Y+33	; 0x21
     36c:	7a a1       	ldd	r23, Y+34	; 0x22
     36e:	8b a1       	ldd	r24, Y+35	; 0x23
     370:	9c a1       	ldd	r25, Y+36	; 0x24
     372:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     376:	dc 01       	movw	r26, r24
     378:	cb 01       	movw	r24, r22
     37a:	9e a3       	std	Y+38, r25	; 0x26
     37c:	8d a3       	std	Y+37, r24	; 0x25
     37e:	8d a1       	ldd	r24, Y+37	; 0x25
     380:	9e a1       	ldd	r25, Y+38	; 0x26
     382:	9a a7       	std	Y+42, r25	; 0x2a
     384:	89 a7       	std	Y+41, r24	; 0x29
     386:	89 a5       	ldd	r24, Y+41	; 0x29
     388:	9a a5       	ldd	r25, Y+42	; 0x2a
     38a:	01 97       	sbiw	r24, 0x01	; 1
     38c:	f1 f7       	brne	.-4      	; 0x38a <main+0x30a>
     38e:	9a a7       	std	Y+42, r25	; 0x2a
     390:	89 a7       	std	Y+41, r24	; 0x29
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);     // .
     392:	85 e2       	ldi	r24, 0x25	; 37
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	25 e2       	ldi	r18, 0x25	; 37
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	f9 01       	movw	r30, r18
     39c:	30 81       	ld	r19, Z
     39e:	20 e2       	ldi	r18, 0x20	; 32
     3a0:	23 27       	eor	r18, r19
     3a2:	fc 01       	movw	r30, r24
     3a4:	20 83       	st	Z, r18
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	a8 ec       	ldi	r26, 0xC8	; 200
     3ac:	b2 e4       	ldi	r27, 0x42	; 66
     3ae:	8b a7       	std	Y+43, r24	; 0x2b
     3b0:	9c a7       	std	Y+44, r25	; 0x2c
     3b2:	ad a7       	std	Y+45, r26	; 0x2d
     3b4:	be a7       	std	Y+46, r27	; 0x2e

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     3b6:	20 e0       	ldi	r18, 0x00	; 0
     3b8:	30 e0       	ldi	r19, 0x00	; 0
     3ba:	4a e7       	ldi	r20, 0x7A	; 122
     3bc:	55 e4       	ldi	r21, 0x45	; 69
     3be:	6b a5       	ldd	r22, Y+43	; 0x2b
     3c0:	7c a5       	ldd	r23, Y+44	; 0x2c
     3c2:	8d a5       	ldd	r24, Y+45	; 0x2d
     3c4:	9e a5       	ldd	r25, Y+46	; 0x2e
     3c6:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     3ca:	dc 01       	movw	r26, r24
     3cc:	cb 01       	movw	r24, r22
     3ce:	8f a7       	std	Y+47, r24	; 0x2f
     3d0:	98 ab       	std	Y+48, r25	; 0x30
     3d2:	a9 ab       	std	Y+49, r26	; 0x31
     3d4:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     3d6:	20 e0       	ldi	r18, 0x00	; 0
     3d8:	30 e0       	ldi	r19, 0x00	; 0
     3da:	40 e8       	ldi	r20, 0x80	; 128
     3dc:	5f e3       	ldi	r21, 0x3F	; 63
     3de:	6f a5       	ldd	r22, Y+47	; 0x2f
     3e0:	78 a9       	ldd	r23, Y+48	; 0x30
     3e2:	89 a9       	ldd	r24, Y+49	; 0x31
     3e4:	9a a9       	ldd	r25, Y+50	; 0x32
     3e6:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     3ea:	88 23       	and	r24, r24
     3ec:	2c f4       	brge	.+10     	; 0x3f8 <main+0x378>
		__ticks = 1;
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	9c ab       	std	Y+52, r25	; 0x34
     3f4:	8b ab       	std	Y+51, r24	; 0x33
     3f6:	3f c0       	rjmp	.+126    	; 0x476 <main+0x3f6>
	else if (__tmp > 65535)
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	3f ef       	ldi	r19, 0xFF	; 255
     3fc:	4f e7       	ldi	r20, 0x7F	; 127
     3fe:	57 e4       	ldi	r21, 0x47	; 71
     400:	6f a5       	ldd	r22, Y+47	; 0x2f
     402:	78 a9       	ldd	r23, Y+48	; 0x30
     404:	89 a9       	ldd	r24, Y+49	; 0x31
     406:	9a a9       	ldd	r25, Y+50	; 0x32
     408:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     40c:	18 16       	cp	r1, r24
     40e:	4c f5       	brge	.+82     	; 0x462 <main+0x3e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     410:	20 e0       	ldi	r18, 0x00	; 0
     412:	30 e0       	ldi	r19, 0x00	; 0
     414:	40 e2       	ldi	r20, 0x20	; 32
     416:	51 e4       	ldi	r21, 0x41	; 65
     418:	6b a5       	ldd	r22, Y+43	; 0x2b
     41a:	7c a5       	ldd	r23, Y+44	; 0x2c
     41c:	8d a5       	ldd	r24, Y+45	; 0x2d
     41e:	9e a5       	ldd	r25, Y+46	; 0x2e
     420:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     424:	dc 01       	movw	r26, r24
     426:	cb 01       	movw	r24, r22
     428:	bc 01       	movw	r22, r24
     42a:	cd 01       	movw	r24, r26
     42c:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     430:	dc 01       	movw	r26, r24
     432:	cb 01       	movw	r24, r22
     434:	9c ab       	std	Y+52, r25	; 0x34
     436:	8b ab       	std	Y+51, r24	; 0x33
     438:	0f c0       	rjmp	.+30     	; 0x458 <main+0x3d8>
     43a:	80 e9       	ldi	r24, 0x90	; 144
     43c:	91 e0       	ldi	r25, 0x01	; 1
     43e:	9e ab       	std	Y+54, r25	; 0x36
     440:	8d ab       	std	Y+53, r24	; 0x35
     442:	8d a9       	ldd	r24, Y+53	; 0x35
     444:	9e a9       	ldd	r25, Y+54	; 0x36
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	f1 f7       	brne	.-4      	; 0x446 <main+0x3c6>
     44a:	9e ab       	std	Y+54, r25	; 0x36
     44c:	8d ab       	std	Y+53, r24	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     44e:	8b a9       	ldd	r24, Y+51	; 0x33
     450:	9c a9       	ldd	r25, Y+52	; 0x34
     452:	01 97       	sbiw	r24, 0x01	; 1
     454:	9c ab       	std	Y+52, r25	; 0x34
     456:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     458:	8b a9       	ldd	r24, Y+51	; 0x33
     45a:	9c a9       	ldd	r25, Y+52	; 0x34
     45c:	00 97       	sbiw	r24, 0x00	; 0
     45e:	69 f7       	brne	.-38     	; 0x43a <main+0x3ba>
     460:	14 c0       	rjmp	.+40     	; 0x48a <main+0x40a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     462:	6f a5       	ldd	r22, Y+47	; 0x2f
     464:	78 a9       	ldd	r23, Y+48	; 0x30
     466:	89 a9       	ldd	r24, Y+49	; 0x31
     468:	9a a9       	ldd	r25, Y+50	; 0x32
     46a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     46e:	dc 01       	movw	r26, r24
     470:	cb 01       	movw	r24, r22
     472:	9c ab       	std	Y+52, r25	; 0x34
     474:	8b ab       	std	Y+51, r24	; 0x33
     476:	8b a9       	ldd	r24, Y+51	; 0x33
     478:	9c a9       	ldd	r25, Y+52	; 0x34
     47a:	98 af       	std	Y+56, r25	; 0x38
     47c:	8f ab       	std	Y+55, r24	; 0x37
     47e:	8f a9       	ldd	r24, Y+55	; 0x37
     480:	98 ad       	ldd	r25, Y+56	; 0x38
     482:	01 97       	sbiw	r24, 0x01	; 1
     484:	f1 f7       	brne	.-4      	; 0x482 <main+0x402>
     486:	98 af       	std	Y+56, r25	; 0x38
     488:	8f ab       	std	Y+55, r24	; 0x37
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
     48a:	85 e2       	ldi	r24, 0x25	; 37
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	25 e2       	ldi	r18, 0x25	; 37
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	f9 01       	movw	r30, r18
     494:	30 81       	ld	r19, Z
     496:	20 e2       	ldi	r18, 0x20	; 32
     498:	23 27       	eor	r18, r19
     49a:	fc 01       	movw	r30, r24
     49c:	20 83       	st	Z, r18
     49e:	80 e0       	ldi	r24, 0x00	; 0
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	a8 ec       	ldi	r26, 0xC8	; 200
     4a4:	b2 e4       	ldi	r27, 0x42	; 66
     4a6:	89 af       	std	Y+57, r24	; 0x39
     4a8:	9a af       	std	Y+58, r25	; 0x3a
     4aa:	ab af       	std	Y+59, r26	; 0x3b
     4ac:	bc af       	std	Y+60, r27	; 0x3c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	4a e7       	ldi	r20, 0x7A	; 122
     4b4:	55 e4       	ldi	r21, 0x45	; 69
     4b6:	69 ad       	ldd	r22, Y+57	; 0x39
     4b8:	7a ad       	ldd	r23, Y+58	; 0x3a
     4ba:	8b ad       	ldd	r24, Y+59	; 0x3b
     4bc:	9c ad       	ldd	r25, Y+60	; 0x3c
     4be:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     4c2:	dc 01       	movw	r26, r24
     4c4:	cb 01       	movw	r24, r22
     4c6:	9e 01       	movw	r18, r28
     4c8:	23 5c       	subi	r18, 0xC3	; 195
     4ca:	3f 4f       	sbci	r19, 0xFF	; 255
     4cc:	f9 01       	movw	r30, r18
     4ce:	80 83       	st	Z, r24
     4d0:	91 83       	std	Z+1, r25	; 0x01
     4d2:	a2 83       	std	Z+2, r26	; 0x02
     4d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     4d6:	20 e0       	ldi	r18, 0x00	; 0
     4d8:	30 e0       	ldi	r19, 0x00	; 0
     4da:	40 e8       	ldi	r20, 0x80	; 128
     4dc:	5f e3       	ldi	r21, 0x3F	; 63
     4de:	ce 01       	movw	r24, r28
     4e0:	cd 96       	adiw	r24, 0x3d	; 61
     4e2:	fc 01       	movw	r30, r24
     4e4:	60 81       	ld	r22, Z
     4e6:	71 81       	ldd	r23, Z+1	; 0x01
     4e8:	82 81       	ldd	r24, Z+2	; 0x02
     4ea:	93 81       	ldd	r25, Z+3	; 0x03
     4ec:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     4f0:	88 23       	and	r24, r24
     4f2:	4c f4       	brge	.+18     	; 0x506 <main+0x486>
		__ticks = 1;
     4f4:	ce 01       	movw	r24, r28
     4f6:	8f 5b       	subi	r24, 0xBF	; 191
     4f8:	9f 4f       	sbci	r25, 0xFF	; 255
     4fa:	21 e0       	ldi	r18, 0x01	; 1
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	fc 01       	movw	r30, r24
     500:	31 83       	std	Z+1, r19	; 0x01
     502:	20 83       	st	Z, r18
     504:	67 c0       	rjmp	.+206    	; 0x5d4 <main+0x554>
	else if (__tmp > 65535)
     506:	20 e0       	ldi	r18, 0x00	; 0
     508:	3f ef       	ldi	r19, 0xFF	; 255
     50a:	4f e7       	ldi	r20, 0x7F	; 127
     50c:	57 e4       	ldi	r21, 0x47	; 71
     50e:	ce 01       	movw	r24, r28
     510:	cd 96       	adiw	r24, 0x3d	; 61
     512:	fc 01       	movw	r30, r24
     514:	60 81       	ld	r22, Z
     516:	71 81       	ldd	r23, Z+1	; 0x01
     518:	82 81       	ldd	r24, Z+2	; 0x02
     51a:	93 81       	ldd	r25, Z+3	; 0x03
     51c:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     520:	18 16       	cp	r1, r24
     522:	0c f0       	brlt	.+2      	; 0x526 <main+0x4a6>
     524:	46 c0       	rjmp	.+140    	; 0x5b2 <main+0x532>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     526:	20 e0       	ldi	r18, 0x00	; 0
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	40 e2       	ldi	r20, 0x20	; 32
     52c:	51 e4       	ldi	r21, 0x41	; 65
     52e:	69 ad       	ldd	r22, Y+57	; 0x39
     530:	7a ad       	ldd	r23, Y+58	; 0x3a
     532:	8b ad       	ldd	r24, Y+59	; 0x3b
     534:	9c ad       	ldd	r25, Y+60	; 0x3c
     536:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     53a:	dc 01       	movw	r26, r24
     53c:	cb 01       	movw	r24, r22
     53e:	8e 01       	movw	r16, r28
     540:	0f 5b       	subi	r16, 0xBF	; 191
     542:	1f 4f       	sbci	r17, 0xFF	; 255
     544:	bc 01       	movw	r22, r24
     546:	cd 01       	movw	r24, r26
     548:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     54c:	dc 01       	movw	r26, r24
     54e:	cb 01       	movw	r24, r22
     550:	f8 01       	movw	r30, r16
     552:	91 83       	std	Z+1, r25	; 0x01
     554:	80 83       	st	Z, r24
     556:	24 c0       	rjmp	.+72     	; 0x5a0 <main+0x520>
     558:	ce 01       	movw	r24, r28
     55a:	8d 5b       	subi	r24, 0xBD	; 189
     55c:	9f 4f       	sbci	r25, 0xFF	; 255
     55e:	20 e9       	ldi	r18, 0x90	; 144
     560:	31 e0       	ldi	r19, 0x01	; 1
     562:	fc 01       	movw	r30, r24
     564:	31 83       	std	Z+1, r19	; 0x01
     566:	20 83       	st	Z, r18
     568:	ce 01       	movw	r24, r28
     56a:	8d 5b       	subi	r24, 0xBD	; 189
     56c:	9f 4f       	sbci	r25, 0xFF	; 255
     56e:	fc 01       	movw	r30, r24
     570:	80 81       	ld	r24, Z
     572:	91 81       	ldd	r25, Z+1	; 0x01
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	f1 f7       	brne	.-4      	; 0x574 <main+0x4f4>
     578:	9e 01       	movw	r18, r28
     57a:	2d 5b       	subi	r18, 0xBD	; 189
     57c:	3f 4f       	sbci	r19, 0xFF	; 255
     57e:	f9 01       	movw	r30, r18
     580:	91 83       	std	Z+1, r25	; 0x01
     582:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     584:	ce 01       	movw	r24, r28
     586:	8f 5b       	subi	r24, 0xBF	; 191
     588:	9f 4f       	sbci	r25, 0xFF	; 255
     58a:	9e 01       	movw	r18, r28
     58c:	2f 5b       	subi	r18, 0xBF	; 191
     58e:	3f 4f       	sbci	r19, 0xFF	; 255
     590:	f9 01       	movw	r30, r18
     592:	20 81       	ld	r18, Z
     594:	31 81       	ldd	r19, Z+1	; 0x01
     596:	21 50       	subi	r18, 0x01	; 1
     598:	31 09       	sbc	r19, r1
     59a:	fc 01       	movw	r30, r24
     59c:	31 83       	std	Z+1, r19	; 0x01
     59e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5a0:	ce 01       	movw	r24, r28
     5a2:	8f 5b       	subi	r24, 0xBF	; 191
     5a4:	9f 4f       	sbci	r25, 0xFF	; 255
     5a6:	fc 01       	movw	r30, r24
     5a8:	80 81       	ld	r24, Z
     5aa:	91 81       	ldd	r25, Z+1	; 0x01
     5ac:	00 97       	sbiw	r24, 0x00	; 0
     5ae:	a1 f6       	brne	.-88     	; 0x558 <main+0x4d8>
     5b0:	2b c0       	rjmp	.+86     	; 0x608 <main+0x588>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5b2:	8e 01       	movw	r16, r28
     5b4:	0f 5b       	subi	r16, 0xBF	; 191
     5b6:	1f 4f       	sbci	r17, 0xFF	; 255
     5b8:	ce 01       	movw	r24, r28
     5ba:	cd 96       	adiw	r24, 0x3d	; 61
     5bc:	fc 01       	movw	r30, r24
     5be:	60 81       	ld	r22, Z
     5c0:	71 81       	ldd	r23, Z+1	; 0x01
     5c2:	82 81       	ldd	r24, Z+2	; 0x02
     5c4:	93 81       	ldd	r25, Z+3	; 0x03
     5c6:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     5ca:	dc 01       	movw	r26, r24
     5cc:	cb 01       	movw	r24, r22
     5ce:	f8 01       	movw	r30, r16
     5d0:	91 83       	std	Z+1, r25	; 0x01
     5d2:	80 83       	st	Z, r24
     5d4:	ce 01       	movw	r24, r28
     5d6:	8b 5b       	subi	r24, 0xBB	; 187
     5d8:	9f 4f       	sbci	r25, 0xFF	; 255
     5da:	9e 01       	movw	r18, r28
     5dc:	2f 5b       	subi	r18, 0xBF	; 191
     5de:	3f 4f       	sbci	r19, 0xFF	; 255
     5e0:	f9 01       	movw	r30, r18
     5e2:	20 81       	ld	r18, Z
     5e4:	31 81       	ldd	r19, Z+1	; 0x01
     5e6:	fc 01       	movw	r30, r24
     5e8:	31 83       	std	Z+1, r19	; 0x01
     5ea:	20 83       	st	Z, r18
     5ec:	ce 01       	movw	r24, r28
     5ee:	8b 5b       	subi	r24, 0xBB	; 187
     5f0:	9f 4f       	sbci	r25, 0xFF	; 255
     5f2:	fc 01       	movw	r30, r24
     5f4:	80 81       	ld	r24, Z
     5f6:	91 81       	ldd	r25, Z+1	; 0x01
     5f8:	01 97       	sbiw	r24, 0x01	; 1
     5fa:	f1 f7       	brne	.-4      	; 0x5f8 <main+0x578>
     5fc:	9e 01       	movw	r18, r28
     5fe:	2b 5b       	subi	r18, 0xBB	; 187
     600:	3f 4f       	sbci	r19, 0xFF	; 255
     602:	f9 01       	movw	r30, r18
     604:	91 83       	std	Z+1, r25	; 0x01
     606:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);     // .
     608:	85 e2       	ldi	r24, 0x25	; 37
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	25 e2       	ldi	r18, 0x25	; 37
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	f9 01       	movw	r30, r18
     612:	30 81       	ld	r19, Z
     614:	20 e2       	ldi	r18, 0x20	; 32
     616:	23 27       	eor	r18, r19
     618:	fc 01       	movw	r30, r24
     61a:	20 83       	st	Z, r18
     61c:	9e 01       	movw	r18, r28
     61e:	29 5b       	subi	r18, 0xB9	; 185
     620:	3f 4f       	sbci	r19, 0xFF	; 255
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	a8 ec       	ldi	r26, 0xC8	; 200
     628:	b2 e4       	ldi	r27, 0x42	; 66
     62a:	f9 01       	movw	r30, r18
     62c:	80 83       	st	Z, r24
     62e:	91 83       	std	Z+1, r25	; 0x01
     630:	a2 83       	std	Z+2, r26	; 0x02
     632:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     634:	8e 01       	movw	r16, r28
     636:	05 5b       	subi	r16, 0xB5	; 181
     638:	1f 4f       	sbci	r17, 0xFF	; 255
     63a:	ce 01       	movw	r24, r28
     63c:	89 5b       	subi	r24, 0xB9	; 185
     63e:	9f 4f       	sbci	r25, 0xFF	; 255
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	4a e7       	ldi	r20, 0x7A	; 122
     646:	55 e4       	ldi	r21, 0x45	; 69
     648:	fc 01       	movw	r30, r24
     64a:	60 81       	ld	r22, Z
     64c:	71 81       	ldd	r23, Z+1	; 0x01
     64e:	82 81       	ldd	r24, Z+2	; 0x02
     650:	93 81       	ldd	r25, Z+3	; 0x03
     652:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     656:	dc 01       	movw	r26, r24
     658:	cb 01       	movw	r24, r22
     65a:	f8 01       	movw	r30, r16
     65c:	80 83       	st	Z, r24
     65e:	91 83       	std	Z+1, r25	; 0x01
     660:	a2 83       	std	Z+2, r26	; 0x02
     662:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     664:	ce 01       	movw	r24, r28
     666:	85 5b       	subi	r24, 0xB5	; 181
     668:	9f 4f       	sbci	r25, 0xFF	; 255
     66a:	20 e0       	ldi	r18, 0x00	; 0
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	40 e8       	ldi	r20, 0x80	; 128
     670:	5f e3       	ldi	r21, 0x3F	; 63
     672:	fc 01       	movw	r30, r24
     674:	60 81       	ld	r22, Z
     676:	71 81       	ldd	r23, Z+1	; 0x01
     678:	82 81       	ldd	r24, Z+2	; 0x02
     67a:	93 81       	ldd	r25, Z+3	; 0x03
     67c:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     680:	88 23       	and	r24, r24
     682:	4c f4       	brge	.+18     	; 0x696 <main+0x616>
		__ticks = 1;
     684:	ce 01       	movw	r24, r28
     686:	81 5b       	subi	r24, 0xB1	; 177
     688:	9f 4f       	sbci	r25, 0xFF	; 255
     68a:	21 e0       	ldi	r18, 0x01	; 1
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	fc 01       	movw	r30, r24
     690:	31 83       	std	Z+1, r19	; 0x01
     692:	20 83       	st	Z, r18
     694:	6d c0       	rjmp	.+218    	; 0x770 <main+0x6f0>
	else if (__tmp > 65535)
     696:	ce 01       	movw	r24, r28
     698:	85 5b       	subi	r24, 0xB5	; 181
     69a:	9f 4f       	sbci	r25, 0xFF	; 255
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	3f ef       	ldi	r19, 0xFF	; 255
     6a0:	4f e7       	ldi	r20, 0x7F	; 127
     6a2:	57 e4       	ldi	r21, 0x47	; 71
     6a4:	fc 01       	movw	r30, r24
     6a6:	60 81       	ld	r22, Z
     6a8:	71 81       	ldd	r23, Z+1	; 0x01
     6aa:	82 81       	ldd	r24, Z+2	; 0x02
     6ac:	93 81       	ldd	r25, Z+3	; 0x03
     6ae:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     6b2:	18 16       	cp	r1, r24
     6b4:	0c f0       	brlt	.+2      	; 0x6b8 <main+0x638>
     6b6:	4a c0       	rjmp	.+148    	; 0x74c <main+0x6cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6b8:	ce 01       	movw	r24, r28
     6ba:	89 5b       	subi	r24, 0xB9	; 185
     6bc:	9f 4f       	sbci	r25, 0xFF	; 255
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	40 e2       	ldi	r20, 0x20	; 32
     6c4:	51 e4       	ldi	r21, 0x41	; 65
     6c6:	fc 01       	movw	r30, r24
     6c8:	60 81       	ld	r22, Z
     6ca:	71 81       	ldd	r23, Z+1	; 0x01
     6cc:	82 81       	ldd	r24, Z+2	; 0x02
     6ce:	93 81       	ldd	r25, Z+3	; 0x03
     6d0:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     6d4:	dc 01       	movw	r26, r24
     6d6:	cb 01       	movw	r24, r22
     6d8:	8e 01       	movw	r16, r28
     6da:	01 5b       	subi	r16, 0xB1	; 177
     6dc:	1f 4f       	sbci	r17, 0xFF	; 255
     6de:	bc 01       	movw	r22, r24
     6e0:	cd 01       	movw	r24, r26
     6e2:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     6e6:	dc 01       	movw	r26, r24
     6e8:	cb 01       	movw	r24, r22
     6ea:	f8 01       	movw	r30, r16
     6ec:	91 83       	std	Z+1, r25	; 0x01
     6ee:	80 83       	st	Z, r24
     6f0:	24 c0       	rjmp	.+72     	; 0x73a <main+0x6ba>
     6f2:	ce 01       	movw	r24, r28
     6f4:	8f 5a       	subi	r24, 0xAF	; 175
     6f6:	9f 4f       	sbci	r25, 0xFF	; 255
     6f8:	20 e9       	ldi	r18, 0x90	; 144
     6fa:	31 e0       	ldi	r19, 0x01	; 1
     6fc:	fc 01       	movw	r30, r24
     6fe:	31 83       	std	Z+1, r19	; 0x01
     700:	20 83       	st	Z, r18
     702:	ce 01       	movw	r24, r28
     704:	8f 5a       	subi	r24, 0xAF	; 175
     706:	9f 4f       	sbci	r25, 0xFF	; 255
     708:	fc 01       	movw	r30, r24
     70a:	80 81       	ld	r24, Z
     70c:	91 81       	ldd	r25, Z+1	; 0x01
     70e:	01 97       	sbiw	r24, 0x01	; 1
     710:	f1 f7       	brne	.-4      	; 0x70e <main+0x68e>
     712:	9e 01       	movw	r18, r28
     714:	2f 5a       	subi	r18, 0xAF	; 175
     716:	3f 4f       	sbci	r19, 0xFF	; 255
     718:	f9 01       	movw	r30, r18
     71a:	91 83       	std	Z+1, r25	; 0x01
     71c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     71e:	ce 01       	movw	r24, r28
     720:	81 5b       	subi	r24, 0xB1	; 177
     722:	9f 4f       	sbci	r25, 0xFF	; 255
     724:	9e 01       	movw	r18, r28
     726:	21 5b       	subi	r18, 0xB1	; 177
     728:	3f 4f       	sbci	r19, 0xFF	; 255
     72a:	f9 01       	movw	r30, r18
     72c:	20 81       	ld	r18, Z
     72e:	31 81       	ldd	r19, Z+1	; 0x01
     730:	21 50       	subi	r18, 0x01	; 1
     732:	31 09       	sbc	r19, r1
     734:	fc 01       	movw	r30, r24
     736:	31 83       	std	Z+1, r19	; 0x01
     738:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     73a:	ce 01       	movw	r24, r28
     73c:	81 5b       	subi	r24, 0xB1	; 177
     73e:	9f 4f       	sbci	r25, 0xFF	; 255
     740:	fc 01       	movw	r30, r24
     742:	80 81       	ld	r24, Z
     744:	91 81       	ldd	r25, Z+1	; 0x01
     746:	00 97       	sbiw	r24, 0x00	; 0
     748:	a1 f6       	brne	.-88     	; 0x6f2 <main+0x672>
     74a:	2c c0       	rjmp	.+88     	; 0x7a4 <main+0x724>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     74c:	8e 01       	movw	r16, r28
     74e:	01 5b       	subi	r16, 0xB1	; 177
     750:	1f 4f       	sbci	r17, 0xFF	; 255
     752:	ce 01       	movw	r24, r28
     754:	85 5b       	subi	r24, 0xB5	; 181
     756:	9f 4f       	sbci	r25, 0xFF	; 255
     758:	fc 01       	movw	r30, r24
     75a:	60 81       	ld	r22, Z
     75c:	71 81       	ldd	r23, Z+1	; 0x01
     75e:	82 81       	ldd	r24, Z+2	; 0x02
     760:	93 81       	ldd	r25, Z+3	; 0x03
     762:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     766:	dc 01       	movw	r26, r24
     768:	cb 01       	movw	r24, r22
     76a:	f8 01       	movw	r30, r16
     76c:	91 83       	std	Z+1, r25	; 0x01
     76e:	80 83       	st	Z, r24
     770:	ce 01       	movw	r24, r28
     772:	8d 5a       	subi	r24, 0xAD	; 173
     774:	9f 4f       	sbci	r25, 0xFF	; 255
     776:	9e 01       	movw	r18, r28
     778:	21 5b       	subi	r18, 0xB1	; 177
     77a:	3f 4f       	sbci	r19, 0xFF	; 255
     77c:	f9 01       	movw	r30, r18
     77e:	20 81       	ld	r18, Z
     780:	31 81       	ldd	r19, Z+1	; 0x01
     782:	fc 01       	movw	r30, r24
     784:	31 83       	std	Z+1, r19	; 0x01
     786:	20 83       	st	Z, r18
     788:	ce 01       	movw	r24, r28
     78a:	8d 5a       	subi	r24, 0xAD	; 173
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	fc 01       	movw	r30, r24
     790:	80 81       	ld	r24, Z
     792:	91 81       	ldd	r25, Z+1	; 0x01
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	f1 f7       	brne	.-4      	; 0x794 <main+0x714>
     798:	9e 01       	movw	r18, r28
     79a:	2d 5a       	subi	r18, 0xAD	; 173
     79c:	3f 4f       	sbci	r19, 0xFF	; 255
     79e:	f9 01       	movw	r30, r18
     7a0:	91 83       	std	Z+1, r25	; 0x01
     7a2:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
     7a4:	85 e2       	ldi	r24, 0x25	; 37
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	25 e2       	ldi	r18, 0x25	; 37
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	f9 01       	movw	r30, r18
     7ae:	30 81       	ld	r19, Z
     7b0:	20 e2       	ldi	r18, 0x20	; 32
     7b2:	23 27       	eor	r18, r19
     7b4:	fc 01       	movw	r30, r24
     7b6:	20 83       	st	Z, r18
     7b8:	9e 01       	movw	r18, r28
     7ba:	2b 5a       	subi	r18, 0xAB	; 171
     7bc:	3f 4f       	sbci	r19, 0xFF	; 255
     7be:	80 e0       	ldi	r24, 0x00	; 0
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	aa ef       	ldi	r26, 0xFA	; 250
     7c4:	b3 e4       	ldi	r27, 0x43	; 67
     7c6:	f9 01       	movw	r30, r18
     7c8:	80 83       	st	Z, r24
     7ca:	91 83       	std	Z+1, r25	; 0x01
     7cc:	a2 83       	std	Z+2, r26	; 0x02
     7ce:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7d0:	8e 01       	movw	r16, r28
     7d2:	07 5a       	subi	r16, 0xA7	; 167
     7d4:	1f 4f       	sbci	r17, 0xFF	; 255
     7d6:	ce 01       	movw	r24, r28
     7d8:	8b 5a       	subi	r24, 0xAB	; 171
     7da:	9f 4f       	sbci	r25, 0xFF	; 255
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	4a e7       	ldi	r20, 0x7A	; 122
     7e2:	55 e4       	ldi	r21, 0x45	; 69
     7e4:	fc 01       	movw	r30, r24
     7e6:	60 81       	ld	r22, Z
     7e8:	71 81       	ldd	r23, Z+1	; 0x01
     7ea:	82 81       	ldd	r24, Z+2	; 0x02
     7ec:	93 81       	ldd	r25, Z+3	; 0x03
     7ee:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     7f2:	dc 01       	movw	r26, r24
     7f4:	cb 01       	movw	r24, r22
     7f6:	f8 01       	movw	r30, r16
     7f8:	80 83       	st	Z, r24
     7fa:	91 83       	std	Z+1, r25	; 0x01
     7fc:	a2 83       	std	Z+2, r26	; 0x02
     7fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     800:	ce 01       	movw	r24, r28
     802:	87 5a       	subi	r24, 0xA7	; 167
     804:	9f 4f       	sbci	r25, 0xFF	; 255
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	40 e8       	ldi	r20, 0x80	; 128
     80c:	5f e3       	ldi	r21, 0x3F	; 63
     80e:	fc 01       	movw	r30, r24
     810:	60 81       	ld	r22, Z
     812:	71 81       	ldd	r23, Z+1	; 0x01
     814:	82 81       	ldd	r24, Z+2	; 0x02
     816:	93 81       	ldd	r25, Z+3	; 0x03
     818:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     81c:	88 23       	and	r24, r24
     81e:	4c f4       	brge	.+18     	; 0x832 <main+0x7b2>
		__ticks = 1;
     820:	ce 01       	movw	r24, r28
     822:	83 5a       	subi	r24, 0xA3	; 163
     824:	9f 4f       	sbci	r25, 0xFF	; 255
     826:	21 e0       	ldi	r18, 0x01	; 1
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	fc 01       	movw	r30, r24
     82c:	31 83       	std	Z+1, r19	; 0x01
     82e:	20 83       	st	Z, r18
     830:	6d c0       	rjmp	.+218    	; 0x90c <__stack+0xd>
	else if (__tmp > 65535)
     832:	ce 01       	movw	r24, r28
     834:	87 5a       	subi	r24, 0xA7	; 167
     836:	9f 4f       	sbci	r25, 0xFF	; 255
     838:	20 e0       	ldi	r18, 0x00	; 0
     83a:	3f ef       	ldi	r19, 0xFF	; 255
     83c:	4f e7       	ldi	r20, 0x7F	; 127
     83e:	57 e4       	ldi	r21, 0x47	; 71
     840:	fc 01       	movw	r30, r24
     842:	60 81       	ld	r22, Z
     844:	71 81       	ldd	r23, Z+1	; 0x01
     846:	82 81       	ldd	r24, Z+2	; 0x02
     848:	93 81       	ldd	r25, Z+3	; 0x03
     84a:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     84e:	18 16       	cp	r1, r24
     850:	0c f0       	brlt	.+2      	; 0x854 <main+0x7d4>
     852:	4a c0       	rjmp	.+148    	; 0x8e8 <main+0x868>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     854:	ce 01       	movw	r24, r28
     856:	8b 5a       	subi	r24, 0xAB	; 171
     858:	9f 4f       	sbci	r25, 0xFF	; 255
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	40 e2       	ldi	r20, 0x20	; 32
     860:	51 e4       	ldi	r21, 0x41	; 65
     862:	fc 01       	movw	r30, r24
     864:	60 81       	ld	r22, Z
     866:	71 81       	ldd	r23, Z+1	; 0x01
     868:	82 81       	ldd	r24, Z+2	; 0x02
     86a:	93 81       	ldd	r25, Z+3	; 0x03
     86c:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     870:	dc 01       	movw	r26, r24
     872:	cb 01       	movw	r24, r22
     874:	8e 01       	movw	r16, r28
     876:	03 5a       	subi	r16, 0xA3	; 163
     878:	1f 4f       	sbci	r17, 0xFF	; 255
     87a:	bc 01       	movw	r22, r24
     87c:	cd 01       	movw	r24, r26
     87e:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     882:	dc 01       	movw	r26, r24
     884:	cb 01       	movw	r24, r22
     886:	f8 01       	movw	r30, r16
     888:	91 83       	std	Z+1, r25	; 0x01
     88a:	80 83       	st	Z, r24
     88c:	24 c0       	rjmp	.+72     	; 0x8d6 <main+0x856>
     88e:	ce 01       	movw	r24, r28
     890:	81 5a       	subi	r24, 0xA1	; 161
     892:	9f 4f       	sbci	r25, 0xFF	; 255
     894:	20 e9       	ldi	r18, 0x90	; 144
     896:	31 e0       	ldi	r19, 0x01	; 1
     898:	fc 01       	movw	r30, r24
     89a:	31 83       	std	Z+1, r19	; 0x01
     89c:	20 83       	st	Z, r18
     89e:	ce 01       	movw	r24, r28
     8a0:	81 5a       	subi	r24, 0xA1	; 161
     8a2:	9f 4f       	sbci	r25, 0xFF	; 255
     8a4:	fc 01       	movw	r30, r24
     8a6:	80 81       	ld	r24, Z
     8a8:	91 81       	ldd	r25, Z+1	; 0x01
     8aa:	01 97       	sbiw	r24, 0x01	; 1
     8ac:	f1 f7       	brne	.-4      	; 0x8aa <main+0x82a>
     8ae:	9e 01       	movw	r18, r28
     8b0:	21 5a       	subi	r18, 0xA1	; 161
     8b2:	3f 4f       	sbci	r19, 0xFF	; 255
     8b4:	f9 01       	movw	r30, r18
     8b6:	91 83       	std	Z+1, r25	; 0x01
     8b8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8ba:	ce 01       	movw	r24, r28
     8bc:	83 5a       	subi	r24, 0xA3	; 163
     8be:	9f 4f       	sbci	r25, 0xFF	; 255
     8c0:	9e 01       	movw	r18, r28
     8c2:	23 5a       	subi	r18, 0xA3	; 163
     8c4:	3f 4f       	sbci	r19, 0xFF	; 255
     8c6:	f9 01       	movw	r30, r18
     8c8:	20 81       	ld	r18, Z
     8ca:	31 81       	ldd	r19, Z+1	; 0x01
     8cc:	21 50       	subi	r18, 0x01	; 1
     8ce:	31 09       	sbc	r19, r1
     8d0:	fc 01       	movw	r30, r24
     8d2:	31 83       	std	Z+1, r19	; 0x01
     8d4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8d6:	ce 01       	movw	r24, r28
     8d8:	83 5a       	subi	r24, 0xA3	; 163
     8da:	9f 4f       	sbci	r25, 0xFF	; 255
     8dc:	fc 01       	movw	r30, r24
     8de:	80 81       	ld	r24, Z
     8e0:	91 81       	ldd	r25, Z+1	; 0x01
     8e2:	00 97       	sbiw	r24, 0x00	; 0
     8e4:	a1 f6       	brne	.-88     	; 0x88e <main+0x80e>
     8e6:	2c c0       	rjmp	.+88     	; 0x940 <__stack+0x41>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8e8:	8e 01       	movw	r16, r28
     8ea:	03 5a       	subi	r16, 0xA3	; 163
     8ec:	1f 4f       	sbci	r17, 0xFF	; 255
     8ee:	ce 01       	movw	r24, r28
     8f0:	87 5a       	subi	r24, 0xA7	; 167
     8f2:	9f 4f       	sbci	r25, 0xFF	; 255
     8f4:	fc 01       	movw	r30, r24
     8f6:	60 81       	ld	r22, Z
     8f8:	71 81       	ldd	r23, Z+1	; 0x01
     8fa:	82 81       	ldd	r24, Z+2	; 0x02
     8fc:	93 81       	ldd	r25, Z+3	; 0x03
     8fe:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     902:	dc 01       	movw	r26, r24
     904:	cb 01       	movw	r24, r22
     906:	f8 01       	movw	r30, r16
     908:	91 83       	std	Z+1, r25	; 0x01
     90a:	80 83       	st	Z, r24
     90c:	ce 01       	movw	r24, r28
     90e:	8f 59       	subi	r24, 0x9F	; 159
     910:	9f 4f       	sbci	r25, 0xFF	; 255
     912:	9e 01       	movw	r18, r28
     914:	23 5a       	subi	r18, 0xA3	; 163
     916:	3f 4f       	sbci	r19, 0xFF	; 255
     918:	f9 01       	movw	r30, r18
     91a:	20 81       	ld	r18, Z
     91c:	31 81       	ldd	r19, Z+1	; 0x01
     91e:	fc 01       	movw	r30, r24
     920:	31 83       	std	Z+1, r19	; 0x01
     922:	20 83       	st	Z, r18
     924:	ce 01       	movw	r24, r28
     926:	8f 59       	subi	r24, 0x9F	; 159
     928:	9f 4f       	sbci	r25, 0xFF	; 255
     92a:	fc 01       	movw	r30, r24
     92c:	80 81       	ld	r24, Z
     92e:	91 81       	ldd	r25, Z+1	; 0x01
     930:	01 97       	sbiw	r24, 0x01	; 1
     932:	f1 f7       	brne	.-4      	; 0x930 <__stack+0x31>
     934:	9e 01       	movw	r18, r28
     936:	2f 59       	subi	r18, 0x9F	; 159
     938:	3f 4f       	sbci	r19, 0xFF	; 255
     93a:	f9 01       	movw	r30, r18
     93c:	91 83       	std	Z+1, r25	; 0x01
     93e:	80 83       	st	Z, r24
        _delay_ms(SPACE_DELAY);


        // E

        PORTB = PORTB ^ (1<<LED_GREEN);     // .
     940:	85 e2       	ldi	r24, 0x25	; 37
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	25 e2       	ldi	r18, 0x25	; 37
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	f9 01       	movw	r30, r18
     94a:	30 81       	ld	r19, Z
     94c:	20 e2       	ldi	r18, 0x20	; 32
     94e:	23 27       	eor	r18, r19
     950:	fc 01       	movw	r30, r24
     952:	20 83       	st	Z, r18
     954:	9e 01       	movw	r18, r28
     956:	2d 59       	subi	r18, 0x9D	; 157
     958:	3f 4f       	sbci	r19, 0xFF	; 255
     95a:	80 e0       	ldi	r24, 0x00	; 0
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	a8 ec       	ldi	r26, 0xC8	; 200
     960:	b2 e4       	ldi	r27, 0x42	; 66
     962:	f9 01       	movw	r30, r18
     964:	80 83       	st	Z, r24
     966:	91 83       	std	Z+1, r25	; 0x01
     968:	a2 83       	std	Z+2, r26	; 0x02
     96a:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     96c:	8e 01       	movw	r16, r28
     96e:	09 59       	subi	r16, 0x99	; 153
     970:	1f 4f       	sbci	r17, 0xFF	; 255
     972:	ce 01       	movw	r24, r28
     974:	8d 59       	subi	r24, 0x9D	; 157
     976:	9f 4f       	sbci	r25, 0xFF	; 255
     978:	20 e0       	ldi	r18, 0x00	; 0
     97a:	30 e0       	ldi	r19, 0x00	; 0
     97c:	4a e7       	ldi	r20, 0x7A	; 122
     97e:	55 e4       	ldi	r21, 0x45	; 69
     980:	fc 01       	movw	r30, r24
     982:	60 81       	ld	r22, Z
     984:	71 81       	ldd	r23, Z+1	; 0x01
     986:	82 81       	ldd	r24, Z+2	; 0x02
     988:	93 81       	ldd	r25, Z+3	; 0x03
     98a:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     98e:	dc 01       	movw	r26, r24
     990:	cb 01       	movw	r24, r22
     992:	f8 01       	movw	r30, r16
     994:	80 83       	st	Z, r24
     996:	91 83       	std	Z+1, r25	; 0x01
     998:	a2 83       	std	Z+2, r26	; 0x02
     99a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     99c:	ce 01       	movw	r24, r28
     99e:	89 59       	subi	r24, 0x99	; 153
     9a0:	9f 4f       	sbci	r25, 0xFF	; 255
     9a2:	20 e0       	ldi	r18, 0x00	; 0
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 e8       	ldi	r20, 0x80	; 128
     9a8:	5f e3       	ldi	r21, 0x3F	; 63
     9aa:	fc 01       	movw	r30, r24
     9ac:	60 81       	ld	r22, Z
     9ae:	71 81       	ldd	r23, Z+1	; 0x01
     9b0:	82 81       	ldd	r24, Z+2	; 0x02
     9b2:	93 81       	ldd	r25, Z+3	; 0x03
     9b4:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     9b8:	88 23       	and	r24, r24
     9ba:	4c f4       	brge	.+18     	; 0x9ce <__stack+0xcf>
		__ticks = 1;
     9bc:	ce 01       	movw	r24, r28
     9be:	85 59       	subi	r24, 0x95	; 149
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	21 e0       	ldi	r18, 0x01	; 1
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	fc 01       	movw	r30, r24
     9c8:	31 83       	std	Z+1, r19	; 0x01
     9ca:	20 83       	st	Z, r18
     9cc:	6d c0       	rjmp	.+218    	; 0xaa8 <__stack+0x1a9>
	else if (__tmp > 65535)
     9ce:	ce 01       	movw	r24, r28
     9d0:	89 59       	subi	r24, 0x99	; 153
     9d2:	9f 4f       	sbci	r25, 0xFF	; 255
     9d4:	20 e0       	ldi	r18, 0x00	; 0
     9d6:	3f ef       	ldi	r19, 0xFF	; 255
     9d8:	4f e7       	ldi	r20, 0x7F	; 127
     9da:	57 e4       	ldi	r21, 0x47	; 71
     9dc:	fc 01       	movw	r30, r24
     9de:	60 81       	ld	r22, Z
     9e0:	71 81       	ldd	r23, Z+1	; 0x01
     9e2:	82 81       	ldd	r24, Z+2	; 0x02
     9e4:	93 81       	ldd	r25, Z+3	; 0x03
     9e6:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     9ea:	18 16       	cp	r1, r24
     9ec:	0c f0       	brlt	.+2      	; 0x9f0 <__stack+0xf1>
     9ee:	4a c0       	rjmp	.+148    	; 0xa84 <__stack+0x185>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9f0:	ce 01       	movw	r24, r28
     9f2:	8d 59       	subi	r24, 0x9D	; 157
     9f4:	9f 4f       	sbci	r25, 0xFF	; 255
     9f6:	20 e0       	ldi	r18, 0x00	; 0
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	40 e2       	ldi	r20, 0x20	; 32
     9fc:	51 e4       	ldi	r21, 0x41	; 65
     9fe:	fc 01       	movw	r30, r24
     a00:	60 81       	ld	r22, Z
     a02:	71 81       	ldd	r23, Z+1	; 0x01
     a04:	82 81       	ldd	r24, Z+2	; 0x02
     a06:	93 81       	ldd	r25, Z+3	; 0x03
     a08:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     a0c:	dc 01       	movw	r26, r24
     a0e:	cb 01       	movw	r24, r22
     a10:	8e 01       	movw	r16, r28
     a12:	05 59       	subi	r16, 0x95	; 149
     a14:	1f 4f       	sbci	r17, 0xFF	; 255
     a16:	bc 01       	movw	r22, r24
     a18:	cd 01       	movw	r24, r26
     a1a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     a1e:	dc 01       	movw	r26, r24
     a20:	cb 01       	movw	r24, r22
     a22:	f8 01       	movw	r30, r16
     a24:	91 83       	std	Z+1, r25	; 0x01
     a26:	80 83       	st	Z, r24
     a28:	24 c0       	rjmp	.+72     	; 0xa72 <__stack+0x173>
     a2a:	ce 01       	movw	r24, r28
     a2c:	83 59       	subi	r24, 0x93	; 147
     a2e:	9f 4f       	sbci	r25, 0xFF	; 255
     a30:	20 e9       	ldi	r18, 0x90	; 144
     a32:	31 e0       	ldi	r19, 0x01	; 1
     a34:	fc 01       	movw	r30, r24
     a36:	31 83       	std	Z+1, r19	; 0x01
     a38:	20 83       	st	Z, r18
     a3a:	ce 01       	movw	r24, r28
     a3c:	83 59       	subi	r24, 0x93	; 147
     a3e:	9f 4f       	sbci	r25, 0xFF	; 255
     a40:	fc 01       	movw	r30, r24
     a42:	80 81       	ld	r24, Z
     a44:	91 81       	ldd	r25, Z+1	; 0x01
     a46:	01 97       	sbiw	r24, 0x01	; 1
     a48:	f1 f7       	brne	.-4      	; 0xa46 <__stack+0x147>
     a4a:	9e 01       	movw	r18, r28
     a4c:	23 59       	subi	r18, 0x93	; 147
     a4e:	3f 4f       	sbci	r19, 0xFF	; 255
     a50:	f9 01       	movw	r30, r18
     a52:	91 83       	std	Z+1, r25	; 0x01
     a54:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a56:	ce 01       	movw	r24, r28
     a58:	85 59       	subi	r24, 0x95	; 149
     a5a:	9f 4f       	sbci	r25, 0xFF	; 255
     a5c:	9e 01       	movw	r18, r28
     a5e:	25 59       	subi	r18, 0x95	; 149
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	f9 01       	movw	r30, r18
     a64:	20 81       	ld	r18, Z
     a66:	31 81       	ldd	r19, Z+1	; 0x01
     a68:	21 50       	subi	r18, 0x01	; 1
     a6a:	31 09       	sbc	r19, r1
     a6c:	fc 01       	movw	r30, r24
     a6e:	31 83       	std	Z+1, r19	; 0x01
     a70:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a72:	ce 01       	movw	r24, r28
     a74:	85 59       	subi	r24, 0x95	; 149
     a76:	9f 4f       	sbci	r25, 0xFF	; 255
     a78:	fc 01       	movw	r30, r24
     a7a:	80 81       	ld	r24, Z
     a7c:	91 81       	ldd	r25, Z+1	; 0x01
     a7e:	00 97       	sbiw	r24, 0x00	; 0
     a80:	a1 f6       	brne	.-88     	; 0xa2a <__stack+0x12b>
     a82:	2c c0       	rjmp	.+88     	; 0xadc <__stack+0x1dd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a84:	8e 01       	movw	r16, r28
     a86:	05 59       	subi	r16, 0x95	; 149
     a88:	1f 4f       	sbci	r17, 0xFF	; 255
     a8a:	ce 01       	movw	r24, r28
     a8c:	89 59       	subi	r24, 0x99	; 153
     a8e:	9f 4f       	sbci	r25, 0xFF	; 255
     a90:	fc 01       	movw	r30, r24
     a92:	60 81       	ld	r22, Z
     a94:	71 81       	ldd	r23, Z+1	; 0x01
     a96:	82 81       	ldd	r24, Z+2	; 0x02
     a98:	93 81       	ldd	r25, Z+3	; 0x03
     a9a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     a9e:	dc 01       	movw	r26, r24
     aa0:	cb 01       	movw	r24, r22
     aa2:	f8 01       	movw	r30, r16
     aa4:	91 83       	std	Z+1, r25	; 0x01
     aa6:	80 83       	st	Z, r24
     aa8:	ce 01       	movw	r24, r28
     aaa:	81 59       	subi	r24, 0x91	; 145
     aac:	9f 4f       	sbci	r25, 0xFF	; 255
     aae:	9e 01       	movw	r18, r28
     ab0:	25 59       	subi	r18, 0x95	; 149
     ab2:	3f 4f       	sbci	r19, 0xFF	; 255
     ab4:	f9 01       	movw	r30, r18
     ab6:	20 81       	ld	r18, Z
     ab8:	31 81       	ldd	r19, Z+1	; 0x01
     aba:	fc 01       	movw	r30, r24
     abc:	31 83       	std	Z+1, r19	; 0x01
     abe:	20 83       	st	Z, r18
     ac0:	ce 01       	movw	r24, r28
     ac2:	81 59       	subi	r24, 0x91	; 145
     ac4:	9f 4f       	sbci	r25, 0xFF	; 255
     ac6:	fc 01       	movw	r30, r24
     ac8:	80 81       	ld	r24, Z
     aca:	91 81       	ldd	r25, Z+1	; 0x01
     acc:	01 97       	sbiw	r24, 0x01	; 1
     ace:	f1 f7       	brne	.-4      	; 0xacc <__stack+0x1cd>
     ad0:	9e 01       	movw	r18, r28
     ad2:	21 59       	subi	r18, 0x91	; 145
     ad4:	3f 4f       	sbci	r19, 0xFF	; 255
     ad6:	f9 01       	movw	r30, r18
     ad8:	91 83       	std	Z+1, r25	; 0x01
     ada:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
     adc:	85 e2       	ldi	r24, 0x25	; 37
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	25 e2       	ldi	r18, 0x25	; 37
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	f9 01       	movw	r30, r18
     ae6:	30 81       	ld	r19, Z
     ae8:	20 e2       	ldi	r18, 0x20	; 32
     aea:	23 27       	eor	r18, r19
     aec:	fc 01       	movw	r30, r24
     aee:	20 83       	st	Z, r18
     af0:	9e 01       	movw	r18, r28
     af2:	2f 58       	subi	r18, 0x8F	; 143
     af4:	3f 4f       	sbci	r19, 0xFF	; 255
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	aa ef       	ldi	r26, 0xFA	; 250
     afc:	b3 e4       	ldi	r27, 0x43	; 67
     afe:	f9 01       	movw	r30, r18
     b00:	80 83       	st	Z, r24
     b02:	91 83       	std	Z+1, r25	; 0x01
     b04:	a2 83       	std	Z+2, r26	; 0x02
     b06:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     b08:	8e 01       	movw	r16, r28
     b0a:	0b 58       	subi	r16, 0x8B	; 139
     b0c:	1f 4f       	sbci	r17, 0xFF	; 255
     b0e:	ce 01       	movw	r24, r28
     b10:	8f 58       	subi	r24, 0x8F	; 143
     b12:	9f 4f       	sbci	r25, 0xFF	; 255
     b14:	20 e0       	ldi	r18, 0x00	; 0
     b16:	30 e0       	ldi	r19, 0x00	; 0
     b18:	4a e7       	ldi	r20, 0x7A	; 122
     b1a:	55 e4       	ldi	r21, 0x45	; 69
     b1c:	fc 01       	movw	r30, r24
     b1e:	60 81       	ld	r22, Z
     b20:	71 81       	ldd	r23, Z+1	; 0x01
     b22:	82 81       	ldd	r24, Z+2	; 0x02
     b24:	93 81       	ldd	r25, Z+3	; 0x03
     b26:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     b2a:	dc 01       	movw	r26, r24
     b2c:	cb 01       	movw	r24, r22
     b2e:	f8 01       	movw	r30, r16
     b30:	80 83       	st	Z, r24
     b32:	91 83       	std	Z+1, r25	; 0x01
     b34:	a2 83       	std	Z+2, r26	; 0x02
     b36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b38:	ce 01       	movw	r24, r28
     b3a:	8b 58       	subi	r24, 0x8B	; 139
     b3c:	9f 4f       	sbci	r25, 0xFF	; 255
     b3e:	20 e0       	ldi	r18, 0x00	; 0
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	40 e8       	ldi	r20, 0x80	; 128
     b44:	5f e3       	ldi	r21, 0x3F	; 63
     b46:	fc 01       	movw	r30, r24
     b48:	60 81       	ld	r22, Z
     b4a:	71 81       	ldd	r23, Z+1	; 0x01
     b4c:	82 81       	ldd	r24, Z+2	; 0x02
     b4e:	93 81       	ldd	r25, Z+3	; 0x03
     b50:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     b54:	88 23       	and	r24, r24
     b56:	4c f4       	brge	.+18     	; 0xb6a <__stack+0x26b>
		__ticks = 1;
     b58:	ce 01       	movw	r24, r28
     b5a:	87 58       	subi	r24, 0x87	; 135
     b5c:	9f 4f       	sbci	r25, 0xFF	; 255
     b5e:	21 e0       	ldi	r18, 0x01	; 1
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	fc 01       	movw	r30, r24
     b64:	31 83       	std	Z+1, r19	; 0x01
     b66:	20 83       	st	Z, r18
     b68:	6d c0       	rjmp	.+218    	; 0xc44 <__stack+0x345>
	else if (__tmp > 65535)
     b6a:	ce 01       	movw	r24, r28
     b6c:	8b 58       	subi	r24, 0x8B	; 139
     b6e:	9f 4f       	sbci	r25, 0xFF	; 255
     b70:	20 e0       	ldi	r18, 0x00	; 0
     b72:	3f ef       	ldi	r19, 0xFF	; 255
     b74:	4f e7       	ldi	r20, 0x7F	; 127
     b76:	57 e4       	ldi	r21, 0x47	; 71
     b78:	fc 01       	movw	r30, r24
     b7a:	60 81       	ld	r22, Z
     b7c:	71 81       	ldd	r23, Z+1	; 0x01
     b7e:	82 81       	ldd	r24, Z+2	; 0x02
     b80:	93 81       	ldd	r25, Z+3	; 0x03
     b82:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     b86:	18 16       	cp	r1, r24
     b88:	0c f0       	brlt	.+2      	; 0xb8c <__stack+0x28d>
     b8a:	4a c0       	rjmp	.+148    	; 0xc20 <__stack+0x321>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b8c:	ce 01       	movw	r24, r28
     b8e:	8f 58       	subi	r24, 0x8F	; 143
     b90:	9f 4f       	sbci	r25, 0xFF	; 255
     b92:	20 e0       	ldi	r18, 0x00	; 0
     b94:	30 e0       	ldi	r19, 0x00	; 0
     b96:	40 e2       	ldi	r20, 0x20	; 32
     b98:	51 e4       	ldi	r21, 0x41	; 65
     b9a:	fc 01       	movw	r30, r24
     b9c:	60 81       	ld	r22, Z
     b9e:	71 81       	ldd	r23, Z+1	; 0x01
     ba0:	82 81       	ldd	r24, Z+2	; 0x02
     ba2:	93 81       	ldd	r25, Z+3	; 0x03
     ba4:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     ba8:	dc 01       	movw	r26, r24
     baa:	cb 01       	movw	r24, r22
     bac:	8e 01       	movw	r16, r28
     bae:	07 58       	subi	r16, 0x87	; 135
     bb0:	1f 4f       	sbci	r17, 0xFF	; 255
     bb2:	bc 01       	movw	r22, r24
     bb4:	cd 01       	movw	r24, r26
     bb6:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     bba:	dc 01       	movw	r26, r24
     bbc:	cb 01       	movw	r24, r22
     bbe:	f8 01       	movw	r30, r16
     bc0:	91 83       	std	Z+1, r25	; 0x01
     bc2:	80 83       	st	Z, r24
     bc4:	24 c0       	rjmp	.+72     	; 0xc0e <__stack+0x30f>
     bc6:	ce 01       	movw	r24, r28
     bc8:	85 58       	subi	r24, 0x85	; 133
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	20 e9       	ldi	r18, 0x90	; 144
     bce:	31 e0       	ldi	r19, 0x01	; 1
     bd0:	fc 01       	movw	r30, r24
     bd2:	31 83       	std	Z+1, r19	; 0x01
     bd4:	20 83       	st	Z, r18
     bd6:	ce 01       	movw	r24, r28
     bd8:	85 58       	subi	r24, 0x85	; 133
     bda:	9f 4f       	sbci	r25, 0xFF	; 255
     bdc:	fc 01       	movw	r30, r24
     bde:	80 81       	ld	r24, Z
     be0:	91 81       	ldd	r25, Z+1	; 0x01
     be2:	01 97       	sbiw	r24, 0x01	; 1
     be4:	f1 f7       	brne	.-4      	; 0xbe2 <__stack+0x2e3>
     be6:	9e 01       	movw	r18, r28
     be8:	25 58       	subi	r18, 0x85	; 133
     bea:	3f 4f       	sbci	r19, 0xFF	; 255
     bec:	f9 01       	movw	r30, r18
     bee:	91 83       	std	Z+1, r25	; 0x01
     bf0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bf2:	ce 01       	movw	r24, r28
     bf4:	87 58       	subi	r24, 0x87	; 135
     bf6:	9f 4f       	sbci	r25, 0xFF	; 255
     bf8:	9e 01       	movw	r18, r28
     bfa:	27 58       	subi	r18, 0x87	; 135
     bfc:	3f 4f       	sbci	r19, 0xFF	; 255
     bfe:	f9 01       	movw	r30, r18
     c00:	20 81       	ld	r18, Z
     c02:	31 81       	ldd	r19, Z+1	; 0x01
     c04:	21 50       	subi	r18, 0x01	; 1
     c06:	31 09       	sbc	r19, r1
     c08:	fc 01       	movw	r30, r24
     c0a:	31 83       	std	Z+1, r19	; 0x01
     c0c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c0e:	ce 01       	movw	r24, r28
     c10:	87 58       	subi	r24, 0x87	; 135
     c12:	9f 4f       	sbci	r25, 0xFF	; 255
     c14:	fc 01       	movw	r30, r24
     c16:	80 81       	ld	r24, Z
     c18:	91 81       	ldd	r25, Z+1	; 0x01
     c1a:	00 97       	sbiw	r24, 0x00	; 0
     c1c:	a1 f6       	brne	.-88     	; 0xbc6 <__stack+0x2c7>
     c1e:	2c c0       	rjmp	.+88     	; 0xc78 <__stack+0x379>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c20:	8e 01       	movw	r16, r28
     c22:	07 58       	subi	r16, 0x87	; 135
     c24:	1f 4f       	sbci	r17, 0xFF	; 255
     c26:	ce 01       	movw	r24, r28
     c28:	8b 58       	subi	r24, 0x8B	; 139
     c2a:	9f 4f       	sbci	r25, 0xFF	; 255
     c2c:	fc 01       	movw	r30, r24
     c2e:	60 81       	ld	r22, Z
     c30:	71 81       	ldd	r23, Z+1	; 0x01
     c32:	82 81       	ldd	r24, Z+2	; 0x02
     c34:	93 81       	ldd	r25, Z+3	; 0x03
     c36:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     c3a:	dc 01       	movw	r26, r24
     c3c:	cb 01       	movw	r24, r22
     c3e:	f8 01       	movw	r30, r16
     c40:	91 83       	std	Z+1, r25	; 0x01
     c42:	80 83       	st	Z, r24
     c44:	ce 01       	movw	r24, r28
     c46:	83 58       	subi	r24, 0x83	; 131
     c48:	9f 4f       	sbci	r25, 0xFF	; 255
     c4a:	9e 01       	movw	r18, r28
     c4c:	27 58       	subi	r18, 0x87	; 135
     c4e:	3f 4f       	sbci	r19, 0xFF	; 255
     c50:	f9 01       	movw	r30, r18
     c52:	20 81       	ld	r18, Z
     c54:	31 81       	ldd	r19, Z+1	; 0x01
     c56:	fc 01       	movw	r30, r24
     c58:	31 83       	std	Z+1, r19	; 0x01
     c5a:	20 83       	st	Z, r18
     c5c:	ce 01       	movw	r24, r28
     c5e:	83 58       	subi	r24, 0x83	; 131
     c60:	9f 4f       	sbci	r25, 0xFF	; 255
     c62:	fc 01       	movw	r30, r24
     c64:	80 81       	ld	r24, Z
     c66:	91 81       	ldd	r25, Z+1	; 0x01
     c68:	01 97       	sbiw	r24, 0x01	; 1
     c6a:	f1 f7       	brne	.-4      	; 0xc68 <__stack+0x369>
     c6c:	9e 01       	movw	r18, r28
     c6e:	23 58       	subi	r18, 0x83	; 131
     c70:	3f 4f       	sbci	r19, 0xFF	; 255
     c72:	f9 01       	movw	r30, r18
     c74:	91 83       	std	Z+1, r25	; 0x01
     c76:	80 83       	st	Z, r24
        _delay_ms(SPACE_DELAY);


        // 2

        PORTB = PORTB ^ (1<<LED_GREEN);     // .
     c78:	85 e2       	ldi	r24, 0x25	; 37
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	25 e2       	ldi	r18, 0x25	; 37
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	f9 01       	movw	r30, r18
     c82:	30 81       	ld	r19, Z
     c84:	20 e2       	ldi	r18, 0x20	; 32
     c86:	23 27       	eor	r18, r19
     c88:	fc 01       	movw	r30, r24
     c8a:	20 83       	st	Z, r18
     c8c:	9e 01       	movw	r18, r28
     c8e:	21 58       	subi	r18, 0x81	; 129
     c90:	3f 4f       	sbci	r19, 0xFF	; 255
     c92:	80 e0       	ldi	r24, 0x00	; 0
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	a8 ec       	ldi	r26, 0xC8	; 200
     c98:	b2 e4       	ldi	r27, 0x42	; 66
     c9a:	f9 01       	movw	r30, r18
     c9c:	80 83       	st	Z, r24
     c9e:	91 83       	std	Z+1, r25	; 0x01
     ca0:	a2 83       	std	Z+2, r26	; 0x02
     ca2:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     ca4:	8e 01       	movw	r16, r28
     ca6:	0d 57       	subi	r16, 0x7D	; 125
     ca8:	1f 4f       	sbci	r17, 0xFF	; 255
     caa:	ce 01       	movw	r24, r28
     cac:	81 58       	subi	r24, 0x81	; 129
     cae:	9f 4f       	sbci	r25, 0xFF	; 255
     cb0:	20 e0       	ldi	r18, 0x00	; 0
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	4a e7       	ldi	r20, 0x7A	; 122
     cb6:	55 e4       	ldi	r21, 0x45	; 69
     cb8:	fc 01       	movw	r30, r24
     cba:	60 81       	ld	r22, Z
     cbc:	71 81       	ldd	r23, Z+1	; 0x01
     cbe:	82 81       	ldd	r24, Z+2	; 0x02
     cc0:	93 81       	ldd	r25, Z+3	; 0x03
     cc2:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     cc6:	dc 01       	movw	r26, r24
     cc8:	cb 01       	movw	r24, r22
     cca:	f8 01       	movw	r30, r16
     ccc:	80 83       	st	Z, r24
     cce:	91 83       	std	Z+1, r25	; 0x01
     cd0:	a2 83       	std	Z+2, r26	; 0x02
     cd2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     cd4:	ce 01       	movw	r24, r28
     cd6:	8d 57       	subi	r24, 0x7D	; 125
     cd8:	9f 4f       	sbci	r25, 0xFF	; 255
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	40 e8       	ldi	r20, 0x80	; 128
     ce0:	5f e3       	ldi	r21, 0x3F	; 63
     ce2:	fc 01       	movw	r30, r24
     ce4:	60 81       	ld	r22, Z
     ce6:	71 81       	ldd	r23, Z+1	; 0x01
     ce8:	82 81       	ldd	r24, Z+2	; 0x02
     cea:	93 81       	ldd	r25, Z+3	; 0x03
     cec:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     cf0:	88 23       	and	r24, r24
     cf2:	4c f4       	brge	.+18     	; 0xd06 <__stack+0x407>
		__ticks = 1;
     cf4:	ce 01       	movw	r24, r28
     cf6:	89 57       	subi	r24, 0x79	; 121
     cf8:	9f 4f       	sbci	r25, 0xFF	; 255
     cfa:	21 e0       	ldi	r18, 0x01	; 1
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	fc 01       	movw	r30, r24
     d00:	31 83       	std	Z+1, r19	; 0x01
     d02:	20 83       	st	Z, r18
     d04:	6d c0       	rjmp	.+218    	; 0xde0 <__stack+0x4e1>
	else if (__tmp > 65535)
     d06:	ce 01       	movw	r24, r28
     d08:	8d 57       	subi	r24, 0x7D	; 125
     d0a:	9f 4f       	sbci	r25, 0xFF	; 255
     d0c:	20 e0       	ldi	r18, 0x00	; 0
     d0e:	3f ef       	ldi	r19, 0xFF	; 255
     d10:	4f e7       	ldi	r20, 0x7F	; 127
     d12:	57 e4       	ldi	r21, 0x47	; 71
     d14:	fc 01       	movw	r30, r24
     d16:	60 81       	ld	r22, Z
     d18:	71 81       	ldd	r23, Z+1	; 0x01
     d1a:	82 81       	ldd	r24, Z+2	; 0x02
     d1c:	93 81       	ldd	r25, Z+3	; 0x03
     d1e:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     d22:	18 16       	cp	r1, r24
     d24:	0c f0       	brlt	.+2      	; 0xd28 <__stack+0x429>
     d26:	4a c0       	rjmp	.+148    	; 0xdbc <__stack+0x4bd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d28:	ce 01       	movw	r24, r28
     d2a:	81 58       	subi	r24, 0x81	; 129
     d2c:	9f 4f       	sbci	r25, 0xFF	; 255
     d2e:	20 e0       	ldi	r18, 0x00	; 0
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	40 e2       	ldi	r20, 0x20	; 32
     d34:	51 e4       	ldi	r21, 0x41	; 65
     d36:	fc 01       	movw	r30, r24
     d38:	60 81       	ld	r22, Z
     d3a:	71 81       	ldd	r23, Z+1	; 0x01
     d3c:	82 81       	ldd	r24, Z+2	; 0x02
     d3e:	93 81       	ldd	r25, Z+3	; 0x03
     d40:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     d44:	dc 01       	movw	r26, r24
     d46:	cb 01       	movw	r24, r22
     d48:	8e 01       	movw	r16, r28
     d4a:	09 57       	subi	r16, 0x79	; 121
     d4c:	1f 4f       	sbci	r17, 0xFF	; 255
     d4e:	bc 01       	movw	r22, r24
     d50:	cd 01       	movw	r24, r26
     d52:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     d56:	dc 01       	movw	r26, r24
     d58:	cb 01       	movw	r24, r22
     d5a:	f8 01       	movw	r30, r16
     d5c:	91 83       	std	Z+1, r25	; 0x01
     d5e:	80 83       	st	Z, r24
     d60:	24 c0       	rjmp	.+72     	; 0xdaa <__stack+0x4ab>
     d62:	ce 01       	movw	r24, r28
     d64:	87 57       	subi	r24, 0x77	; 119
     d66:	9f 4f       	sbci	r25, 0xFF	; 255
     d68:	20 e9       	ldi	r18, 0x90	; 144
     d6a:	31 e0       	ldi	r19, 0x01	; 1
     d6c:	fc 01       	movw	r30, r24
     d6e:	31 83       	std	Z+1, r19	; 0x01
     d70:	20 83       	st	Z, r18
     d72:	ce 01       	movw	r24, r28
     d74:	87 57       	subi	r24, 0x77	; 119
     d76:	9f 4f       	sbci	r25, 0xFF	; 255
     d78:	fc 01       	movw	r30, r24
     d7a:	80 81       	ld	r24, Z
     d7c:	91 81       	ldd	r25, Z+1	; 0x01
     d7e:	01 97       	sbiw	r24, 0x01	; 1
     d80:	f1 f7       	brne	.-4      	; 0xd7e <__stack+0x47f>
     d82:	9e 01       	movw	r18, r28
     d84:	27 57       	subi	r18, 0x77	; 119
     d86:	3f 4f       	sbci	r19, 0xFF	; 255
     d88:	f9 01       	movw	r30, r18
     d8a:	91 83       	std	Z+1, r25	; 0x01
     d8c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d8e:	ce 01       	movw	r24, r28
     d90:	89 57       	subi	r24, 0x79	; 121
     d92:	9f 4f       	sbci	r25, 0xFF	; 255
     d94:	9e 01       	movw	r18, r28
     d96:	29 57       	subi	r18, 0x79	; 121
     d98:	3f 4f       	sbci	r19, 0xFF	; 255
     d9a:	f9 01       	movw	r30, r18
     d9c:	20 81       	ld	r18, Z
     d9e:	31 81       	ldd	r19, Z+1	; 0x01
     da0:	21 50       	subi	r18, 0x01	; 1
     da2:	31 09       	sbc	r19, r1
     da4:	fc 01       	movw	r30, r24
     da6:	31 83       	std	Z+1, r19	; 0x01
     da8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     daa:	ce 01       	movw	r24, r28
     dac:	89 57       	subi	r24, 0x79	; 121
     dae:	9f 4f       	sbci	r25, 0xFF	; 255
     db0:	fc 01       	movw	r30, r24
     db2:	80 81       	ld	r24, Z
     db4:	91 81       	ldd	r25, Z+1	; 0x01
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	a1 f6       	brne	.-88     	; 0xd62 <__stack+0x463>
     dba:	2c c0       	rjmp	.+88     	; 0xe14 <__stack+0x515>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dbc:	8e 01       	movw	r16, r28
     dbe:	09 57       	subi	r16, 0x79	; 121
     dc0:	1f 4f       	sbci	r17, 0xFF	; 255
     dc2:	ce 01       	movw	r24, r28
     dc4:	8d 57       	subi	r24, 0x7D	; 125
     dc6:	9f 4f       	sbci	r25, 0xFF	; 255
     dc8:	fc 01       	movw	r30, r24
     dca:	60 81       	ld	r22, Z
     dcc:	71 81       	ldd	r23, Z+1	; 0x01
     dce:	82 81       	ldd	r24, Z+2	; 0x02
     dd0:	93 81       	ldd	r25, Z+3	; 0x03
     dd2:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     dd6:	dc 01       	movw	r26, r24
     dd8:	cb 01       	movw	r24, r22
     dda:	f8 01       	movw	r30, r16
     ddc:	91 83       	std	Z+1, r25	; 0x01
     dde:	80 83       	st	Z, r24
     de0:	ce 01       	movw	r24, r28
     de2:	85 57       	subi	r24, 0x75	; 117
     de4:	9f 4f       	sbci	r25, 0xFF	; 255
     de6:	9e 01       	movw	r18, r28
     de8:	29 57       	subi	r18, 0x79	; 121
     dea:	3f 4f       	sbci	r19, 0xFF	; 255
     dec:	f9 01       	movw	r30, r18
     dee:	20 81       	ld	r18, Z
     df0:	31 81       	ldd	r19, Z+1	; 0x01
     df2:	fc 01       	movw	r30, r24
     df4:	31 83       	std	Z+1, r19	; 0x01
     df6:	20 83       	st	Z, r18
     df8:	ce 01       	movw	r24, r28
     dfa:	85 57       	subi	r24, 0x75	; 117
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	fc 01       	movw	r30, r24
     e00:	80 81       	ld	r24, Z
     e02:	91 81       	ldd	r25, Z+1	; 0x01
     e04:	01 97       	sbiw	r24, 0x01	; 1
     e06:	f1 f7       	brne	.-4      	; 0xe04 <__stack+0x505>
     e08:	9e 01       	movw	r18, r28
     e0a:	25 57       	subi	r18, 0x75	; 117
     e0c:	3f 4f       	sbci	r19, 0xFF	; 255
     e0e:	f9 01       	movw	r30, r18
     e10:	91 83       	std	Z+1, r25	; 0x01
     e12:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
     e14:	85 e2       	ldi	r24, 0x25	; 37
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	25 e2       	ldi	r18, 0x25	; 37
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	f9 01       	movw	r30, r18
     e1e:	30 81       	ld	r19, Z
     e20:	20 e2       	ldi	r18, 0x20	; 32
     e22:	23 27       	eor	r18, r19
     e24:	fc 01       	movw	r30, r24
     e26:	20 83       	st	Z, r18
     e28:	9e 01       	movw	r18, r28
     e2a:	23 57       	subi	r18, 0x73	; 115
     e2c:	3f 4f       	sbci	r19, 0xFF	; 255
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	a8 ec       	ldi	r26, 0xC8	; 200
     e34:	b2 e4       	ldi	r27, 0x42	; 66
     e36:	f9 01       	movw	r30, r18
     e38:	80 83       	st	Z, r24
     e3a:	91 83       	std	Z+1, r25	; 0x01
     e3c:	a2 83       	std	Z+2, r26	; 0x02
     e3e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     e40:	8e 01       	movw	r16, r28
     e42:	0f 56       	subi	r16, 0x6F	; 111
     e44:	1f 4f       	sbci	r17, 0xFF	; 255
     e46:	ce 01       	movw	r24, r28
     e48:	83 57       	subi	r24, 0x73	; 115
     e4a:	9f 4f       	sbci	r25, 0xFF	; 255
     e4c:	20 e0       	ldi	r18, 0x00	; 0
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	4a e7       	ldi	r20, 0x7A	; 122
     e52:	55 e4       	ldi	r21, 0x45	; 69
     e54:	fc 01       	movw	r30, r24
     e56:	60 81       	ld	r22, Z
     e58:	71 81       	ldd	r23, Z+1	; 0x01
     e5a:	82 81       	ldd	r24, Z+2	; 0x02
     e5c:	93 81       	ldd	r25, Z+3	; 0x03
     e5e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     e62:	dc 01       	movw	r26, r24
     e64:	cb 01       	movw	r24, r22
     e66:	f8 01       	movw	r30, r16
     e68:	80 83       	st	Z, r24
     e6a:	91 83       	std	Z+1, r25	; 0x01
     e6c:	a2 83       	std	Z+2, r26	; 0x02
     e6e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e70:	ce 01       	movw	r24, r28
     e72:	8f 56       	subi	r24, 0x6F	; 111
     e74:	9f 4f       	sbci	r25, 0xFF	; 255
     e76:	20 e0       	ldi	r18, 0x00	; 0
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	40 e8       	ldi	r20, 0x80	; 128
     e7c:	5f e3       	ldi	r21, 0x3F	; 63
     e7e:	fc 01       	movw	r30, r24
     e80:	60 81       	ld	r22, Z
     e82:	71 81       	ldd	r23, Z+1	; 0x01
     e84:	82 81       	ldd	r24, Z+2	; 0x02
     e86:	93 81       	ldd	r25, Z+3	; 0x03
     e88:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
     e8c:	88 23       	and	r24, r24
     e8e:	4c f4       	brge	.+18     	; 0xea2 <__stack+0x5a3>
		__ticks = 1;
     e90:	ce 01       	movw	r24, r28
     e92:	8b 56       	subi	r24, 0x6B	; 107
     e94:	9f 4f       	sbci	r25, 0xFF	; 255
     e96:	21 e0       	ldi	r18, 0x01	; 1
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	fc 01       	movw	r30, r24
     e9c:	31 83       	std	Z+1, r19	; 0x01
     e9e:	20 83       	st	Z, r18
     ea0:	6d c0       	rjmp	.+218    	; 0xf7c <__stack+0x67d>
	else if (__tmp > 65535)
     ea2:	ce 01       	movw	r24, r28
     ea4:	8f 56       	subi	r24, 0x6F	; 111
     ea6:	9f 4f       	sbci	r25, 0xFF	; 255
     ea8:	20 e0       	ldi	r18, 0x00	; 0
     eaa:	3f ef       	ldi	r19, 0xFF	; 255
     eac:	4f e7       	ldi	r20, 0x7F	; 127
     eae:	57 e4       	ldi	r21, 0x47	; 71
     eb0:	fc 01       	movw	r30, r24
     eb2:	60 81       	ld	r22, Z
     eb4:	71 81       	ldd	r23, Z+1	; 0x01
     eb6:	82 81       	ldd	r24, Z+2	; 0x02
     eb8:	93 81       	ldd	r25, Z+3	; 0x03
     eba:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
     ebe:	18 16       	cp	r1, r24
     ec0:	0c f0       	brlt	.+2      	; 0xec4 <__stack+0x5c5>
     ec2:	4a c0       	rjmp	.+148    	; 0xf58 <__stack+0x659>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ec4:	ce 01       	movw	r24, r28
     ec6:	83 57       	subi	r24, 0x73	; 115
     ec8:	9f 4f       	sbci	r25, 0xFF	; 255
     eca:	20 e0       	ldi	r18, 0x00	; 0
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	40 e2       	ldi	r20, 0x20	; 32
     ed0:	51 e4       	ldi	r21, 0x41	; 65
     ed2:	fc 01       	movw	r30, r24
     ed4:	60 81       	ld	r22, Z
     ed6:	71 81       	ldd	r23, Z+1	; 0x01
     ed8:	82 81       	ldd	r24, Z+2	; 0x02
     eda:	93 81       	ldd	r25, Z+3	; 0x03
     edc:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     ee0:	dc 01       	movw	r26, r24
     ee2:	cb 01       	movw	r24, r22
     ee4:	8e 01       	movw	r16, r28
     ee6:	0b 56       	subi	r16, 0x6B	; 107
     ee8:	1f 4f       	sbci	r17, 0xFF	; 255
     eea:	bc 01       	movw	r22, r24
     eec:	cd 01       	movw	r24, r26
     eee:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     ef2:	dc 01       	movw	r26, r24
     ef4:	cb 01       	movw	r24, r22
     ef6:	f8 01       	movw	r30, r16
     ef8:	91 83       	std	Z+1, r25	; 0x01
     efa:	80 83       	st	Z, r24
     efc:	24 c0       	rjmp	.+72     	; 0xf46 <__stack+0x647>
     efe:	ce 01       	movw	r24, r28
     f00:	89 56       	subi	r24, 0x69	; 105
     f02:	9f 4f       	sbci	r25, 0xFF	; 255
     f04:	20 e9       	ldi	r18, 0x90	; 144
     f06:	31 e0       	ldi	r19, 0x01	; 1
     f08:	fc 01       	movw	r30, r24
     f0a:	31 83       	std	Z+1, r19	; 0x01
     f0c:	20 83       	st	Z, r18
     f0e:	ce 01       	movw	r24, r28
     f10:	89 56       	subi	r24, 0x69	; 105
     f12:	9f 4f       	sbci	r25, 0xFF	; 255
     f14:	fc 01       	movw	r30, r24
     f16:	80 81       	ld	r24, Z
     f18:	91 81       	ldd	r25, Z+1	; 0x01
     f1a:	01 97       	sbiw	r24, 0x01	; 1
     f1c:	f1 f7       	brne	.-4      	; 0xf1a <__stack+0x61b>
     f1e:	9e 01       	movw	r18, r28
     f20:	29 56       	subi	r18, 0x69	; 105
     f22:	3f 4f       	sbci	r19, 0xFF	; 255
     f24:	f9 01       	movw	r30, r18
     f26:	91 83       	std	Z+1, r25	; 0x01
     f28:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f2a:	ce 01       	movw	r24, r28
     f2c:	8b 56       	subi	r24, 0x6B	; 107
     f2e:	9f 4f       	sbci	r25, 0xFF	; 255
     f30:	9e 01       	movw	r18, r28
     f32:	2b 56       	subi	r18, 0x6B	; 107
     f34:	3f 4f       	sbci	r19, 0xFF	; 255
     f36:	f9 01       	movw	r30, r18
     f38:	20 81       	ld	r18, Z
     f3a:	31 81       	ldd	r19, Z+1	; 0x01
     f3c:	21 50       	subi	r18, 0x01	; 1
     f3e:	31 09       	sbc	r19, r1
     f40:	fc 01       	movw	r30, r24
     f42:	31 83       	std	Z+1, r19	; 0x01
     f44:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f46:	ce 01       	movw	r24, r28
     f48:	8b 56       	subi	r24, 0x6B	; 107
     f4a:	9f 4f       	sbci	r25, 0xFF	; 255
     f4c:	fc 01       	movw	r30, r24
     f4e:	80 81       	ld	r24, Z
     f50:	91 81       	ldd	r25, Z+1	; 0x01
     f52:	00 97       	sbiw	r24, 0x00	; 0
     f54:	a1 f6       	brne	.-88     	; 0xefe <__stack+0x5ff>
     f56:	2c c0       	rjmp	.+88     	; 0xfb0 <__stack+0x6b1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f58:	8e 01       	movw	r16, r28
     f5a:	0b 56       	subi	r16, 0x6B	; 107
     f5c:	1f 4f       	sbci	r17, 0xFF	; 255
     f5e:	ce 01       	movw	r24, r28
     f60:	8f 56       	subi	r24, 0x6F	; 111
     f62:	9f 4f       	sbci	r25, 0xFF	; 255
     f64:	fc 01       	movw	r30, r24
     f66:	60 81       	ld	r22, Z
     f68:	71 81       	ldd	r23, Z+1	; 0x01
     f6a:	82 81       	ldd	r24, Z+2	; 0x02
     f6c:	93 81       	ldd	r25, Z+3	; 0x03
     f6e:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
     f72:	dc 01       	movw	r26, r24
     f74:	cb 01       	movw	r24, r22
     f76:	f8 01       	movw	r30, r16
     f78:	91 83       	std	Z+1, r25	; 0x01
     f7a:	80 83       	st	Z, r24
     f7c:	ce 01       	movw	r24, r28
     f7e:	87 56       	subi	r24, 0x67	; 103
     f80:	9f 4f       	sbci	r25, 0xFF	; 255
     f82:	9e 01       	movw	r18, r28
     f84:	2b 56       	subi	r18, 0x6B	; 107
     f86:	3f 4f       	sbci	r19, 0xFF	; 255
     f88:	f9 01       	movw	r30, r18
     f8a:	20 81       	ld	r18, Z
     f8c:	31 81       	ldd	r19, Z+1	; 0x01
     f8e:	fc 01       	movw	r30, r24
     f90:	31 83       	std	Z+1, r19	; 0x01
     f92:	20 83       	st	Z, r18
     f94:	ce 01       	movw	r24, r28
     f96:	87 56       	subi	r24, 0x67	; 103
     f98:	9f 4f       	sbci	r25, 0xFF	; 255
     f9a:	fc 01       	movw	r30, r24
     f9c:	80 81       	ld	r24, Z
     f9e:	91 81       	ldd	r25, Z+1	; 0x01
     fa0:	01 97       	sbiw	r24, 0x01	; 1
     fa2:	f1 f7       	brne	.-4      	; 0xfa0 <__stack+0x6a1>
     fa4:	9e 01       	movw	r18, r28
     fa6:	27 56       	subi	r18, 0x67	; 103
     fa8:	3f 4f       	sbci	r19, 0xFF	; 255
     faa:	f9 01       	movw	r30, r18
     fac:	91 83       	std	Z+1, r25	; 0x01
     fae:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);     // .
     fb0:	85 e2       	ldi	r24, 0x25	; 37
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	25 e2       	ldi	r18, 0x25	; 37
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	f9 01       	movw	r30, r18
     fba:	30 81       	ld	r19, Z
     fbc:	20 e2       	ldi	r18, 0x20	; 32
     fbe:	23 27       	eor	r18, r19
     fc0:	fc 01       	movw	r30, r24
     fc2:	20 83       	st	Z, r18
     fc4:	9e 01       	movw	r18, r28
     fc6:	25 56       	subi	r18, 0x65	; 101
     fc8:	3f 4f       	sbci	r19, 0xFF	; 255
     fca:	80 e0       	ldi	r24, 0x00	; 0
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	a8 ec       	ldi	r26, 0xC8	; 200
     fd0:	b2 e4       	ldi	r27, 0x42	; 66
     fd2:	f9 01       	movw	r30, r18
     fd4:	80 83       	st	Z, r24
     fd6:	91 83       	std	Z+1, r25	; 0x01
     fd8:	a2 83       	std	Z+2, r26	; 0x02
     fda:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     fdc:	8e 01       	movw	r16, r28
     fde:	01 56       	subi	r16, 0x61	; 97
     fe0:	1f 4f       	sbci	r17, 0xFF	; 255
     fe2:	ce 01       	movw	r24, r28
     fe4:	85 56       	subi	r24, 0x65	; 101
     fe6:	9f 4f       	sbci	r25, 0xFF	; 255
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	4a e7       	ldi	r20, 0x7A	; 122
     fee:	55 e4       	ldi	r21, 0x45	; 69
     ff0:	fc 01       	movw	r30, r24
     ff2:	60 81       	ld	r22, Z
     ff4:	71 81       	ldd	r23, Z+1	; 0x01
     ff6:	82 81       	ldd	r24, Z+2	; 0x02
     ff8:	93 81       	ldd	r25, Z+3	; 0x03
     ffa:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
     ffe:	dc 01       	movw	r26, r24
    1000:	cb 01       	movw	r24, r22
    1002:	f8 01       	movw	r30, r16
    1004:	80 83       	st	Z, r24
    1006:	91 83       	std	Z+1, r25	; 0x01
    1008:	a2 83       	std	Z+2, r26	; 0x02
    100a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    100c:	ce 01       	movw	r24, r28
    100e:	81 56       	subi	r24, 0x61	; 97
    1010:	9f 4f       	sbci	r25, 0xFF	; 255
    1012:	20 e0       	ldi	r18, 0x00	; 0
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	40 e8       	ldi	r20, 0x80	; 128
    1018:	5f e3       	ldi	r21, 0x3F	; 63
    101a:	fc 01       	movw	r30, r24
    101c:	60 81       	ld	r22, Z
    101e:	71 81       	ldd	r23, Z+1	; 0x01
    1020:	82 81       	ldd	r24, Z+2	; 0x02
    1022:	93 81       	ldd	r25, Z+3	; 0x03
    1024:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    1028:	88 23       	and	r24, r24
    102a:	4c f4       	brge	.+18     	; 0x103e <__stack+0x73f>
		__ticks = 1;
    102c:	ce 01       	movw	r24, r28
    102e:	8d 55       	subi	r24, 0x5D	; 93
    1030:	9f 4f       	sbci	r25, 0xFF	; 255
    1032:	21 e0       	ldi	r18, 0x01	; 1
    1034:	30 e0       	ldi	r19, 0x00	; 0
    1036:	fc 01       	movw	r30, r24
    1038:	31 83       	std	Z+1, r19	; 0x01
    103a:	20 83       	st	Z, r18
    103c:	6d c0       	rjmp	.+218    	; 0x1118 <__stack+0x819>
	else if (__tmp > 65535)
    103e:	ce 01       	movw	r24, r28
    1040:	81 56       	subi	r24, 0x61	; 97
    1042:	9f 4f       	sbci	r25, 0xFF	; 255
    1044:	20 e0       	ldi	r18, 0x00	; 0
    1046:	3f ef       	ldi	r19, 0xFF	; 255
    1048:	4f e7       	ldi	r20, 0x7F	; 127
    104a:	57 e4       	ldi	r21, 0x47	; 71
    104c:	fc 01       	movw	r30, r24
    104e:	60 81       	ld	r22, Z
    1050:	71 81       	ldd	r23, Z+1	; 0x01
    1052:	82 81       	ldd	r24, Z+2	; 0x02
    1054:	93 81       	ldd	r25, Z+3	; 0x03
    1056:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    105a:	18 16       	cp	r1, r24
    105c:	0c f0       	brlt	.+2      	; 0x1060 <__stack+0x761>
    105e:	4a c0       	rjmp	.+148    	; 0x10f4 <__stack+0x7f5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1060:	ce 01       	movw	r24, r28
    1062:	85 56       	subi	r24, 0x65	; 101
    1064:	9f 4f       	sbci	r25, 0xFF	; 255
    1066:	20 e0       	ldi	r18, 0x00	; 0
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	40 e2       	ldi	r20, 0x20	; 32
    106c:	51 e4       	ldi	r21, 0x41	; 65
    106e:	fc 01       	movw	r30, r24
    1070:	60 81       	ld	r22, Z
    1072:	71 81       	ldd	r23, Z+1	; 0x01
    1074:	82 81       	ldd	r24, Z+2	; 0x02
    1076:	93 81       	ldd	r25, Z+3	; 0x03
    1078:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    107c:	dc 01       	movw	r26, r24
    107e:	cb 01       	movw	r24, r22
    1080:	8e 01       	movw	r16, r28
    1082:	0d 55       	subi	r16, 0x5D	; 93
    1084:	1f 4f       	sbci	r17, 0xFF	; 255
    1086:	bc 01       	movw	r22, r24
    1088:	cd 01       	movw	r24, r26
    108a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    108e:	dc 01       	movw	r26, r24
    1090:	cb 01       	movw	r24, r22
    1092:	f8 01       	movw	r30, r16
    1094:	91 83       	std	Z+1, r25	; 0x01
    1096:	80 83       	st	Z, r24
    1098:	24 c0       	rjmp	.+72     	; 0x10e2 <__stack+0x7e3>
    109a:	ce 01       	movw	r24, r28
    109c:	8b 55       	subi	r24, 0x5B	; 91
    109e:	9f 4f       	sbci	r25, 0xFF	; 255
    10a0:	20 e9       	ldi	r18, 0x90	; 144
    10a2:	31 e0       	ldi	r19, 0x01	; 1
    10a4:	fc 01       	movw	r30, r24
    10a6:	31 83       	std	Z+1, r19	; 0x01
    10a8:	20 83       	st	Z, r18
    10aa:	ce 01       	movw	r24, r28
    10ac:	8b 55       	subi	r24, 0x5B	; 91
    10ae:	9f 4f       	sbci	r25, 0xFF	; 255
    10b0:	fc 01       	movw	r30, r24
    10b2:	80 81       	ld	r24, Z
    10b4:	91 81       	ldd	r25, Z+1	; 0x01
    10b6:	01 97       	sbiw	r24, 0x01	; 1
    10b8:	f1 f7       	brne	.-4      	; 0x10b6 <__stack+0x7b7>
    10ba:	9e 01       	movw	r18, r28
    10bc:	2b 55       	subi	r18, 0x5B	; 91
    10be:	3f 4f       	sbci	r19, 0xFF	; 255
    10c0:	f9 01       	movw	r30, r18
    10c2:	91 83       	std	Z+1, r25	; 0x01
    10c4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10c6:	ce 01       	movw	r24, r28
    10c8:	8d 55       	subi	r24, 0x5D	; 93
    10ca:	9f 4f       	sbci	r25, 0xFF	; 255
    10cc:	9e 01       	movw	r18, r28
    10ce:	2d 55       	subi	r18, 0x5D	; 93
    10d0:	3f 4f       	sbci	r19, 0xFF	; 255
    10d2:	f9 01       	movw	r30, r18
    10d4:	20 81       	ld	r18, Z
    10d6:	31 81       	ldd	r19, Z+1	; 0x01
    10d8:	21 50       	subi	r18, 0x01	; 1
    10da:	31 09       	sbc	r19, r1
    10dc:	fc 01       	movw	r30, r24
    10de:	31 83       	std	Z+1, r19	; 0x01
    10e0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10e2:	ce 01       	movw	r24, r28
    10e4:	8d 55       	subi	r24, 0x5D	; 93
    10e6:	9f 4f       	sbci	r25, 0xFF	; 255
    10e8:	fc 01       	movw	r30, r24
    10ea:	80 81       	ld	r24, Z
    10ec:	91 81       	ldd	r25, Z+1	; 0x01
    10ee:	00 97       	sbiw	r24, 0x00	; 0
    10f0:	a1 f6       	brne	.-88     	; 0x109a <__stack+0x79b>
    10f2:	2c c0       	rjmp	.+88     	; 0x114c <__stack+0x84d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10f4:	8e 01       	movw	r16, r28
    10f6:	0d 55       	subi	r16, 0x5D	; 93
    10f8:	1f 4f       	sbci	r17, 0xFF	; 255
    10fa:	ce 01       	movw	r24, r28
    10fc:	81 56       	subi	r24, 0x61	; 97
    10fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1100:	fc 01       	movw	r30, r24
    1102:	60 81       	ld	r22, Z
    1104:	71 81       	ldd	r23, Z+1	; 0x01
    1106:	82 81       	ldd	r24, Z+2	; 0x02
    1108:	93 81       	ldd	r25, Z+3	; 0x03
    110a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    110e:	dc 01       	movw	r26, r24
    1110:	cb 01       	movw	r24, r22
    1112:	f8 01       	movw	r30, r16
    1114:	91 83       	std	Z+1, r25	; 0x01
    1116:	80 83       	st	Z, r24
    1118:	ce 01       	movw	r24, r28
    111a:	89 55       	subi	r24, 0x59	; 89
    111c:	9f 4f       	sbci	r25, 0xFF	; 255
    111e:	9e 01       	movw	r18, r28
    1120:	2d 55       	subi	r18, 0x5D	; 93
    1122:	3f 4f       	sbci	r19, 0xFF	; 255
    1124:	f9 01       	movw	r30, r18
    1126:	20 81       	ld	r18, Z
    1128:	31 81       	ldd	r19, Z+1	; 0x01
    112a:	fc 01       	movw	r30, r24
    112c:	31 83       	std	Z+1, r19	; 0x01
    112e:	20 83       	st	Z, r18
    1130:	ce 01       	movw	r24, r28
    1132:	89 55       	subi	r24, 0x59	; 89
    1134:	9f 4f       	sbci	r25, 0xFF	; 255
    1136:	fc 01       	movw	r30, r24
    1138:	80 81       	ld	r24, Z
    113a:	91 81       	ldd	r25, Z+1	; 0x01
    113c:	01 97       	sbiw	r24, 0x01	; 1
    113e:	f1 f7       	brne	.-4      	; 0x113c <__stack+0x83d>
    1140:	9e 01       	movw	r18, r28
    1142:	29 55       	subi	r18, 0x59	; 89
    1144:	3f 4f       	sbci	r19, 0xFF	; 255
    1146:	f9 01       	movw	r30, r18
    1148:	91 83       	std	Z+1, r25	; 0x01
    114a:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
    114c:	85 e2       	ldi	r24, 0x25	; 37
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	25 e2       	ldi	r18, 0x25	; 37
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	f9 01       	movw	r30, r18
    1156:	30 81       	ld	r19, Z
    1158:	20 e2       	ldi	r18, 0x20	; 32
    115a:	23 27       	eor	r18, r19
    115c:	fc 01       	movw	r30, r24
    115e:	20 83       	st	Z, r18
    1160:	9e 01       	movw	r18, r28
    1162:	27 55       	subi	r18, 0x57	; 87
    1164:	3f 4f       	sbci	r19, 0xFF	; 255
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	a8 ec       	ldi	r26, 0xC8	; 200
    116c:	b2 e4       	ldi	r27, 0x42	; 66
    116e:	f9 01       	movw	r30, r18
    1170:	80 83       	st	Z, r24
    1172:	91 83       	std	Z+1, r25	; 0x01
    1174:	a2 83       	std	Z+2, r26	; 0x02
    1176:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1178:	8e 01       	movw	r16, r28
    117a:	03 55       	subi	r16, 0x53	; 83
    117c:	1f 4f       	sbci	r17, 0xFF	; 255
    117e:	ce 01       	movw	r24, r28
    1180:	87 55       	subi	r24, 0x57	; 87
    1182:	9f 4f       	sbci	r25, 0xFF	; 255
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	4a e7       	ldi	r20, 0x7A	; 122
    118a:	55 e4       	ldi	r21, 0x45	; 69
    118c:	fc 01       	movw	r30, r24
    118e:	60 81       	ld	r22, Z
    1190:	71 81       	ldd	r23, Z+1	; 0x01
    1192:	82 81       	ldd	r24, Z+2	; 0x02
    1194:	93 81       	ldd	r25, Z+3	; 0x03
    1196:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    119a:	dc 01       	movw	r26, r24
    119c:	cb 01       	movw	r24, r22
    119e:	f8 01       	movw	r30, r16
    11a0:	80 83       	st	Z, r24
    11a2:	91 83       	std	Z+1, r25	; 0x01
    11a4:	a2 83       	std	Z+2, r26	; 0x02
    11a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11a8:	ce 01       	movw	r24, r28
    11aa:	83 55       	subi	r24, 0x53	; 83
    11ac:	9f 4f       	sbci	r25, 0xFF	; 255
    11ae:	20 e0       	ldi	r18, 0x00	; 0
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	40 e8       	ldi	r20, 0x80	; 128
    11b4:	5f e3       	ldi	r21, 0x3F	; 63
    11b6:	fc 01       	movw	r30, r24
    11b8:	60 81       	ld	r22, Z
    11ba:	71 81       	ldd	r23, Z+1	; 0x01
    11bc:	82 81       	ldd	r24, Z+2	; 0x02
    11be:	93 81       	ldd	r25, Z+3	; 0x03
    11c0:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    11c4:	88 23       	and	r24, r24
    11c6:	4c f4       	brge	.+18     	; 0x11da <__stack+0x8db>
		__ticks = 1;
    11c8:	ce 01       	movw	r24, r28
    11ca:	8f 54       	subi	r24, 0x4F	; 79
    11cc:	9f 4f       	sbci	r25, 0xFF	; 255
    11ce:	21 e0       	ldi	r18, 0x01	; 1
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	fc 01       	movw	r30, r24
    11d4:	31 83       	std	Z+1, r19	; 0x01
    11d6:	20 83       	st	Z, r18
    11d8:	6d c0       	rjmp	.+218    	; 0x12b4 <__stack+0x9b5>
	else if (__tmp > 65535)
    11da:	ce 01       	movw	r24, r28
    11dc:	83 55       	subi	r24, 0x53	; 83
    11de:	9f 4f       	sbci	r25, 0xFF	; 255
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	3f ef       	ldi	r19, 0xFF	; 255
    11e4:	4f e7       	ldi	r20, 0x7F	; 127
    11e6:	57 e4       	ldi	r21, 0x47	; 71
    11e8:	fc 01       	movw	r30, r24
    11ea:	60 81       	ld	r22, Z
    11ec:	71 81       	ldd	r23, Z+1	; 0x01
    11ee:	82 81       	ldd	r24, Z+2	; 0x02
    11f0:	93 81       	ldd	r25, Z+3	; 0x03
    11f2:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    11f6:	18 16       	cp	r1, r24
    11f8:	0c f0       	brlt	.+2      	; 0x11fc <__stack+0x8fd>
    11fa:	4a c0       	rjmp	.+148    	; 0x1290 <__stack+0x991>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11fc:	ce 01       	movw	r24, r28
    11fe:	87 55       	subi	r24, 0x57	; 87
    1200:	9f 4f       	sbci	r25, 0xFF	; 255
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	40 e2       	ldi	r20, 0x20	; 32
    1208:	51 e4       	ldi	r21, 0x41	; 65
    120a:	fc 01       	movw	r30, r24
    120c:	60 81       	ld	r22, Z
    120e:	71 81       	ldd	r23, Z+1	; 0x01
    1210:	82 81       	ldd	r24, Z+2	; 0x02
    1212:	93 81       	ldd	r25, Z+3	; 0x03
    1214:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    1218:	dc 01       	movw	r26, r24
    121a:	cb 01       	movw	r24, r22
    121c:	8e 01       	movw	r16, r28
    121e:	0f 54       	subi	r16, 0x4F	; 79
    1220:	1f 4f       	sbci	r17, 0xFF	; 255
    1222:	bc 01       	movw	r22, r24
    1224:	cd 01       	movw	r24, r26
    1226:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    122a:	dc 01       	movw	r26, r24
    122c:	cb 01       	movw	r24, r22
    122e:	f8 01       	movw	r30, r16
    1230:	91 83       	std	Z+1, r25	; 0x01
    1232:	80 83       	st	Z, r24
    1234:	24 c0       	rjmp	.+72     	; 0x127e <__stack+0x97f>
    1236:	ce 01       	movw	r24, r28
    1238:	8d 54       	subi	r24, 0x4D	; 77
    123a:	9f 4f       	sbci	r25, 0xFF	; 255
    123c:	20 e9       	ldi	r18, 0x90	; 144
    123e:	31 e0       	ldi	r19, 0x01	; 1
    1240:	fc 01       	movw	r30, r24
    1242:	31 83       	std	Z+1, r19	; 0x01
    1244:	20 83       	st	Z, r18
    1246:	ce 01       	movw	r24, r28
    1248:	8d 54       	subi	r24, 0x4D	; 77
    124a:	9f 4f       	sbci	r25, 0xFF	; 255
    124c:	fc 01       	movw	r30, r24
    124e:	80 81       	ld	r24, Z
    1250:	91 81       	ldd	r25, Z+1	; 0x01
    1252:	01 97       	sbiw	r24, 0x01	; 1
    1254:	f1 f7       	brne	.-4      	; 0x1252 <__stack+0x953>
    1256:	9e 01       	movw	r18, r28
    1258:	2d 54       	subi	r18, 0x4D	; 77
    125a:	3f 4f       	sbci	r19, 0xFF	; 255
    125c:	f9 01       	movw	r30, r18
    125e:	91 83       	std	Z+1, r25	; 0x01
    1260:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1262:	ce 01       	movw	r24, r28
    1264:	8f 54       	subi	r24, 0x4F	; 79
    1266:	9f 4f       	sbci	r25, 0xFF	; 255
    1268:	9e 01       	movw	r18, r28
    126a:	2f 54       	subi	r18, 0x4F	; 79
    126c:	3f 4f       	sbci	r19, 0xFF	; 255
    126e:	f9 01       	movw	r30, r18
    1270:	20 81       	ld	r18, Z
    1272:	31 81       	ldd	r19, Z+1	; 0x01
    1274:	21 50       	subi	r18, 0x01	; 1
    1276:	31 09       	sbc	r19, r1
    1278:	fc 01       	movw	r30, r24
    127a:	31 83       	std	Z+1, r19	; 0x01
    127c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    127e:	ce 01       	movw	r24, r28
    1280:	8f 54       	subi	r24, 0x4F	; 79
    1282:	9f 4f       	sbci	r25, 0xFF	; 255
    1284:	fc 01       	movw	r30, r24
    1286:	80 81       	ld	r24, Z
    1288:	91 81       	ldd	r25, Z+1	; 0x01
    128a:	00 97       	sbiw	r24, 0x00	; 0
    128c:	a1 f6       	brne	.-88     	; 0x1236 <__stack+0x937>
    128e:	2c c0       	rjmp	.+88     	; 0x12e8 <__stack+0x9e9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1290:	8e 01       	movw	r16, r28
    1292:	0f 54       	subi	r16, 0x4F	; 79
    1294:	1f 4f       	sbci	r17, 0xFF	; 255
    1296:	ce 01       	movw	r24, r28
    1298:	83 55       	subi	r24, 0x53	; 83
    129a:	9f 4f       	sbci	r25, 0xFF	; 255
    129c:	fc 01       	movw	r30, r24
    129e:	60 81       	ld	r22, Z
    12a0:	71 81       	ldd	r23, Z+1	; 0x01
    12a2:	82 81       	ldd	r24, Z+2	; 0x02
    12a4:	93 81       	ldd	r25, Z+3	; 0x03
    12a6:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    12aa:	dc 01       	movw	r26, r24
    12ac:	cb 01       	movw	r24, r22
    12ae:	f8 01       	movw	r30, r16
    12b0:	91 83       	std	Z+1, r25	; 0x01
    12b2:	80 83       	st	Z, r24
    12b4:	ce 01       	movw	r24, r28
    12b6:	8b 54       	subi	r24, 0x4B	; 75
    12b8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ba:	9e 01       	movw	r18, r28
    12bc:	2f 54       	subi	r18, 0x4F	; 79
    12be:	3f 4f       	sbci	r19, 0xFF	; 255
    12c0:	f9 01       	movw	r30, r18
    12c2:	20 81       	ld	r18, Z
    12c4:	31 81       	ldd	r19, Z+1	; 0x01
    12c6:	fc 01       	movw	r30, r24
    12c8:	31 83       	std	Z+1, r19	; 0x01
    12ca:	20 83       	st	Z, r18
    12cc:	ce 01       	movw	r24, r28
    12ce:	8b 54       	subi	r24, 0x4B	; 75
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	fc 01       	movw	r30, r24
    12d4:	80 81       	ld	r24, Z
    12d6:	91 81       	ldd	r25, Z+1	; 0x01
    12d8:	01 97       	sbiw	r24, 0x01	; 1
    12da:	f1 f7       	brne	.-4      	; 0x12d8 <__stack+0x9d9>
    12dc:	9e 01       	movw	r18, r28
    12de:	2b 54       	subi	r18, 0x4B	; 75
    12e0:	3f 4f       	sbci	r19, 0xFF	; 255
    12e2:	f9 01       	movw	r30, r18
    12e4:	91 83       	std	Z+1, r25	; 0x01
    12e6:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);     // -
    12e8:	85 e2       	ldi	r24, 0x25	; 37
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	25 e2       	ldi	r18, 0x25	; 37
    12ee:	30 e0       	ldi	r19, 0x00	; 0
    12f0:	f9 01       	movw	r30, r18
    12f2:	30 81       	ld	r19, Z
    12f4:	20 e2       	ldi	r18, 0x20	; 32
    12f6:	23 27       	eor	r18, r19
    12f8:	fc 01       	movw	r30, r24
    12fa:	20 83       	st	Z, r18
    12fc:	9e 01       	movw	r18, r28
    12fe:	29 54       	subi	r18, 0x49	; 73
    1300:	3f 4f       	sbci	r19, 0xFF	; 255
    1302:	80 e0       	ldi	r24, 0x00	; 0
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	a6 e9       	ldi	r26, 0x96	; 150
    1308:	b3 e4       	ldi	r27, 0x43	; 67
    130a:	f9 01       	movw	r30, r18
    130c:	80 83       	st	Z, r24
    130e:	91 83       	std	Z+1, r25	; 0x01
    1310:	a2 83       	std	Z+2, r26	; 0x02
    1312:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1314:	8e 01       	movw	r16, r28
    1316:	05 54       	subi	r16, 0x45	; 69
    1318:	1f 4f       	sbci	r17, 0xFF	; 255
    131a:	ce 01       	movw	r24, r28
    131c:	89 54       	subi	r24, 0x49	; 73
    131e:	9f 4f       	sbci	r25, 0xFF	; 255
    1320:	20 e0       	ldi	r18, 0x00	; 0
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	4a e7       	ldi	r20, 0x7A	; 122
    1326:	55 e4       	ldi	r21, 0x45	; 69
    1328:	fc 01       	movw	r30, r24
    132a:	60 81       	ld	r22, Z
    132c:	71 81       	ldd	r23, Z+1	; 0x01
    132e:	82 81       	ldd	r24, Z+2	; 0x02
    1330:	93 81       	ldd	r25, Z+3	; 0x03
    1332:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    1336:	dc 01       	movw	r26, r24
    1338:	cb 01       	movw	r24, r22
    133a:	f8 01       	movw	r30, r16
    133c:	80 83       	st	Z, r24
    133e:	91 83       	std	Z+1, r25	; 0x01
    1340:	a2 83       	std	Z+2, r26	; 0x02
    1342:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1344:	ce 01       	movw	r24, r28
    1346:	85 54       	subi	r24, 0x45	; 69
    1348:	9f 4f       	sbci	r25, 0xFF	; 255
    134a:	20 e0       	ldi	r18, 0x00	; 0
    134c:	30 e0       	ldi	r19, 0x00	; 0
    134e:	40 e8       	ldi	r20, 0x80	; 128
    1350:	5f e3       	ldi	r21, 0x3F	; 63
    1352:	fc 01       	movw	r30, r24
    1354:	60 81       	ld	r22, Z
    1356:	71 81       	ldd	r23, Z+1	; 0x01
    1358:	82 81       	ldd	r24, Z+2	; 0x02
    135a:	93 81       	ldd	r25, Z+3	; 0x03
    135c:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    1360:	88 23       	and	r24, r24
    1362:	4c f4       	brge	.+18     	; 0x1376 <__stack+0xa77>
		__ticks = 1;
    1364:	ce 01       	movw	r24, r28
    1366:	81 54       	subi	r24, 0x41	; 65
    1368:	9f 4f       	sbci	r25, 0xFF	; 255
    136a:	21 e0       	ldi	r18, 0x01	; 1
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	fc 01       	movw	r30, r24
    1370:	31 83       	std	Z+1, r19	; 0x01
    1372:	20 83       	st	Z, r18
    1374:	6d c0       	rjmp	.+218    	; 0x1450 <__stack+0xb51>
	else if (__tmp > 65535)
    1376:	ce 01       	movw	r24, r28
    1378:	85 54       	subi	r24, 0x45	; 69
    137a:	9f 4f       	sbci	r25, 0xFF	; 255
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	3f ef       	ldi	r19, 0xFF	; 255
    1380:	4f e7       	ldi	r20, 0x7F	; 127
    1382:	57 e4       	ldi	r21, 0x47	; 71
    1384:	fc 01       	movw	r30, r24
    1386:	60 81       	ld	r22, Z
    1388:	71 81       	ldd	r23, Z+1	; 0x01
    138a:	82 81       	ldd	r24, Z+2	; 0x02
    138c:	93 81       	ldd	r25, Z+3	; 0x03
    138e:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    1392:	18 16       	cp	r1, r24
    1394:	0c f0       	brlt	.+2      	; 0x1398 <__stack+0xa99>
    1396:	4a c0       	rjmp	.+148    	; 0x142c <__stack+0xb2d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1398:	ce 01       	movw	r24, r28
    139a:	89 54       	subi	r24, 0x49	; 73
    139c:	9f 4f       	sbci	r25, 0xFF	; 255
    139e:	20 e0       	ldi	r18, 0x00	; 0
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	40 e2       	ldi	r20, 0x20	; 32
    13a4:	51 e4       	ldi	r21, 0x41	; 65
    13a6:	fc 01       	movw	r30, r24
    13a8:	60 81       	ld	r22, Z
    13aa:	71 81       	ldd	r23, Z+1	; 0x01
    13ac:	82 81       	ldd	r24, Z+2	; 0x02
    13ae:	93 81       	ldd	r25, Z+3	; 0x03
    13b0:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    13b4:	dc 01       	movw	r26, r24
    13b6:	cb 01       	movw	r24, r22
    13b8:	8e 01       	movw	r16, r28
    13ba:	01 54       	subi	r16, 0x41	; 65
    13bc:	1f 4f       	sbci	r17, 0xFF	; 255
    13be:	bc 01       	movw	r22, r24
    13c0:	cd 01       	movw	r24, r26
    13c2:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    13c6:	dc 01       	movw	r26, r24
    13c8:	cb 01       	movw	r24, r22
    13ca:	f8 01       	movw	r30, r16
    13cc:	91 83       	std	Z+1, r25	; 0x01
    13ce:	80 83       	st	Z, r24
    13d0:	24 c0       	rjmp	.+72     	; 0x141a <__stack+0xb1b>
    13d2:	ce 01       	movw	r24, r28
    13d4:	8f 53       	subi	r24, 0x3F	; 63
    13d6:	9f 4f       	sbci	r25, 0xFF	; 255
    13d8:	20 e9       	ldi	r18, 0x90	; 144
    13da:	31 e0       	ldi	r19, 0x01	; 1
    13dc:	fc 01       	movw	r30, r24
    13de:	31 83       	std	Z+1, r19	; 0x01
    13e0:	20 83       	st	Z, r18
    13e2:	ce 01       	movw	r24, r28
    13e4:	8f 53       	subi	r24, 0x3F	; 63
    13e6:	9f 4f       	sbci	r25, 0xFF	; 255
    13e8:	fc 01       	movw	r30, r24
    13ea:	80 81       	ld	r24, Z
    13ec:	91 81       	ldd	r25, Z+1	; 0x01
    13ee:	01 97       	sbiw	r24, 0x01	; 1
    13f0:	f1 f7       	brne	.-4      	; 0x13ee <__stack+0xaef>
    13f2:	9e 01       	movw	r18, r28
    13f4:	2f 53       	subi	r18, 0x3F	; 63
    13f6:	3f 4f       	sbci	r19, 0xFF	; 255
    13f8:	f9 01       	movw	r30, r18
    13fa:	91 83       	std	Z+1, r25	; 0x01
    13fc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13fe:	ce 01       	movw	r24, r28
    1400:	81 54       	subi	r24, 0x41	; 65
    1402:	9f 4f       	sbci	r25, 0xFF	; 255
    1404:	9e 01       	movw	r18, r28
    1406:	21 54       	subi	r18, 0x41	; 65
    1408:	3f 4f       	sbci	r19, 0xFF	; 255
    140a:	f9 01       	movw	r30, r18
    140c:	20 81       	ld	r18, Z
    140e:	31 81       	ldd	r19, Z+1	; 0x01
    1410:	21 50       	subi	r18, 0x01	; 1
    1412:	31 09       	sbc	r19, r1
    1414:	fc 01       	movw	r30, r24
    1416:	31 83       	std	Z+1, r19	; 0x01
    1418:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    141a:	ce 01       	movw	r24, r28
    141c:	81 54       	subi	r24, 0x41	; 65
    141e:	9f 4f       	sbci	r25, 0xFF	; 255
    1420:	fc 01       	movw	r30, r24
    1422:	80 81       	ld	r24, Z
    1424:	91 81       	ldd	r25, Z+1	; 0x01
    1426:	00 97       	sbiw	r24, 0x00	; 0
    1428:	a1 f6       	brne	.-88     	; 0x13d2 <__stack+0xad3>
    142a:	2c c0       	rjmp	.+88     	; 0x1484 <__stack+0xb85>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    142c:	8e 01       	movw	r16, r28
    142e:	01 54       	subi	r16, 0x41	; 65
    1430:	1f 4f       	sbci	r17, 0xFF	; 255
    1432:	ce 01       	movw	r24, r28
    1434:	85 54       	subi	r24, 0x45	; 69
    1436:	9f 4f       	sbci	r25, 0xFF	; 255
    1438:	fc 01       	movw	r30, r24
    143a:	60 81       	ld	r22, Z
    143c:	71 81       	ldd	r23, Z+1	; 0x01
    143e:	82 81       	ldd	r24, Z+2	; 0x02
    1440:	93 81       	ldd	r25, Z+3	; 0x03
    1442:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    1446:	dc 01       	movw	r26, r24
    1448:	cb 01       	movw	r24, r22
    144a:	f8 01       	movw	r30, r16
    144c:	91 83       	std	Z+1, r25	; 0x01
    144e:	80 83       	st	Z, r24
    1450:	ce 01       	movw	r24, r28
    1452:	8d 53       	subi	r24, 0x3D	; 61
    1454:	9f 4f       	sbci	r25, 0xFF	; 255
    1456:	9e 01       	movw	r18, r28
    1458:	21 54       	subi	r18, 0x41	; 65
    145a:	3f 4f       	sbci	r19, 0xFF	; 255
    145c:	f9 01       	movw	r30, r18
    145e:	20 81       	ld	r18, Z
    1460:	31 81       	ldd	r19, Z+1	; 0x01
    1462:	fc 01       	movw	r30, r24
    1464:	31 83       	std	Z+1, r19	; 0x01
    1466:	20 83       	st	Z, r18
    1468:	ce 01       	movw	r24, r28
    146a:	8d 53       	subi	r24, 0x3D	; 61
    146c:	9f 4f       	sbci	r25, 0xFF	; 255
    146e:	fc 01       	movw	r30, r24
    1470:	80 81       	ld	r24, Z
    1472:	91 81       	ldd	r25, Z+1	; 0x01
    1474:	01 97       	sbiw	r24, 0x01	; 1
    1476:	f1 f7       	brne	.-4      	; 0x1474 <__stack+0xb75>
    1478:	9e 01       	movw	r18, r28
    147a:	2d 53       	subi	r18, 0x3D	; 61
    147c:	3f 4f       	sbci	r19, 0xFF	; 255
    147e:	f9 01       	movw	r30, r18
    1480:	91 83       	std	Z+1, r25	; 0x01
    1482:	80 83       	st	Z, r24
        _delay_ms(LONG_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
    1484:	85 e2       	ldi	r24, 0x25	; 37
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	25 e2       	ldi	r18, 0x25	; 37
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	f9 01       	movw	r30, r18
    148e:	30 81       	ld	r19, Z
    1490:	20 e2       	ldi	r18, 0x20	; 32
    1492:	23 27       	eor	r18, r19
    1494:	fc 01       	movw	r30, r24
    1496:	20 83       	st	Z, r18
    1498:	9e 01       	movw	r18, r28
    149a:	2b 53       	subi	r18, 0x3B	; 59
    149c:	3f 4f       	sbci	r19, 0xFF	; 255
    149e:	80 e0       	ldi	r24, 0x00	; 0
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	a8 ec       	ldi	r26, 0xC8	; 200
    14a4:	b2 e4       	ldi	r27, 0x42	; 66
    14a6:	f9 01       	movw	r30, r18
    14a8:	80 83       	st	Z, r24
    14aa:	91 83       	std	Z+1, r25	; 0x01
    14ac:	a2 83       	std	Z+2, r26	; 0x02
    14ae:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    14b0:	8e 01       	movw	r16, r28
    14b2:	07 53       	subi	r16, 0x37	; 55
    14b4:	1f 4f       	sbci	r17, 0xFF	; 255
    14b6:	ce 01       	movw	r24, r28
    14b8:	8b 53       	subi	r24, 0x3B	; 59
    14ba:	9f 4f       	sbci	r25, 0xFF	; 255
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	4a e7       	ldi	r20, 0x7A	; 122
    14c2:	55 e4       	ldi	r21, 0x45	; 69
    14c4:	fc 01       	movw	r30, r24
    14c6:	60 81       	ld	r22, Z
    14c8:	71 81       	ldd	r23, Z+1	; 0x01
    14ca:	82 81       	ldd	r24, Z+2	; 0x02
    14cc:	93 81       	ldd	r25, Z+3	; 0x03
    14ce:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    14d2:	dc 01       	movw	r26, r24
    14d4:	cb 01       	movw	r24, r22
    14d6:	f8 01       	movw	r30, r16
    14d8:	80 83       	st	Z, r24
    14da:	91 83       	std	Z+1, r25	; 0x01
    14dc:	a2 83       	std	Z+2, r26	; 0x02
    14de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14e0:	ce 01       	movw	r24, r28
    14e2:	87 53       	subi	r24, 0x37	; 55
    14e4:	9f 4f       	sbci	r25, 0xFF	; 255
    14e6:	20 e0       	ldi	r18, 0x00	; 0
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	40 e8       	ldi	r20, 0x80	; 128
    14ec:	5f e3       	ldi	r21, 0x3F	; 63
    14ee:	fc 01       	movw	r30, r24
    14f0:	60 81       	ld	r22, Z
    14f2:	71 81       	ldd	r23, Z+1	; 0x01
    14f4:	82 81       	ldd	r24, Z+2	; 0x02
    14f6:	93 81       	ldd	r25, Z+3	; 0x03
    14f8:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    14fc:	88 23       	and	r24, r24
    14fe:	4c f4       	brge	.+18     	; 0x1512 <__stack+0xc13>
		__ticks = 1;
    1500:	ce 01       	movw	r24, r28
    1502:	83 53       	subi	r24, 0x33	; 51
    1504:	9f 4f       	sbci	r25, 0xFF	; 255
    1506:	21 e0       	ldi	r18, 0x01	; 1
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	fc 01       	movw	r30, r24
    150c:	31 83       	std	Z+1, r19	; 0x01
    150e:	20 83       	st	Z, r18
    1510:	6d c0       	rjmp	.+218    	; 0x15ec <__stack+0xced>
	else if (__tmp > 65535)
    1512:	ce 01       	movw	r24, r28
    1514:	87 53       	subi	r24, 0x37	; 55
    1516:	9f 4f       	sbci	r25, 0xFF	; 255
    1518:	20 e0       	ldi	r18, 0x00	; 0
    151a:	3f ef       	ldi	r19, 0xFF	; 255
    151c:	4f e7       	ldi	r20, 0x7F	; 127
    151e:	57 e4       	ldi	r21, 0x47	; 71
    1520:	fc 01       	movw	r30, r24
    1522:	60 81       	ld	r22, Z
    1524:	71 81       	ldd	r23, Z+1	; 0x01
    1526:	82 81       	ldd	r24, Z+2	; 0x02
    1528:	93 81       	ldd	r25, Z+3	; 0x03
    152a:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    152e:	18 16       	cp	r1, r24
    1530:	0c f0       	brlt	.+2      	; 0x1534 <__stack+0xc35>
    1532:	4a c0       	rjmp	.+148    	; 0x15c8 <__stack+0xcc9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1534:	ce 01       	movw	r24, r28
    1536:	8b 53       	subi	r24, 0x3B	; 59
    1538:	9f 4f       	sbci	r25, 0xFF	; 255
    153a:	20 e0       	ldi	r18, 0x00	; 0
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	40 e2       	ldi	r20, 0x20	; 32
    1540:	51 e4       	ldi	r21, 0x41	; 65
    1542:	fc 01       	movw	r30, r24
    1544:	60 81       	ld	r22, Z
    1546:	71 81       	ldd	r23, Z+1	; 0x01
    1548:	82 81       	ldd	r24, Z+2	; 0x02
    154a:	93 81       	ldd	r25, Z+3	; 0x03
    154c:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    1550:	dc 01       	movw	r26, r24
    1552:	cb 01       	movw	r24, r22
    1554:	8e 01       	movw	r16, r28
    1556:	03 53       	subi	r16, 0x33	; 51
    1558:	1f 4f       	sbci	r17, 0xFF	; 255
    155a:	bc 01       	movw	r22, r24
    155c:	cd 01       	movw	r24, r26
    155e:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    1562:	dc 01       	movw	r26, r24
    1564:	cb 01       	movw	r24, r22
    1566:	f8 01       	movw	r30, r16
    1568:	91 83       	std	Z+1, r25	; 0x01
    156a:	80 83       	st	Z, r24
    156c:	24 c0       	rjmp	.+72     	; 0x15b6 <__stack+0xcb7>
    156e:	ce 01       	movw	r24, r28
    1570:	81 53       	subi	r24, 0x31	; 49
    1572:	9f 4f       	sbci	r25, 0xFF	; 255
    1574:	20 e9       	ldi	r18, 0x90	; 144
    1576:	31 e0       	ldi	r19, 0x01	; 1
    1578:	fc 01       	movw	r30, r24
    157a:	31 83       	std	Z+1, r19	; 0x01
    157c:	20 83       	st	Z, r18
    157e:	ce 01       	movw	r24, r28
    1580:	81 53       	subi	r24, 0x31	; 49
    1582:	9f 4f       	sbci	r25, 0xFF	; 255
    1584:	fc 01       	movw	r30, r24
    1586:	80 81       	ld	r24, Z
    1588:	91 81       	ldd	r25, Z+1	; 0x01
    158a:	01 97       	sbiw	r24, 0x01	; 1
    158c:	f1 f7       	brne	.-4      	; 0x158a <__stack+0xc8b>
    158e:	9e 01       	movw	r18, r28
    1590:	21 53       	subi	r18, 0x31	; 49
    1592:	3f 4f       	sbci	r19, 0xFF	; 255
    1594:	f9 01       	movw	r30, r18
    1596:	91 83       	std	Z+1, r25	; 0x01
    1598:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    159a:	ce 01       	movw	r24, r28
    159c:	83 53       	subi	r24, 0x33	; 51
    159e:	9f 4f       	sbci	r25, 0xFF	; 255
    15a0:	9e 01       	movw	r18, r28
    15a2:	23 53       	subi	r18, 0x33	; 51
    15a4:	3f 4f       	sbci	r19, 0xFF	; 255
    15a6:	f9 01       	movw	r30, r18
    15a8:	20 81       	ld	r18, Z
    15aa:	31 81       	ldd	r19, Z+1	; 0x01
    15ac:	21 50       	subi	r18, 0x01	; 1
    15ae:	31 09       	sbc	r19, r1
    15b0:	fc 01       	movw	r30, r24
    15b2:	31 83       	std	Z+1, r19	; 0x01
    15b4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15b6:	ce 01       	movw	r24, r28
    15b8:	83 53       	subi	r24, 0x33	; 51
    15ba:	9f 4f       	sbci	r25, 0xFF	; 255
    15bc:	fc 01       	movw	r30, r24
    15be:	80 81       	ld	r24, Z
    15c0:	91 81       	ldd	r25, Z+1	; 0x01
    15c2:	00 97       	sbiw	r24, 0x00	; 0
    15c4:	a1 f6       	brne	.-88     	; 0x156e <__stack+0xc6f>
    15c6:	2c c0       	rjmp	.+88     	; 0x1620 <__stack+0xd21>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15c8:	8e 01       	movw	r16, r28
    15ca:	03 53       	subi	r16, 0x33	; 51
    15cc:	1f 4f       	sbci	r17, 0xFF	; 255
    15ce:	ce 01       	movw	r24, r28
    15d0:	87 53       	subi	r24, 0x37	; 55
    15d2:	9f 4f       	sbci	r25, 0xFF	; 255
    15d4:	fc 01       	movw	r30, r24
    15d6:	60 81       	ld	r22, Z
    15d8:	71 81       	ldd	r23, Z+1	; 0x01
    15da:	82 81       	ldd	r24, Z+2	; 0x02
    15dc:	93 81       	ldd	r25, Z+3	; 0x03
    15de:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	f8 01       	movw	r30, r16
    15e8:	91 83       	std	Z+1, r25	; 0x01
    15ea:	80 83       	st	Z, r24
    15ec:	ce 01       	movw	r24, r28
    15ee:	8f 52       	subi	r24, 0x2F	; 47
    15f0:	9f 4f       	sbci	r25, 0xFF	; 255
    15f2:	9e 01       	movw	r18, r28
    15f4:	23 53       	subi	r18, 0x33	; 51
    15f6:	3f 4f       	sbci	r19, 0xFF	; 255
    15f8:	f9 01       	movw	r30, r18
    15fa:	20 81       	ld	r18, Z
    15fc:	31 81       	ldd	r19, Z+1	; 0x01
    15fe:	fc 01       	movw	r30, r24
    1600:	31 83       	std	Z+1, r19	; 0x01
    1602:	20 83       	st	Z, r18
    1604:	ce 01       	movw	r24, r28
    1606:	8f 52       	subi	r24, 0x2F	; 47
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	fc 01       	movw	r30, r24
    160c:	80 81       	ld	r24, Z
    160e:	91 81       	ldd	r25, Z+1	; 0x01
    1610:	01 97       	sbiw	r24, 0x01	; 1
    1612:	f1 f7       	brne	.-4      	; 0x1610 <__stack+0xd11>
    1614:	9e 01       	movw	r18, r28
    1616:	2f 52       	subi	r18, 0x2F	; 47
    1618:	3f 4f       	sbci	r19, 0xFF	; 255
    161a:	f9 01       	movw	r30, r18
    161c:	91 83       	std	Z+1, r25	; 0x01
    161e:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);     // -
    1620:	85 e2       	ldi	r24, 0x25	; 37
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	25 e2       	ldi	r18, 0x25	; 37
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	f9 01       	movw	r30, r18
    162a:	30 81       	ld	r19, Z
    162c:	20 e2       	ldi	r18, 0x20	; 32
    162e:	23 27       	eor	r18, r19
    1630:	fc 01       	movw	r30, r24
    1632:	20 83       	st	Z, r18
    1634:	9e 01       	movw	r18, r28
    1636:	2d 52       	subi	r18, 0x2D	; 45
    1638:	3f 4f       	sbci	r19, 0xFF	; 255
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	a6 e9       	ldi	r26, 0x96	; 150
    1640:	b3 e4       	ldi	r27, 0x43	; 67
    1642:	f9 01       	movw	r30, r18
    1644:	80 83       	st	Z, r24
    1646:	91 83       	std	Z+1, r25	; 0x01
    1648:	a2 83       	std	Z+2, r26	; 0x02
    164a:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    164c:	8e 01       	movw	r16, r28
    164e:	09 52       	subi	r16, 0x29	; 41
    1650:	1f 4f       	sbci	r17, 0xFF	; 255
    1652:	ce 01       	movw	r24, r28
    1654:	8d 52       	subi	r24, 0x2D	; 45
    1656:	9f 4f       	sbci	r25, 0xFF	; 255
    1658:	20 e0       	ldi	r18, 0x00	; 0
    165a:	30 e0       	ldi	r19, 0x00	; 0
    165c:	4a e7       	ldi	r20, 0x7A	; 122
    165e:	55 e4       	ldi	r21, 0x45	; 69
    1660:	fc 01       	movw	r30, r24
    1662:	60 81       	ld	r22, Z
    1664:	71 81       	ldd	r23, Z+1	; 0x01
    1666:	82 81       	ldd	r24, Z+2	; 0x02
    1668:	93 81       	ldd	r25, Z+3	; 0x03
    166a:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    166e:	dc 01       	movw	r26, r24
    1670:	cb 01       	movw	r24, r22
    1672:	f8 01       	movw	r30, r16
    1674:	80 83       	st	Z, r24
    1676:	91 83       	std	Z+1, r25	; 0x01
    1678:	a2 83       	std	Z+2, r26	; 0x02
    167a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    167c:	ce 01       	movw	r24, r28
    167e:	89 52       	subi	r24, 0x29	; 41
    1680:	9f 4f       	sbci	r25, 0xFF	; 255
    1682:	20 e0       	ldi	r18, 0x00	; 0
    1684:	30 e0       	ldi	r19, 0x00	; 0
    1686:	40 e8       	ldi	r20, 0x80	; 128
    1688:	5f e3       	ldi	r21, 0x3F	; 63
    168a:	fc 01       	movw	r30, r24
    168c:	60 81       	ld	r22, Z
    168e:	71 81       	ldd	r23, Z+1	; 0x01
    1690:	82 81       	ldd	r24, Z+2	; 0x02
    1692:	93 81       	ldd	r25, Z+3	; 0x03
    1694:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    1698:	88 23       	and	r24, r24
    169a:	4c f4       	brge	.+18     	; 0x16ae <__stack+0xdaf>
		__ticks = 1;
    169c:	ce 01       	movw	r24, r28
    169e:	85 52       	subi	r24, 0x25	; 37
    16a0:	9f 4f       	sbci	r25, 0xFF	; 255
    16a2:	21 e0       	ldi	r18, 0x01	; 1
    16a4:	30 e0       	ldi	r19, 0x00	; 0
    16a6:	fc 01       	movw	r30, r24
    16a8:	31 83       	std	Z+1, r19	; 0x01
    16aa:	20 83       	st	Z, r18
    16ac:	6d c0       	rjmp	.+218    	; 0x1788 <__stack+0xe89>
	else if (__tmp > 65535)
    16ae:	ce 01       	movw	r24, r28
    16b0:	89 52       	subi	r24, 0x29	; 41
    16b2:	9f 4f       	sbci	r25, 0xFF	; 255
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	3f ef       	ldi	r19, 0xFF	; 255
    16b8:	4f e7       	ldi	r20, 0x7F	; 127
    16ba:	57 e4       	ldi	r21, 0x47	; 71
    16bc:	fc 01       	movw	r30, r24
    16be:	60 81       	ld	r22, Z
    16c0:	71 81       	ldd	r23, Z+1	; 0x01
    16c2:	82 81       	ldd	r24, Z+2	; 0x02
    16c4:	93 81       	ldd	r25, Z+3	; 0x03
    16c6:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    16ca:	18 16       	cp	r1, r24
    16cc:	0c f0       	brlt	.+2      	; 0x16d0 <__stack+0xdd1>
    16ce:	4a c0       	rjmp	.+148    	; 0x1764 <__stack+0xe65>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16d0:	ce 01       	movw	r24, r28
    16d2:	8d 52       	subi	r24, 0x2D	; 45
    16d4:	9f 4f       	sbci	r25, 0xFF	; 255
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	40 e2       	ldi	r20, 0x20	; 32
    16dc:	51 e4       	ldi	r21, 0x41	; 65
    16de:	fc 01       	movw	r30, r24
    16e0:	60 81       	ld	r22, Z
    16e2:	71 81       	ldd	r23, Z+1	; 0x01
    16e4:	82 81       	ldd	r24, Z+2	; 0x02
    16e6:	93 81       	ldd	r25, Z+3	; 0x03
    16e8:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    16ec:	dc 01       	movw	r26, r24
    16ee:	cb 01       	movw	r24, r22
    16f0:	8e 01       	movw	r16, r28
    16f2:	05 52       	subi	r16, 0x25	; 37
    16f4:	1f 4f       	sbci	r17, 0xFF	; 255
    16f6:	bc 01       	movw	r22, r24
    16f8:	cd 01       	movw	r24, r26
    16fa:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    16fe:	dc 01       	movw	r26, r24
    1700:	cb 01       	movw	r24, r22
    1702:	f8 01       	movw	r30, r16
    1704:	91 83       	std	Z+1, r25	; 0x01
    1706:	80 83       	st	Z, r24
    1708:	24 c0       	rjmp	.+72     	; 0x1752 <__stack+0xe53>
    170a:	ce 01       	movw	r24, r28
    170c:	83 52       	subi	r24, 0x23	; 35
    170e:	9f 4f       	sbci	r25, 0xFF	; 255
    1710:	20 e9       	ldi	r18, 0x90	; 144
    1712:	31 e0       	ldi	r19, 0x01	; 1
    1714:	fc 01       	movw	r30, r24
    1716:	31 83       	std	Z+1, r19	; 0x01
    1718:	20 83       	st	Z, r18
    171a:	ce 01       	movw	r24, r28
    171c:	83 52       	subi	r24, 0x23	; 35
    171e:	9f 4f       	sbci	r25, 0xFF	; 255
    1720:	fc 01       	movw	r30, r24
    1722:	80 81       	ld	r24, Z
    1724:	91 81       	ldd	r25, Z+1	; 0x01
    1726:	01 97       	sbiw	r24, 0x01	; 1
    1728:	f1 f7       	brne	.-4      	; 0x1726 <__stack+0xe27>
    172a:	9e 01       	movw	r18, r28
    172c:	23 52       	subi	r18, 0x23	; 35
    172e:	3f 4f       	sbci	r19, 0xFF	; 255
    1730:	f9 01       	movw	r30, r18
    1732:	91 83       	std	Z+1, r25	; 0x01
    1734:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1736:	ce 01       	movw	r24, r28
    1738:	85 52       	subi	r24, 0x25	; 37
    173a:	9f 4f       	sbci	r25, 0xFF	; 255
    173c:	9e 01       	movw	r18, r28
    173e:	25 52       	subi	r18, 0x25	; 37
    1740:	3f 4f       	sbci	r19, 0xFF	; 255
    1742:	f9 01       	movw	r30, r18
    1744:	20 81       	ld	r18, Z
    1746:	31 81       	ldd	r19, Z+1	; 0x01
    1748:	21 50       	subi	r18, 0x01	; 1
    174a:	31 09       	sbc	r19, r1
    174c:	fc 01       	movw	r30, r24
    174e:	31 83       	std	Z+1, r19	; 0x01
    1750:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1752:	ce 01       	movw	r24, r28
    1754:	85 52       	subi	r24, 0x25	; 37
    1756:	9f 4f       	sbci	r25, 0xFF	; 255
    1758:	fc 01       	movw	r30, r24
    175a:	80 81       	ld	r24, Z
    175c:	91 81       	ldd	r25, Z+1	; 0x01
    175e:	00 97       	sbiw	r24, 0x00	; 0
    1760:	a1 f6       	brne	.-88     	; 0x170a <__stack+0xe0b>
    1762:	2c c0       	rjmp	.+88     	; 0x17bc <__stack+0xebd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1764:	8e 01       	movw	r16, r28
    1766:	05 52       	subi	r16, 0x25	; 37
    1768:	1f 4f       	sbci	r17, 0xFF	; 255
    176a:	ce 01       	movw	r24, r28
    176c:	89 52       	subi	r24, 0x29	; 41
    176e:	9f 4f       	sbci	r25, 0xFF	; 255
    1770:	fc 01       	movw	r30, r24
    1772:	60 81       	ld	r22, Z
    1774:	71 81       	ldd	r23, Z+1	; 0x01
    1776:	82 81       	ldd	r24, Z+2	; 0x02
    1778:	93 81       	ldd	r25, Z+3	; 0x03
    177a:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    177e:	dc 01       	movw	r26, r24
    1780:	cb 01       	movw	r24, r22
    1782:	f8 01       	movw	r30, r16
    1784:	91 83       	std	Z+1, r25	; 0x01
    1786:	80 83       	st	Z, r24
    1788:	ce 01       	movw	r24, r28
    178a:	81 52       	subi	r24, 0x21	; 33
    178c:	9f 4f       	sbci	r25, 0xFF	; 255
    178e:	9e 01       	movw	r18, r28
    1790:	25 52       	subi	r18, 0x25	; 37
    1792:	3f 4f       	sbci	r19, 0xFF	; 255
    1794:	f9 01       	movw	r30, r18
    1796:	20 81       	ld	r18, Z
    1798:	31 81       	ldd	r19, Z+1	; 0x01
    179a:	fc 01       	movw	r30, r24
    179c:	31 83       	std	Z+1, r19	; 0x01
    179e:	20 83       	st	Z, r18
    17a0:	ce 01       	movw	r24, r28
    17a2:	81 52       	subi	r24, 0x21	; 33
    17a4:	9f 4f       	sbci	r25, 0xFF	; 255
    17a6:	fc 01       	movw	r30, r24
    17a8:	80 81       	ld	r24, Z
    17aa:	91 81       	ldd	r25, Z+1	; 0x01
    17ac:	01 97       	sbiw	r24, 0x01	; 1
    17ae:	f1 f7       	brne	.-4      	; 0x17ac <__stack+0xead>
    17b0:	9e 01       	movw	r18, r28
    17b2:	21 52       	subi	r18, 0x21	; 33
    17b4:	3f 4f       	sbci	r19, 0xFF	; 255
    17b6:	f9 01       	movw	r30, r18
    17b8:	91 83       	std	Z+1, r25	; 0x01
    17ba:	80 83       	st	Z, r24
        _delay_ms(LONG_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
    17bc:	85 e2       	ldi	r24, 0x25	; 37
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	25 e2       	ldi	r18, 0x25	; 37
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	f9 01       	movw	r30, r18
    17c6:	30 81       	ld	r19, Z
    17c8:	20 e2       	ldi	r18, 0x20	; 32
    17ca:	23 27       	eor	r18, r19
    17cc:	fc 01       	movw	r30, r24
    17ce:	20 83       	st	Z, r18
    17d0:	9e 01       	movw	r18, r28
    17d2:	2f 51       	subi	r18, 0x1F	; 31
    17d4:	3f 4f       	sbci	r19, 0xFF	; 255
    17d6:	80 e0       	ldi	r24, 0x00	; 0
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	a8 ec       	ldi	r26, 0xC8	; 200
    17dc:	b2 e4       	ldi	r27, 0x42	; 66
    17de:	f9 01       	movw	r30, r18
    17e0:	80 83       	st	Z, r24
    17e2:	91 83       	std	Z+1, r25	; 0x01
    17e4:	a2 83       	std	Z+2, r26	; 0x02
    17e6:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    17e8:	8e 01       	movw	r16, r28
    17ea:	0b 51       	subi	r16, 0x1B	; 27
    17ec:	1f 4f       	sbci	r17, 0xFF	; 255
    17ee:	ce 01       	movw	r24, r28
    17f0:	8f 51       	subi	r24, 0x1F	; 31
    17f2:	9f 4f       	sbci	r25, 0xFF	; 255
    17f4:	20 e0       	ldi	r18, 0x00	; 0
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	4a e7       	ldi	r20, 0x7A	; 122
    17fa:	55 e4       	ldi	r21, 0x45	; 69
    17fc:	fc 01       	movw	r30, r24
    17fe:	60 81       	ld	r22, Z
    1800:	71 81       	ldd	r23, Z+1	; 0x01
    1802:	82 81       	ldd	r24, Z+2	; 0x02
    1804:	93 81       	ldd	r25, Z+3	; 0x03
    1806:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    180a:	dc 01       	movw	r26, r24
    180c:	cb 01       	movw	r24, r22
    180e:	f8 01       	movw	r30, r16
    1810:	80 83       	st	Z, r24
    1812:	91 83       	std	Z+1, r25	; 0x01
    1814:	a2 83       	std	Z+2, r26	; 0x02
    1816:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1818:	ce 01       	movw	r24, r28
    181a:	8b 51       	subi	r24, 0x1B	; 27
    181c:	9f 4f       	sbci	r25, 0xFF	; 255
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	40 e8       	ldi	r20, 0x80	; 128
    1824:	5f e3       	ldi	r21, 0x3F	; 63
    1826:	fc 01       	movw	r30, r24
    1828:	60 81       	ld	r22, Z
    182a:	71 81       	ldd	r23, Z+1	; 0x01
    182c:	82 81       	ldd	r24, Z+2	; 0x02
    182e:	93 81       	ldd	r25, Z+3	; 0x03
    1830:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    1834:	88 23       	and	r24, r24
    1836:	4c f4       	brge	.+18     	; 0x184a <__stack+0xf4b>
		__ticks = 1;
    1838:	ce 01       	movw	r24, r28
    183a:	87 51       	subi	r24, 0x17	; 23
    183c:	9f 4f       	sbci	r25, 0xFF	; 255
    183e:	21 e0       	ldi	r18, 0x01	; 1
    1840:	30 e0       	ldi	r19, 0x00	; 0
    1842:	fc 01       	movw	r30, r24
    1844:	31 83       	std	Z+1, r19	; 0x01
    1846:	20 83       	st	Z, r18
    1848:	6d c0       	rjmp	.+218    	; 0x1924 <__stack+0x1025>
	else if (__tmp > 65535)
    184a:	ce 01       	movw	r24, r28
    184c:	8b 51       	subi	r24, 0x1B	; 27
    184e:	9f 4f       	sbci	r25, 0xFF	; 255
    1850:	20 e0       	ldi	r18, 0x00	; 0
    1852:	3f ef       	ldi	r19, 0xFF	; 255
    1854:	4f e7       	ldi	r20, 0x7F	; 127
    1856:	57 e4       	ldi	r21, 0x47	; 71
    1858:	fc 01       	movw	r30, r24
    185a:	60 81       	ld	r22, Z
    185c:	71 81       	ldd	r23, Z+1	; 0x01
    185e:	82 81       	ldd	r24, Z+2	; 0x02
    1860:	93 81       	ldd	r25, Z+3	; 0x03
    1862:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    1866:	18 16       	cp	r1, r24
    1868:	0c f0       	brlt	.+2      	; 0x186c <__stack+0xf6d>
    186a:	4a c0       	rjmp	.+148    	; 0x1900 <__stack+0x1001>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    186c:	ce 01       	movw	r24, r28
    186e:	8f 51       	subi	r24, 0x1F	; 31
    1870:	9f 4f       	sbci	r25, 0xFF	; 255
    1872:	20 e0       	ldi	r18, 0x00	; 0
    1874:	30 e0       	ldi	r19, 0x00	; 0
    1876:	40 e2       	ldi	r20, 0x20	; 32
    1878:	51 e4       	ldi	r21, 0x41	; 65
    187a:	fc 01       	movw	r30, r24
    187c:	60 81       	ld	r22, Z
    187e:	71 81       	ldd	r23, Z+1	; 0x01
    1880:	82 81       	ldd	r24, Z+2	; 0x02
    1882:	93 81       	ldd	r25, Z+3	; 0x03
    1884:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    1888:	dc 01       	movw	r26, r24
    188a:	cb 01       	movw	r24, r22
    188c:	8e 01       	movw	r16, r28
    188e:	07 51       	subi	r16, 0x17	; 23
    1890:	1f 4f       	sbci	r17, 0xFF	; 255
    1892:	bc 01       	movw	r22, r24
    1894:	cd 01       	movw	r24, r26
    1896:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    189a:	dc 01       	movw	r26, r24
    189c:	cb 01       	movw	r24, r22
    189e:	f8 01       	movw	r30, r16
    18a0:	91 83       	std	Z+1, r25	; 0x01
    18a2:	80 83       	st	Z, r24
    18a4:	24 c0       	rjmp	.+72     	; 0x18ee <__stack+0xfef>
    18a6:	ce 01       	movw	r24, r28
    18a8:	85 51       	subi	r24, 0x15	; 21
    18aa:	9f 4f       	sbci	r25, 0xFF	; 255
    18ac:	20 e9       	ldi	r18, 0x90	; 144
    18ae:	31 e0       	ldi	r19, 0x01	; 1
    18b0:	fc 01       	movw	r30, r24
    18b2:	31 83       	std	Z+1, r19	; 0x01
    18b4:	20 83       	st	Z, r18
    18b6:	ce 01       	movw	r24, r28
    18b8:	85 51       	subi	r24, 0x15	; 21
    18ba:	9f 4f       	sbci	r25, 0xFF	; 255
    18bc:	fc 01       	movw	r30, r24
    18be:	80 81       	ld	r24, Z
    18c0:	91 81       	ldd	r25, Z+1	; 0x01
    18c2:	01 97       	sbiw	r24, 0x01	; 1
    18c4:	f1 f7       	brne	.-4      	; 0x18c2 <__stack+0xfc3>
    18c6:	9e 01       	movw	r18, r28
    18c8:	25 51       	subi	r18, 0x15	; 21
    18ca:	3f 4f       	sbci	r19, 0xFF	; 255
    18cc:	f9 01       	movw	r30, r18
    18ce:	91 83       	std	Z+1, r25	; 0x01
    18d0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18d2:	ce 01       	movw	r24, r28
    18d4:	87 51       	subi	r24, 0x17	; 23
    18d6:	9f 4f       	sbci	r25, 0xFF	; 255
    18d8:	9e 01       	movw	r18, r28
    18da:	27 51       	subi	r18, 0x17	; 23
    18dc:	3f 4f       	sbci	r19, 0xFF	; 255
    18de:	f9 01       	movw	r30, r18
    18e0:	20 81       	ld	r18, Z
    18e2:	31 81       	ldd	r19, Z+1	; 0x01
    18e4:	21 50       	subi	r18, 0x01	; 1
    18e6:	31 09       	sbc	r19, r1
    18e8:	fc 01       	movw	r30, r24
    18ea:	31 83       	std	Z+1, r19	; 0x01
    18ec:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18ee:	ce 01       	movw	r24, r28
    18f0:	87 51       	subi	r24, 0x17	; 23
    18f2:	9f 4f       	sbci	r25, 0xFF	; 255
    18f4:	fc 01       	movw	r30, r24
    18f6:	80 81       	ld	r24, Z
    18f8:	91 81       	ldd	r25, Z+1	; 0x01
    18fa:	00 97       	sbiw	r24, 0x00	; 0
    18fc:	a1 f6       	brne	.-88     	; 0x18a6 <__stack+0xfa7>
    18fe:	2c c0       	rjmp	.+88     	; 0x1958 <__stack+0x1059>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1900:	8e 01       	movw	r16, r28
    1902:	07 51       	subi	r16, 0x17	; 23
    1904:	1f 4f       	sbci	r17, 0xFF	; 255
    1906:	ce 01       	movw	r24, r28
    1908:	8b 51       	subi	r24, 0x1B	; 27
    190a:	9f 4f       	sbci	r25, 0xFF	; 255
    190c:	fc 01       	movw	r30, r24
    190e:	60 81       	ld	r22, Z
    1910:	71 81       	ldd	r23, Z+1	; 0x01
    1912:	82 81       	ldd	r24, Z+2	; 0x02
    1914:	93 81       	ldd	r25, Z+3	; 0x03
    1916:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	f8 01       	movw	r30, r16
    1920:	91 83       	std	Z+1, r25	; 0x01
    1922:	80 83       	st	Z, r24
    1924:	ce 01       	movw	r24, r28
    1926:	83 51       	subi	r24, 0x13	; 19
    1928:	9f 4f       	sbci	r25, 0xFF	; 255
    192a:	9e 01       	movw	r18, r28
    192c:	27 51       	subi	r18, 0x17	; 23
    192e:	3f 4f       	sbci	r19, 0xFF	; 255
    1930:	f9 01       	movw	r30, r18
    1932:	20 81       	ld	r18, Z
    1934:	31 81       	ldd	r19, Z+1	; 0x01
    1936:	fc 01       	movw	r30, r24
    1938:	31 83       	std	Z+1, r19	; 0x01
    193a:	20 83       	st	Z, r18
    193c:	ce 01       	movw	r24, r28
    193e:	83 51       	subi	r24, 0x13	; 19
    1940:	9f 4f       	sbci	r25, 0xFF	; 255
    1942:	fc 01       	movw	r30, r24
    1944:	80 81       	ld	r24, Z
    1946:	91 81       	ldd	r25, Z+1	; 0x01
    1948:	01 97       	sbiw	r24, 0x01	; 1
    194a:	f1 f7       	brne	.-4      	; 0x1948 <__stack+0x1049>
    194c:	9e 01       	movw	r18, r28
    194e:	23 51       	subi	r18, 0x13	; 19
    1950:	3f 4f       	sbci	r19, 0xFF	; 255
    1952:	f9 01       	movw	r30, r18
    1954:	91 83       	std	Z+1, r25	; 0x01
    1956:	80 83       	st	Z, r24
        _delay_ms(SHORT_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);     // -
    1958:	85 e2       	ldi	r24, 0x25	; 37
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	25 e2       	ldi	r18, 0x25	; 37
    195e:	30 e0       	ldi	r19, 0x00	; 0
    1960:	f9 01       	movw	r30, r18
    1962:	30 81       	ld	r19, Z
    1964:	20 e2       	ldi	r18, 0x20	; 32
    1966:	23 27       	eor	r18, r19
    1968:	fc 01       	movw	r30, r24
    196a:	20 83       	st	Z, r18
    196c:	9e 01       	movw	r18, r28
    196e:	21 51       	subi	r18, 0x11	; 17
    1970:	3f 4f       	sbci	r19, 0xFF	; 255
    1972:	80 e0       	ldi	r24, 0x00	; 0
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	a6 e9       	ldi	r26, 0x96	; 150
    1978:	b3 e4       	ldi	r27, 0x43	; 67
    197a:	f9 01       	movw	r30, r18
    197c:	80 83       	st	Z, r24
    197e:	91 83       	std	Z+1, r25	; 0x01
    1980:	a2 83       	std	Z+2, r26	; 0x02
    1982:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1984:	8e 01       	movw	r16, r28
    1986:	0d 50       	subi	r16, 0x0D	; 13
    1988:	1f 4f       	sbci	r17, 0xFF	; 255
    198a:	ce 01       	movw	r24, r28
    198c:	81 51       	subi	r24, 0x11	; 17
    198e:	9f 4f       	sbci	r25, 0xFF	; 255
    1990:	20 e0       	ldi	r18, 0x00	; 0
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	4a e7       	ldi	r20, 0x7A	; 122
    1996:	55 e4       	ldi	r21, 0x45	; 69
    1998:	fc 01       	movw	r30, r24
    199a:	60 81       	ld	r22, Z
    199c:	71 81       	ldd	r23, Z+1	; 0x01
    199e:	82 81       	ldd	r24, Z+2	; 0x02
    19a0:	93 81       	ldd	r25, Z+3	; 0x03
    19a2:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    19a6:	dc 01       	movw	r26, r24
    19a8:	cb 01       	movw	r24, r22
    19aa:	f8 01       	movw	r30, r16
    19ac:	80 83       	st	Z, r24
    19ae:	91 83       	std	Z+1, r25	; 0x01
    19b0:	a2 83       	std	Z+2, r26	; 0x02
    19b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19b4:	ce 01       	movw	r24, r28
    19b6:	8d 50       	subi	r24, 0x0D	; 13
    19b8:	9f 4f       	sbci	r25, 0xFF	; 255
    19ba:	20 e0       	ldi	r18, 0x00	; 0
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	40 e8       	ldi	r20, 0x80	; 128
    19c0:	5f e3       	ldi	r21, 0x3F	; 63
    19c2:	fc 01       	movw	r30, r24
    19c4:	60 81       	ld	r22, Z
    19c6:	71 81       	ldd	r23, Z+1	; 0x01
    19c8:	82 81       	ldd	r24, Z+2	; 0x02
    19ca:	93 81       	ldd	r25, Z+3	; 0x03
    19cc:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    19d0:	88 23       	and	r24, r24
    19d2:	4c f4       	brge	.+18     	; 0x19e6 <__stack+0x10e7>
		__ticks = 1;
    19d4:	ce 01       	movw	r24, r28
    19d6:	89 50       	subi	r24, 0x09	; 9
    19d8:	9f 4f       	sbci	r25, 0xFF	; 255
    19da:	21 e0       	ldi	r18, 0x01	; 1
    19dc:	30 e0       	ldi	r19, 0x00	; 0
    19de:	fc 01       	movw	r30, r24
    19e0:	31 83       	std	Z+1, r19	; 0x01
    19e2:	20 83       	st	Z, r18
    19e4:	6d c0       	rjmp	.+218    	; 0x1ac0 <__stack+0x11c1>
	else if (__tmp > 65535)
    19e6:	ce 01       	movw	r24, r28
    19e8:	8d 50       	subi	r24, 0x0D	; 13
    19ea:	9f 4f       	sbci	r25, 0xFF	; 255
    19ec:	20 e0       	ldi	r18, 0x00	; 0
    19ee:	3f ef       	ldi	r19, 0xFF	; 255
    19f0:	4f e7       	ldi	r20, 0x7F	; 127
    19f2:	57 e4       	ldi	r21, 0x47	; 71
    19f4:	fc 01       	movw	r30, r24
    19f6:	60 81       	ld	r22, Z
    19f8:	71 81       	ldd	r23, Z+1	; 0x01
    19fa:	82 81       	ldd	r24, Z+2	; 0x02
    19fc:	93 81       	ldd	r25, Z+3	; 0x03
    19fe:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    1a02:	18 16       	cp	r1, r24
    1a04:	0c f0       	brlt	.+2      	; 0x1a08 <__stack+0x1109>
    1a06:	4a c0       	rjmp	.+148    	; 0x1a9c <__stack+0x119d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a08:	ce 01       	movw	r24, r28
    1a0a:	81 51       	subi	r24, 0x11	; 17
    1a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a0e:	20 e0       	ldi	r18, 0x00	; 0
    1a10:	30 e0       	ldi	r19, 0x00	; 0
    1a12:	40 e2       	ldi	r20, 0x20	; 32
    1a14:	51 e4       	ldi	r21, 0x41	; 65
    1a16:	fc 01       	movw	r30, r24
    1a18:	60 81       	ld	r22, Z
    1a1a:	71 81       	ldd	r23, Z+1	; 0x01
    1a1c:	82 81       	ldd	r24, Z+2	; 0x02
    1a1e:	93 81       	ldd	r25, Z+3	; 0x03
    1a20:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    1a24:	dc 01       	movw	r26, r24
    1a26:	cb 01       	movw	r24, r22
    1a28:	8e 01       	movw	r16, r28
    1a2a:	09 50       	subi	r16, 0x09	; 9
    1a2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2e:	bc 01       	movw	r22, r24
    1a30:	cd 01       	movw	r24, r26
    1a32:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    1a36:	dc 01       	movw	r26, r24
    1a38:	cb 01       	movw	r24, r22
    1a3a:	f8 01       	movw	r30, r16
    1a3c:	91 83       	std	Z+1, r25	; 0x01
    1a3e:	80 83       	st	Z, r24
    1a40:	24 c0       	rjmp	.+72     	; 0x1a8a <__stack+0x118b>
    1a42:	ce 01       	movw	r24, r28
    1a44:	87 50       	subi	r24, 0x07	; 7
    1a46:	9f 4f       	sbci	r25, 0xFF	; 255
    1a48:	20 e9       	ldi	r18, 0x90	; 144
    1a4a:	31 e0       	ldi	r19, 0x01	; 1
    1a4c:	fc 01       	movw	r30, r24
    1a4e:	31 83       	std	Z+1, r19	; 0x01
    1a50:	20 83       	st	Z, r18
    1a52:	ce 01       	movw	r24, r28
    1a54:	87 50       	subi	r24, 0x07	; 7
    1a56:	9f 4f       	sbci	r25, 0xFF	; 255
    1a58:	fc 01       	movw	r30, r24
    1a5a:	80 81       	ld	r24, Z
    1a5c:	91 81       	ldd	r25, Z+1	; 0x01
    1a5e:	01 97       	sbiw	r24, 0x01	; 1
    1a60:	f1 f7       	brne	.-4      	; 0x1a5e <__stack+0x115f>
    1a62:	9e 01       	movw	r18, r28
    1a64:	27 50       	subi	r18, 0x07	; 7
    1a66:	3f 4f       	sbci	r19, 0xFF	; 255
    1a68:	f9 01       	movw	r30, r18
    1a6a:	91 83       	std	Z+1, r25	; 0x01
    1a6c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a6e:	ce 01       	movw	r24, r28
    1a70:	89 50       	subi	r24, 0x09	; 9
    1a72:	9f 4f       	sbci	r25, 0xFF	; 255
    1a74:	9e 01       	movw	r18, r28
    1a76:	29 50       	subi	r18, 0x09	; 9
    1a78:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7a:	f9 01       	movw	r30, r18
    1a7c:	20 81       	ld	r18, Z
    1a7e:	31 81       	ldd	r19, Z+1	; 0x01
    1a80:	21 50       	subi	r18, 0x01	; 1
    1a82:	31 09       	sbc	r19, r1
    1a84:	fc 01       	movw	r30, r24
    1a86:	31 83       	std	Z+1, r19	; 0x01
    1a88:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a8a:	ce 01       	movw	r24, r28
    1a8c:	89 50       	subi	r24, 0x09	; 9
    1a8e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a90:	fc 01       	movw	r30, r24
    1a92:	80 81       	ld	r24, Z
    1a94:	91 81       	ldd	r25, Z+1	; 0x01
    1a96:	00 97       	sbiw	r24, 0x00	; 0
    1a98:	a1 f6       	brne	.-88     	; 0x1a42 <__stack+0x1143>
    1a9a:	2c c0       	rjmp	.+88     	; 0x1af4 <__stack+0x11f5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a9c:	8e 01       	movw	r16, r28
    1a9e:	09 50       	subi	r16, 0x09	; 9
    1aa0:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa2:	ce 01       	movw	r24, r28
    1aa4:	8d 50       	subi	r24, 0x0D	; 13
    1aa6:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa8:	fc 01       	movw	r30, r24
    1aaa:	60 81       	ld	r22, Z
    1aac:	71 81       	ldd	r23, Z+1	; 0x01
    1aae:	82 81       	ldd	r24, Z+2	; 0x02
    1ab0:	93 81       	ldd	r25, Z+3	; 0x03
    1ab2:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    1ab6:	dc 01       	movw	r26, r24
    1ab8:	cb 01       	movw	r24, r22
    1aba:	f8 01       	movw	r30, r16
    1abc:	91 83       	std	Z+1, r25	; 0x01
    1abe:	80 83       	st	Z, r24
    1ac0:	ce 01       	movw	r24, r28
    1ac2:	85 50       	subi	r24, 0x05	; 5
    1ac4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac6:	9e 01       	movw	r18, r28
    1ac8:	29 50       	subi	r18, 0x09	; 9
    1aca:	3f 4f       	sbci	r19, 0xFF	; 255
    1acc:	f9 01       	movw	r30, r18
    1ace:	20 81       	ld	r18, Z
    1ad0:	31 81       	ldd	r19, Z+1	; 0x01
    1ad2:	fc 01       	movw	r30, r24
    1ad4:	31 83       	std	Z+1, r19	; 0x01
    1ad6:	20 83       	st	Z, r18
    1ad8:	ce 01       	movw	r24, r28
    1ada:	85 50       	subi	r24, 0x05	; 5
    1adc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ade:	fc 01       	movw	r30, r24
    1ae0:	80 81       	ld	r24, Z
    1ae2:	91 81       	ldd	r25, Z+1	; 0x01
    1ae4:	01 97       	sbiw	r24, 0x01	; 1
    1ae6:	f1 f7       	brne	.-4      	; 0x1ae4 <__stack+0x11e5>
    1ae8:	9e 01       	movw	r18, r28
    1aea:	25 50       	subi	r18, 0x05	; 5
    1aec:	3f 4f       	sbci	r19, 0xFF	; 255
    1aee:	f9 01       	movw	r30, r18
    1af0:	91 83       	std	Z+1, r25	; 0x01
    1af2:	80 83       	st	Z, r24
        _delay_ms(LONG_DELAY);
        PORTB = PORTB ^ (1<<LED_GREEN);
    1af4:	85 e2       	ldi	r24, 0x25	; 37
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	25 e2       	ldi	r18, 0x25	; 37
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	f9 01       	movw	r30, r18
    1afe:	30 81       	ld	r19, Z
    1b00:	20 e2       	ldi	r18, 0x20	; 32
    1b02:	23 27       	eor	r18, r19
    1b04:	fc 01       	movw	r30, r24
    1b06:	20 83       	st	Z, r18
    1b08:	9e 01       	movw	r18, r28
    1b0a:	23 50       	subi	r18, 0x03	; 3
    1b0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b0e:	80 e0       	ldi	r24, 0x00	; 0
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	aa ef       	ldi	r26, 0xFA	; 250
    1b14:	b3 e4       	ldi	r27, 0x43	; 67
    1b16:	f9 01       	movw	r30, r18
    1b18:	80 83       	st	Z, r24
    1b1a:	91 83       	std	Z+1, r25	; 0x01
    1b1c:	a2 83       	std	Z+2, r26	; 0x02
    1b1e:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b20:	8e 01       	movw	r16, r28
    1b22:	0f 5f       	subi	r16, 0xFF	; 255
    1b24:	1e 4f       	sbci	r17, 0xFE	; 254
    1b26:	ce 01       	movw	r24, r28
    1b28:	83 50       	subi	r24, 0x03	; 3
    1b2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b2c:	20 e0       	ldi	r18, 0x00	; 0
    1b2e:	30 e0       	ldi	r19, 0x00	; 0
    1b30:	4a e7       	ldi	r20, 0x7A	; 122
    1b32:	55 e4       	ldi	r21, 0x45	; 69
    1b34:	fc 01       	movw	r30, r24
    1b36:	60 81       	ld	r22, Z
    1b38:	71 81       	ldd	r23, Z+1	; 0x01
    1b3a:	82 81       	ldd	r24, Z+2	; 0x02
    1b3c:	93 81       	ldd	r25, Z+3	; 0x03
    1b3e:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    1b42:	dc 01       	movw	r26, r24
    1b44:	cb 01       	movw	r24, r22
    1b46:	f8 01       	movw	r30, r16
    1b48:	80 83       	st	Z, r24
    1b4a:	91 83       	std	Z+1, r25	; 0x01
    1b4c:	a2 83       	std	Z+2, r26	; 0x02
    1b4e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b50:	ce 01       	movw	r24, r28
    1b52:	8f 5f       	subi	r24, 0xFF	; 255
    1b54:	9e 4f       	sbci	r25, 0xFE	; 254
    1b56:	20 e0       	ldi	r18, 0x00	; 0
    1b58:	30 e0       	ldi	r19, 0x00	; 0
    1b5a:	40 e8       	ldi	r20, 0x80	; 128
    1b5c:	5f e3       	ldi	r21, 0x3F	; 63
    1b5e:	fc 01       	movw	r30, r24
    1b60:	60 81       	ld	r22, Z
    1b62:	71 81       	ldd	r23, Z+1	; 0x01
    1b64:	82 81       	ldd	r24, Z+2	; 0x02
    1b66:	93 81       	ldd	r25, Z+3	; 0x03
    1b68:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__cmpsf2>
    1b6c:	88 23       	and	r24, r24
    1b6e:	4c f4       	brge	.+18     	; 0x1b82 <__stack+0x1283>
		__ticks = 1;
    1b70:	ce 01       	movw	r24, r28
    1b72:	8b 5f       	subi	r24, 0xFB	; 251
    1b74:	9e 4f       	sbci	r25, 0xFE	; 254
    1b76:	21 e0       	ldi	r18, 0x01	; 1
    1b78:	30 e0       	ldi	r19, 0x00	; 0
    1b7a:	fc 01       	movw	r30, r24
    1b7c:	31 83       	std	Z+1, r19	; 0x01
    1b7e:	20 83       	st	Z, r18
    1b80:	6e c0       	rjmp	.+220    	; 0x1c5e <__stack+0x135f>
	else if (__tmp > 65535)
    1b82:	ce 01       	movw	r24, r28
    1b84:	8f 5f       	subi	r24, 0xFF	; 255
    1b86:	9e 4f       	sbci	r25, 0xFE	; 254
    1b88:	20 e0       	ldi	r18, 0x00	; 0
    1b8a:	3f ef       	ldi	r19, 0xFF	; 255
    1b8c:	4f e7       	ldi	r20, 0x7F	; 127
    1b8e:	57 e4       	ldi	r21, 0x47	; 71
    1b90:	fc 01       	movw	r30, r24
    1b92:	60 81       	ld	r22, Z
    1b94:	71 81       	ldd	r23, Z+1	; 0x01
    1b96:	82 81       	ldd	r24, Z+2	; 0x02
    1b98:	93 81       	ldd	r25, Z+3	; 0x03
    1b9a:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__gesf2>
    1b9e:	18 16       	cp	r1, r24
    1ba0:	0c f0       	brlt	.+2      	; 0x1ba4 <__stack+0x12a5>
    1ba2:	4b c0       	rjmp	.+150    	; 0x1c3a <__stack+0x133b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ba4:	ce 01       	movw	r24, r28
    1ba6:	83 50       	subi	r24, 0x03	; 3
    1ba8:	9f 4f       	sbci	r25, 0xFF	; 255
    1baa:	20 e0       	ldi	r18, 0x00	; 0
    1bac:	30 e0       	ldi	r19, 0x00	; 0
    1bae:	40 e2       	ldi	r20, 0x20	; 32
    1bb0:	51 e4       	ldi	r21, 0x41	; 65
    1bb2:	fc 01       	movw	r30, r24
    1bb4:	60 81       	ld	r22, Z
    1bb6:	71 81       	ldd	r23, Z+1	; 0x01
    1bb8:	82 81       	ldd	r24, Z+2	; 0x02
    1bba:	93 81       	ldd	r25, Z+3	; 0x03
    1bbc:	0e 94 cc 0e 	call	0x1d98	; 0x1d98 <__mulsf3>
    1bc0:	dc 01       	movw	r26, r24
    1bc2:	cb 01       	movw	r24, r22
    1bc4:	8e 01       	movw	r16, r28
    1bc6:	0b 5f       	subi	r16, 0xFB	; 251
    1bc8:	1e 4f       	sbci	r17, 0xFE	; 254
    1bca:	bc 01       	movw	r22, r24
    1bcc:	cd 01       	movw	r24, r26
    1bce:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    1bd2:	dc 01       	movw	r26, r24
    1bd4:	cb 01       	movw	r24, r22
    1bd6:	f8 01       	movw	r30, r16
    1bd8:	91 83       	std	Z+1, r25	; 0x01
    1bda:	80 83       	st	Z, r24
    1bdc:	24 c0       	rjmp	.+72     	; 0x1c26 <__stack+0x1327>
    1bde:	ce 01       	movw	r24, r28
    1be0:	89 5f       	subi	r24, 0xF9	; 249
    1be2:	9e 4f       	sbci	r25, 0xFE	; 254
    1be4:	20 e9       	ldi	r18, 0x90	; 144
    1be6:	31 e0       	ldi	r19, 0x01	; 1
    1be8:	fc 01       	movw	r30, r24
    1bea:	31 83       	std	Z+1, r19	; 0x01
    1bec:	20 83       	st	Z, r18
    1bee:	ce 01       	movw	r24, r28
    1bf0:	89 5f       	subi	r24, 0xF9	; 249
    1bf2:	9e 4f       	sbci	r25, 0xFE	; 254
    1bf4:	fc 01       	movw	r30, r24
    1bf6:	80 81       	ld	r24, Z
    1bf8:	91 81       	ldd	r25, Z+1	; 0x01
    1bfa:	01 97       	sbiw	r24, 0x01	; 1
    1bfc:	f1 f7       	brne	.-4      	; 0x1bfa <__stack+0x12fb>
    1bfe:	9e 01       	movw	r18, r28
    1c00:	29 5f       	subi	r18, 0xF9	; 249
    1c02:	3e 4f       	sbci	r19, 0xFE	; 254
    1c04:	f9 01       	movw	r30, r18
    1c06:	91 83       	std	Z+1, r25	; 0x01
    1c08:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c0a:	ce 01       	movw	r24, r28
    1c0c:	8b 5f       	subi	r24, 0xFB	; 251
    1c0e:	9e 4f       	sbci	r25, 0xFE	; 254
    1c10:	9e 01       	movw	r18, r28
    1c12:	2b 5f       	subi	r18, 0xFB	; 251
    1c14:	3e 4f       	sbci	r19, 0xFE	; 254
    1c16:	f9 01       	movw	r30, r18
    1c18:	20 81       	ld	r18, Z
    1c1a:	31 81       	ldd	r19, Z+1	; 0x01
    1c1c:	21 50       	subi	r18, 0x01	; 1
    1c1e:	31 09       	sbc	r19, r1
    1c20:	fc 01       	movw	r30, r24
    1c22:	31 83       	std	Z+1, r19	; 0x01
    1c24:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c26:	ce 01       	movw	r24, r28
    1c28:	8b 5f       	subi	r24, 0xFB	; 251
    1c2a:	9e 4f       	sbci	r25, 0xFE	; 254
    1c2c:	fc 01       	movw	r30, r24
    1c2e:	80 81       	ld	r24, Z
    1c30:	91 81       	ldd	r25, Z+1	; 0x01
    1c32:	00 97       	sbiw	r24, 0x00	; 0
    1c34:	a1 f6       	brne	.-88     	; 0x1bde <__stack+0x12df>
        _delay_ms(SPACE_DELAY);

    }
    1c36:	0c 94 5f 00 	jmp	0xbe	; 0xbe <main+0x3e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c3a:	8e 01       	movw	r16, r28
    1c3c:	0b 5f       	subi	r16, 0xFB	; 251
    1c3e:	1e 4f       	sbci	r17, 0xFE	; 254
    1c40:	ce 01       	movw	r24, r28
    1c42:	8f 5f       	subi	r24, 0xFF	; 255
    1c44:	9e 4f       	sbci	r25, 0xFE	; 254
    1c46:	fc 01       	movw	r30, r24
    1c48:	60 81       	ld	r22, Z
    1c4a:	71 81       	ldd	r23, Z+1	; 0x01
    1c4c:	82 81       	ldd	r24, Z+2	; 0x02
    1c4e:	93 81       	ldd	r25, Z+3	; 0x03
    1c50:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <__fixunssfsi>
    1c54:	dc 01       	movw	r26, r24
    1c56:	cb 01       	movw	r24, r22
    1c58:	f8 01       	movw	r30, r16
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	80 83       	st	Z, r24
    1c5e:	ce 01       	movw	r24, r28
    1c60:	87 5f       	subi	r24, 0xF7	; 247
    1c62:	9e 4f       	sbci	r25, 0xFE	; 254
    1c64:	9e 01       	movw	r18, r28
    1c66:	2b 5f       	subi	r18, 0xFB	; 251
    1c68:	3e 4f       	sbci	r19, 0xFE	; 254
    1c6a:	f9 01       	movw	r30, r18
    1c6c:	20 81       	ld	r18, Z
    1c6e:	31 81       	ldd	r19, Z+1	; 0x01
    1c70:	fc 01       	movw	r30, r24
    1c72:	31 83       	std	Z+1, r19	; 0x01
    1c74:	20 83       	st	Z, r18
    1c76:	ce 01       	movw	r24, r28
    1c78:	87 5f       	subi	r24, 0xF7	; 247
    1c7a:	9e 4f       	sbci	r25, 0xFE	; 254
    1c7c:	fc 01       	movw	r30, r24
    1c7e:	80 81       	ld	r24, Z
    1c80:	91 81       	ldd	r25, Z+1	; 0x01
    1c82:	01 97       	sbiw	r24, 0x01	; 1
    1c84:	f1 f7       	brne	.-4      	; 0x1c82 <__stack+0x1383>
    1c86:	9e 01       	movw	r18, r28
    1c88:	27 5f       	subi	r18, 0xF7	; 247
    1c8a:	3e 4f       	sbci	r19, 0xFE	; 254
    1c8c:	f9 01       	movw	r30, r18
    1c8e:	91 83       	std	Z+1, r25	; 0x01
    1c90:	80 83       	st	Z, r24
    1c92:	0c 94 5f 00 	jmp	0xbe	; 0xbe <main+0x3e>

00001c96 <__cmpsf2>:
    1c96:	2f d0       	rcall	.+94     	; 0x1cf6 <__fp_cmp>
    1c98:	08 f4       	brcc	.+2      	; 0x1c9c <__cmpsf2+0x6>
    1c9a:	81 e0       	ldi	r24, 0x01	; 1
    1c9c:	08 95       	ret

00001c9e <__fixunssfsi>:
    1c9e:	57 d0       	rcall	.+174    	; 0x1d4e <__fp_splitA>
    1ca0:	88 f0       	brcs	.+34     	; 0x1cc4 <__fixunssfsi+0x26>
    1ca2:	9f 57       	subi	r25, 0x7F	; 127
    1ca4:	90 f0       	brcs	.+36     	; 0x1cca <__fixunssfsi+0x2c>
    1ca6:	b9 2f       	mov	r27, r25
    1ca8:	99 27       	eor	r25, r25
    1caa:	b7 51       	subi	r27, 0x17	; 23
    1cac:	a0 f0       	brcs	.+40     	; 0x1cd6 <__fixunssfsi+0x38>
    1cae:	d1 f0       	breq	.+52     	; 0x1ce4 <__fixunssfsi+0x46>
    1cb0:	66 0f       	add	r22, r22
    1cb2:	77 1f       	adc	r23, r23
    1cb4:	88 1f       	adc	r24, r24
    1cb6:	99 1f       	adc	r25, r25
    1cb8:	1a f0       	brmi	.+6      	; 0x1cc0 <__fixunssfsi+0x22>
    1cba:	ba 95       	dec	r27
    1cbc:	c9 f7       	brne	.-14     	; 0x1cb0 <__fixunssfsi+0x12>
    1cbe:	12 c0       	rjmp	.+36     	; 0x1ce4 <__fixunssfsi+0x46>
    1cc0:	b1 30       	cpi	r27, 0x01	; 1
    1cc2:	81 f0       	breq	.+32     	; 0x1ce4 <__fixunssfsi+0x46>
    1cc4:	5e d0       	rcall	.+188    	; 0x1d82 <__fp_zero>
    1cc6:	b1 e0       	ldi	r27, 0x01	; 1
    1cc8:	08 95       	ret
    1cca:	5b c0       	rjmp	.+182    	; 0x1d82 <__fp_zero>
    1ccc:	67 2f       	mov	r22, r23
    1cce:	78 2f       	mov	r23, r24
    1cd0:	88 27       	eor	r24, r24
    1cd2:	b8 5f       	subi	r27, 0xF8	; 248
    1cd4:	39 f0       	breq	.+14     	; 0x1ce4 <__fixunssfsi+0x46>
    1cd6:	b9 3f       	cpi	r27, 0xF9	; 249
    1cd8:	cc f3       	brlt	.-14     	; 0x1ccc <__fixunssfsi+0x2e>
    1cda:	86 95       	lsr	r24
    1cdc:	77 95       	ror	r23
    1cde:	67 95       	ror	r22
    1ce0:	b3 95       	inc	r27
    1ce2:	d9 f7       	brne	.-10     	; 0x1cda <__fixunssfsi+0x3c>
    1ce4:	3e f4       	brtc	.+14     	; 0x1cf4 <__fixunssfsi+0x56>
    1ce6:	90 95       	com	r25
    1ce8:	80 95       	com	r24
    1cea:	70 95       	com	r23
    1cec:	61 95       	neg	r22
    1cee:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf0:	8f 4f       	sbci	r24, 0xFF	; 255
    1cf2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cf4:	08 95       	ret

00001cf6 <__fp_cmp>:
    1cf6:	99 0f       	add	r25, r25
    1cf8:	00 08       	sbc	r0, r0
    1cfa:	55 0f       	add	r21, r21
    1cfc:	aa 0b       	sbc	r26, r26
    1cfe:	e0 e8       	ldi	r30, 0x80	; 128
    1d00:	fe ef       	ldi	r31, 0xFE	; 254
    1d02:	16 16       	cp	r1, r22
    1d04:	17 06       	cpc	r1, r23
    1d06:	e8 07       	cpc	r30, r24
    1d08:	f9 07       	cpc	r31, r25
    1d0a:	c0 f0       	brcs	.+48     	; 0x1d3c <__fp_cmp+0x46>
    1d0c:	12 16       	cp	r1, r18
    1d0e:	13 06       	cpc	r1, r19
    1d10:	e4 07       	cpc	r30, r20
    1d12:	f5 07       	cpc	r31, r21
    1d14:	98 f0       	brcs	.+38     	; 0x1d3c <__fp_cmp+0x46>
    1d16:	62 1b       	sub	r22, r18
    1d18:	73 0b       	sbc	r23, r19
    1d1a:	84 0b       	sbc	r24, r20
    1d1c:	95 0b       	sbc	r25, r21
    1d1e:	39 f4       	brne	.+14     	; 0x1d2e <__fp_cmp+0x38>
    1d20:	0a 26       	eor	r0, r26
    1d22:	61 f0       	breq	.+24     	; 0x1d3c <__fp_cmp+0x46>
    1d24:	23 2b       	or	r18, r19
    1d26:	24 2b       	or	r18, r20
    1d28:	25 2b       	or	r18, r21
    1d2a:	21 f4       	brne	.+8      	; 0x1d34 <__fp_cmp+0x3e>
    1d2c:	08 95       	ret
    1d2e:	0a 26       	eor	r0, r26
    1d30:	09 f4       	brne	.+2      	; 0x1d34 <__fp_cmp+0x3e>
    1d32:	a1 40       	sbci	r26, 0x01	; 1
    1d34:	a6 95       	lsr	r26
    1d36:	8f ef       	ldi	r24, 0xFF	; 255
    1d38:	81 1d       	adc	r24, r1
    1d3a:	81 1d       	adc	r24, r1
    1d3c:	08 95       	ret

00001d3e <__fp_split3>:
    1d3e:	57 fd       	sbrc	r21, 7
    1d40:	90 58       	subi	r25, 0x80	; 128
    1d42:	44 0f       	add	r20, r20
    1d44:	55 1f       	adc	r21, r21
    1d46:	59 f0       	breq	.+22     	; 0x1d5e <__fp_splitA+0x10>
    1d48:	5f 3f       	cpi	r21, 0xFF	; 255
    1d4a:	71 f0       	breq	.+28     	; 0x1d68 <__fp_splitA+0x1a>
    1d4c:	47 95       	ror	r20

00001d4e <__fp_splitA>:
    1d4e:	88 0f       	add	r24, r24
    1d50:	97 fb       	bst	r25, 7
    1d52:	99 1f       	adc	r25, r25
    1d54:	61 f0       	breq	.+24     	; 0x1d6e <__fp_splitA+0x20>
    1d56:	9f 3f       	cpi	r25, 0xFF	; 255
    1d58:	79 f0       	breq	.+30     	; 0x1d78 <__fp_splitA+0x2a>
    1d5a:	87 95       	ror	r24
    1d5c:	08 95       	ret
    1d5e:	12 16       	cp	r1, r18
    1d60:	13 06       	cpc	r1, r19
    1d62:	14 06       	cpc	r1, r20
    1d64:	55 1f       	adc	r21, r21
    1d66:	f2 cf       	rjmp	.-28     	; 0x1d4c <__fp_split3+0xe>
    1d68:	46 95       	lsr	r20
    1d6a:	f1 df       	rcall	.-30     	; 0x1d4e <__fp_splitA>
    1d6c:	08 c0       	rjmp	.+16     	; 0x1d7e <__fp_splitA+0x30>
    1d6e:	16 16       	cp	r1, r22
    1d70:	17 06       	cpc	r1, r23
    1d72:	18 06       	cpc	r1, r24
    1d74:	99 1f       	adc	r25, r25
    1d76:	f1 cf       	rjmp	.-30     	; 0x1d5a <__fp_splitA+0xc>
    1d78:	86 95       	lsr	r24
    1d7a:	71 05       	cpc	r23, r1
    1d7c:	61 05       	cpc	r22, r1
    1d7e:	08 94       	sec
    1d80:	08 95       	ret

00001d82 <__fp_zero>:
    1d82:	e8 94       	clt

00001d84 <__fp_szero>:
    1d84:	bb 27       	eor	r27, r27
    1d86:	66 27       	eor	r22, r22
    1d88:	77 27       	eor	r23, r23
    1d8a:	cb 01       	movw	r24, r22
    1d8c:	97 f9       	bld	r25, 7
    1d8e:	08 95       	ret

00001d90 <__gesf2>:
    1d90:	b2 df       	rcall	.-156    	; 0x1cf6 <__fp_cmp>
    1d92:	08 f4       	brcc	.+2      	; 0x1d96 <__gesf2+0x6>
    1d94:	8f ef       	ldi	r24, 0xFF	; 255
    1d96:	08 95       	ret

00001d98 <__mulsf3>:
    1d98:	0b d0       	rcall	.+22     	; 0x1db0 <__mulsf3x>
    1d9a:	78 c0       	rjmp	.+240    	; 0x1e8c <__fp_round>
    1d9c:	69 d0       	rcall	.+210    	; 0x1e70 <__fp_pscA>
    1d9e:	28 f0       	brcs	.+10     	; 0x1daa <__mulsf3+0x12>
    1da0:	6e d0       	rcall	.+220    	; 0x1e7e <__fp_pscB>
    1da2:	18 f0       	brcs	.+6      	; 0x1daa <__mulsf3+0x12>
    1da4:	95 23       	and	r25, r21
    1da6:	09 f0       	breq	.+2      	; 0x1daa <__mulsf3+0x12>
    1da8:	5a c0       	rjmp	.+180    	; 0x1e5e <__fp_inf>
    1daa:	5f c0       	rjmp	.+190    	; 0x1e6a <__fp_nan>
    1dac:	11 24       	eor	r1, r1
    1dae:	ea cf       	rjmp	.-44     	; 0x1d84 <__fp_szero>

00001db0 <__mulsf3x>:
    1db0:	c6 df       	rcall	.-116    	; 0x1d3e <__fp_split3>
    1db2:	a0 f3       	brcs	.-24     	; 0x1d9c <__mulsf3+0x4>

00001db4 <__mulsf3_pse>:
    1db4:	95 9f       	mul	r25, r21
    1db6:	d1 f3       	breq	.-12     	; 0x1dac <__mulsf3+0x14>
    1db8:	95 0f       	add	r25, r21
    1dba:	50 e0       	ldi	r21, 0x00	; 0
    1dbc:	55 1f       	adc	r21, r21
    1dbe:	62 9f       	mul	r22, r18
    1dc0:	f0 01       	movw	r30, r0
    1dc2:	72 9f       	mul	r23, r18
    1dc4:	bb 27       	eor	r27, r27
    1dc6:	f0 0d       	add	r31, r0
    1dc8:	b1 1d       	adc	r27, r1
    1dca:	63 9f       	mul	r22, r19
    1dcc:	aa 27       	eor	r26, r26
    1dce:	f0 0d       	add	r31, r0
    1dd0:	b1 1d       	adc	r27, r1
    1dd2:	aa 1f       	adc	r26, r26
    1dd4:	64 9f       	mul	r22, r20
    1dd6:	66 27       	eor	r22, r22
    1dd8:	b0 0d       	add	r27, r0
    1dda:	a1 1d       	adc	r26, r1
    1ddc:	66 1f       	adc	r22, r22
    1dde:	82 9f       	mul	r24, r18
    1de0:	22 27       	eor	r18, r18
    1de2:	b0 0d       	add	r27, r0
    1de4:	a1 1d       	adc	r26, r1
    1de6:	62 1f       	adc	r22, r18
    1de8:	73 9f       	mul	r23, r19
    1dea:	b0 0d       	add	r27, r0
    1dec:	a1 1d       	adc	r26, r1
    1dee:	62 1f       	adc	r22, r18
    1df0:	83 9f       	mul	r24, r19
    1df2:	a0 0d       	add	r26, r0
    1df4:	61 1d       	adc	r22, r1
    1df6:	22 1f       	adc	r18, r18
    1df8:	74 9f       	mul	r23, r20
    1dfa:	33 27       	eor	r19, r19
    1dfc:	a0 0d       	add	r26, r0
    1dfe:	61 1d       	adc	r22, r1
    1e00:	23 1f       	adc	r18, r19
    1e02:	84 9f       	mul	r24, r20
    1e04:	60 0d       	add	r22, r0
    1e06:	21 1d       	adc	r18, r1
    1e08:	82 2f       	mov	r24, r18
    1e0a:	76 2f       	mov	r23, r22
    1e0c:	6a 2f       	mov	r22, r26
    1e0e:	11 24       	eor	r1, r1
    1e10:	9f 57       	subi	r25, 0x7F	; 127
    1e12:	50 40       	sbci	r21, 0x00	; 0
    1e14:	8a f0       	brmi	.+34     	; 0x1e38 <__mulsf3_pse+0x84>
    1e16:	e1 f0       	breq	.+56     	; 0x1e50 <__mulsf3_pse+0x9c>
    1e18:	88 23       	and	r24, r24
    1e1a:	4a f0       	brmi	.+18     	; 0x1e2e <__mulsf3_pse+0x7a>
    1e1c:	ee 0f       	add	r30, r30
    1e1e:	ff 1f       	adc	r31, r31
    1e20:	bb 1f       	adc	r27, r27
    1e22:	66 1f       	adc	r22, r22
    1e24:	77 1f       	adc	r23, r23
    1e26:	88 1f       	adc	r24, r24
    1e28:	91 50       	subi	r25, 0x01	; 1
    1e2a:	50 40       	sbci	r21, 0x00	; 0
    1e2c:	a9 f7       	brne	.-22     	; 0x1e18 <__mulsf3_pse+0x64>
    1e2e:	9e 3f       	cpi	r25, 0xFE	; 254
    1e30:	51 05       	cpc	r21, r1
    1e32:	70 f0       	brcs	.+28     	; 0x1e50 <__mulsf3_pse+0x9c>
    1e34:	14 c0       	rjmp	.+40     	; 0x1e5e <__fp_inf>
    1e36:	a6 cf       	rjmp	.-180    	; 0x1d84 <__fp_szero>
    1e38:	5f 3f       	cpi	r21, 0xFF	; 255
    1e3a:	ec f3       	brlt	.-6      	; 0x1e36 <__mulsf3_pse+0x82>
    1e3c:	98 3e       	cpi	r25, 0xE8	; 232
    1e3e:	dc f3       	brlt	.-10     	; 0x1e36 <__mulsf3_pse+0x82>
    1e40:	86 95       	lsr	r24
    1e42:	77 95       	ror	r23
    1e44:	67 95       	ror	r22
    1e46:	b7 95       	ror	r27
    1e48:	f7 95       	ror	r31
    1e4a:	e7 95       	ror	r30
    1e4c:	9f 5f       	subi	r25, 0xFF	; 255
    1e4e:	c1 f7       	brne	.-16     	; 0x1e40 <__mulsf3_pse+0x8c>
    1e50:	fe 2b       	or	r31, r30
    1e52:	88 0f       	add	r24, r24
    1e54:	91 1d       	adc	r25, r1
    1e56:	96 95       	lsr	r25
    1e58:	87 95       	ror	r24
    1e5a:	97 f9       	bld	r25, 7
    1e5c:	08 95       	ret

00001e5e <__fp_inf>:
    1e5e:	97 f9       	bld	r25, 7
    1e60:	9f 67       	ori	r25, 0x7F	; 127
    1e62:	80 e8       	ldi	r24, 0x80	; 128
    1e64:	70 e0       	ldi	r23, 0x00	; 0
    1e66:	60 e0       	ldi	r22, 0x00	; 0
    1e68:	08 95       	ret

00001e6a <__fp_nan>:
    1e6a:	9f ef       	ldi	r25, 0xFF	; 255
    1e6c:	80 ec       	ldi	r24, 0xC0	; 192
    1e6e:	08 95       	ret

00001e70 <__fp_pscA>:
    1e70:	00 24       	eor	r0, r0
    1e72:	0a 94       	dec	r0
    1e74:	16 16       	cp	r1, r22
    1e76:	17 06       	cpc	r1, r23
    1e78:	18 06       	cpc	r1, r24
    1e7a:	09 06       	cpc	r0, r25
    1e7c:	08 95       	ret

00001e7e <__fp_pscB>:
    1e7e:	00 24       	eor	r0, r0
    1e80:	0a 94       	dec	r0
    1e82:	12 16       	cp	r1, r18
    1e84:	13 06       	cpc	r1, r19
    1e86:	14 06       	cpc	r1, r20
    1e88:	05 06       	cpc	r0, r21
    1e8a:	08 95       	ret

00001e8c <__fp_round>:
    1e8c:	09 2e       	mov	r0, r25
    1e8e:	03 94       	inc	r0
    1e90:	00 0c       	add	r0, r0
    1e92:	11 f4       	brne	.+4      	; 0x1e98 <__fp_round+0xc>
    1e94:	88 23       	and	r24, r24
    1e96:	52 f0       	brmi	.+20     	; 0x1eac <__fp_round+0x20>
    1e98:	bb 0f       	add	r27, r27
    1e9a:	40 f4       	brcc	.+16     	; 0x1eac <__fp_round+0x20>
    1e9c:	bf 2b       	or	r27, r31
    1e9e:	11 f4       	brne	.+4      	; 0x1ea4 <__fp_round+0x18>
    1ea0:	60 ff       	sbrs	r22, 0
    1ea2:	04 c0       	rjmp	.+8      	; 0x1eac <__fp_round+0x20>
    1ea4:	6f 5f       	subi	r22, 0xFF	; 255
    1ea6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ea8:	8f 4f       	sbci	r24, 0xFF	; 255
    1eaa:	9f 4f       	sbci	r25, 0xFF	; 255
    1eac:	08 95       	ret

00001eae <_exit>:
    1eae:	f8 94       	cli

00001eb0 <__stop_program>:
    1eb0:	ff cf       	rjmp	.-2      	; 0x1eb0 <__stop_program>
